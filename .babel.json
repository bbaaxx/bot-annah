{
  "{\"filename\":\"/app/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./bot",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "wakeUpBot"
              }
            ]
          },
          {
            "source": "./servers",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getServers"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/app.js",
      "filenameRelative": "/app/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _bot = require('./bot');\n\nvar _bot2 = _interopRequireDefault(_bot);\n\nvar _servers = require('./servers');\n\nvar _servers2 = _interopRequireDefault(_servers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _servers2.default)().then(_bot2.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJ0aGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLHlCQUFhQSxJQUFiIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdha2VVcEJvdCBmcm9tICcuL2JvdCc7XG5pbXBvcnQgZ2V0U2VydmVycyBmcm9tICcuL3NlcnZlcnMnO1xuXG5nZXRTZXJ2ZXJzKCkudGhlbih3YWtlVXBCb3QpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "then"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;;;AAEA,yBAAaA,IAAb",
      "file": "app.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import wakeUpBot from './bot';\nimport getServers from './servers';\n\ngetServers().then(wakeUpBot);\n"
      ]
    },
    "mtime": 1524555005311
  },
  "{\"filename\":\"/app/bot/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "rxjs/Rx",
            "imported": [
              "pipe"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "pipe",
                "local": "pipe"
              }
            ]
          },
          {
            "source": "rxjs/observable/of",
            "imported": [
              "of"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "of",
                "local": "of"
              }
            ]
          },
          {
            "source": "rxjs/observable/merge",
            "imported": [
              "merge"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "merge",
                "local": "merge"
              }
            ]
          },
          {
            "source": "rxjs/operators",
            "imported": [
              "filter",
              "map",
              "mergeAll",
              "catchError"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "filter",
                "local": "filter"
              },
              {
                "kind": "named",
                "imported": "map",
                "local": "map"
              },
              {
                "kind": "named",
                "imported": "mergeAll",
                "local": "mergeAll"
              },
              {
                "kind": "named",
                "imported": "catchError",
                "local": "catchError"
              }
            ]
          },
          {
            "source": "./adapters/discordJs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getDiscordAdapter"
              }
            ]
          },
          {
            "source": "./adapters/fbMessenger",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getFbAdapter"
              }
            ]
          },
          {
            "source": "./messageContext",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getContextCreator"
              }
            ]
          },
          {
            "source": "./impulses",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "attemptToTrigerImpulse"
              }
            ]
          },
          {
            "source": "./filterMessages",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "filterMessages"
              }
            ]
          },
          {
            "source": "./skills/conversation",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "conversationToContext"
              }
            ]
          },
          {
            "source": "./nlp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncProcessWithNlp"
              }
            ]
          },
          {
            "source": "./skills",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncAttemptSkillHandling"
              }
            ]
          },
          {
            "source": "./resolveReaction",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncResolveReaction"
              }
            ]
          },
          {
            "source": "./nlpBasedResponse",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncResortToNlpResponse"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/index.js",
      "filenameRelative": "/app/bot/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Rx = require('rxjs/Rx');\n\nvar _of = require('rxjs/observable/of');\n\nvar _merge = require('rxjs/observable/merge');\n\nvar _operators = require('rxjs/operators');\n\nvar _discordJs = require('./adapters/discordJs');\n\nvar _discordJs2 = _interopRequireDefault(_discordJs);\n\nvar _fbMessenger = require('./adapters/fbMessenger');\n\nvar _fbMessenger2 = _interopRequireDefault(_fbMessenger);\n\nvar _messageContext = require('./messageContext');\n\nvar _messageContext2 = _interopRequireDefault(_messageContext);\n\nvar _impulses = require('./impulses');\n\nvar _impulses2 = _interopRequireDefault(_impulses);\n\nvar _filterMessages = require('./filterMessages');\n\nvar _filterMessages2 = _interopRequireDefault(_filterMessages);\n\nvar _conversation = require('./skills/conversation');\n\nvar _conversation2 = _interopRequireDefault(_conversation);\n\nvar _nlp = require('./nlp');\n\nvar _nlp2 = _interopRequireDefault(_nlp);\n\nvar _skills = require('./skills');\n\nvar _skills2 = _interopRequireDefault(_skills);\n\nvar _resolveReaction = require('./resolveReaction');\n\nvar _resolveReaction2 = _interopRequireDefault(_resolveReaction);\n\nvar _nlpBasedResponse = require('./nlpBasedResponse');\n\nvar _nlpBasedResponse2 = _interopRequireDefault(_nlpBasedResponse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Async Stuff\nconst token = process.env.DISCORD_BOT_TOKEN;\nconst game = {\n  type: 'PLAYING',\n  name: 'with your mind'\n};\n\nexports.default = async function (servers) {\n  const discordAdapter = (0, _discordJs2.default)();\n  const fbAdapter = (0, _fbMessenger2.default)(servers);\n  const { inputs$, reactions$, commands$ } = discordAdapter;\n  const createMessageContext = (0, _messageContext2.default)(servers);\n\n  const messagesPipeline = (0, _Rx.pipe)((0, _operators.filter)(i => i.type === 'incoming-message'), (0, _operators.map)(createMessageContext), (0, _operators.map)(_impulses2.default), (0, _operators.map)(_conversation2.default), (0, _operators.map)(_filterMessages2.default),\n  // Go async ...\n  (0, _operators.map)(_nlp2.default), (0, _operators.map)(_skills2.default), (0, _operators.map)(_nlpBasedResponse2.default), (0, _operators.map)(_resolveReaction2.default),\n  // ... then flatten\n  (0, _operators.mergeAll)(), (0, _operators.catchError)(error => (0, _of.of)({ type: 'error', error })));\n\n  const eventsPipeline = (0, _Rx.pipe)((0, _operators.filter)(i => i.type !== 'incoming-message'), (0, _operators.catchError)(error => (0, _of.of)({ type: 'error', error })));\n\n  (0, _merge.merge)(inputs$.let(messagesPipeline), inputs$.let(eventsPipeline)).subscribe(reactions$);\n  (0, _merge.merge)(fbAdapter.inputs$.let(messagesPipeline), fbAdapter.inputs$.let(eventsPipeline)).subscribe(fbAdapter.reactions$);\n\n  commands$.next({ type: 'connect', token });\n\n  return { inputs$, reactions$ };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRva2VuIiwicHJvY2VzcyIsImVudiIsIkRJU0NPUkRfQk9UX1RPS0VOIiwiZ2FtZSIsInR5cGUiLCJuYW1lIiwic2VydmVycyIsImRpc2NvcmRBZGFwdGVyIiwiZmJBZGFwdGVyIiwiaW5wdXRzJCIsInJlYWN0aW9ucyQiLCJjb21tYW5kcyQiLCJjcmVhdGVNZXNzYWdlQ29udGV4dCIsIm1lc3NhZ2VzUGlwZWxpbmUiLCJpIiwiZXJyb3IiLCJldmVudHNQaXBlbGluZSIsImxldCIsInN1YnNjcmliZSIsIm5leHQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFKQTtBQU1BLE1BQU1BLFFBQVFDLFFBQVFDLEdBQVIsQ0FBWUMsaUJBQTFCO0FBQ0EsTUFBTUMsT0FBTztBQUNYQyxRQUFNLFNBREs7QUFFWEMsUUFBTTtBQUZLLENBQWI7O2tCQUtlLGdCQUFlQyxPQUFmLEVBQXdCO0FBQ3JDLFFBQU1DLGlCQUFpQiwwQkFBdkI7QUFDQSxRQUFNQyxZQUFZLDJCQUFhRixPQUFiLENBQWxCO0FBQ0EsUUFBTSxFQUFFRyxPQUFGLEVBQVdDLFVBQVgsRUFBdUJDLFNBQXZCLEtBQXFDSixjQUEzQztBQUNBLFFBQU1LLHVCQUF1Qiw4QkFBa0JOLE9BQWxCLENBQTdCOztBQUVBLFFBQU1PLG1CQUFtQixjQUN2Qix1QkFBT0MsS0FBS0EsRUFBRVYsSUFBRixLQUFXLGtCQUF2QixDQUR1QixFQUd2QixvQkFBSVEsb0JBQUosQ0FIdUIsRUFJdkIsdUNBSnVCLEVBS3ZCLDJDQUx1QixFQU12Qiw2Q0FOdUI7QUFPdkI7QUFDQSxvQ0FSdUIsRUFTdkIscUNBVHVCLEVBVXZCLCtDQVZ1QixFQVd2Qiw4Q0FYdUI7QUFZdkI7QUFDQSw0QkFidUIsRUFldkIsMkJBQVdHLFNBQVMsWUFBRyxFQUFFWCxNQUFNLE9BQVIsRUFBaUJXLEtBQWpCLEVBQUgsQ0FBcEIsQ0FmdUIsQ0FBekI7O0FBa0JBLFFBQU1DLGlCQUFpQixjQUNyQix1QkFBT0YsS0FBS0EsRUFBRVYsSUFBRixLQUFXLGtCQUF2QixDQURxQixFQUVyQiwyQkFBV1csU0FBUyxZQUFHLEVBQUVYLE1BQU0sT0FBUixFQUFpQlcsS0FBakIsRUFBSCxDQUFwQixDQUZxQixDQUF2Qjs7QUFLQSxvQkFBTU4sUUFBUVEsR0FBUixDQUFZSixnQkFBWixDQUFOLEVBQXFDSixRQUFRUSxHQUFSLENBQVlELGNBQVosQ0FBckMsRUFBa0VFLFNBQWxFLENBQ0VSLFVBREY7QUFHQSxvQkFBTUYsVUFBVUMsT0FBVixDQUFrQlEsR0FBbEIsQ0FBc0JKLGdCQUF0QixDQUFOLEVBQStDTCxVQUFVQyxPQUFWLENBQWtCUSxHQUFsQixDQUFzQkQsY0FBdEIsQ0FBL0MsRUFBc0ZFLFNBQXRGLENBQ0VWLFVBQVVFLFVBRFo7O0FBSUFDLFlBQVVRLElBQVYsQ0FBZSxFQUFFZixNQUFNLFNBQVIsRUFBbUJMLEtBQW5CLEVBQWY7O0FBRUEsU0FBTyxFQUFFVSxPQUFGLEVBQVdDLFVBQVgsRUFBUDtBQUNELEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwaXBlIH0gZnJvbSAncnhqcy9SeCc7XG5pbXBvcnQgeyBvZiB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9vZic7XG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9tZXJnZSc7XG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCwgbWVyZ2VBbGwsIGNhdGNoRXJyb3IgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCBnZXREaXNjb3JkQWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL2Rpc2NvcmRKcyc7XG5pbXBvcnQgZ2V0RmJBZGFwdGVyIGZyb20gJy4vYWRhcHRlcnMvZmJNZXNzZW5nZXInO1xuXG5pbXBvcnQgZ2V0Q29udGV4dENyZWF0b3IgZnJvbSAnLi9tZXNzYWdlQ29udGV4dCc7XG5pbXBvcnQgYXR0ZW1wdFRvVHJpZ2VySW1wdWxzZSBmcm9tICcuL2ltcHVsc2VzJztcbmltcG9ydCBmaWx0ZXJNZXNzYWdlcyBmcm9tICcuL2ZpbHRlck1lc3NhZ2VzJztcbmltcG9ydCBjb252ZXJzYXRpb25Ub0NvbnRleHQgZnJvbSAnLi9za2lsbHMvY29udmVyc2F0aW9uJztcbi8vIEFzeW5jIFN0dWZmXG5pbXBvcnQgYXN5bmNQcm9jZXNzV2l0aE5scCBmcm9tICcuL25scCc7XG5pbXBvcnQgYXN5bmNBdHRlbXB0U2tpbGxIYW5kbGluZyBmcm9tICcuL3NraWxscyc7XG5pbXBvcnQgYXN5bmNSZXNvbHZlUmVhY3Rpb24gZnJvbSAnLi9yZXNvbHZlUmVhY3Rpb24nO1xuaW1wb3J0IGFzeW5jUmVzb3J0VG9ObHBSZXNwb25zZSBmcm9tICcuL25scEJhc2VkUmVzcG9uc2UnO1xuXG5jb25zdCB0b2tlbiA9IHByb2Nlc3MuZW52LkRJU0NPUkRfQk9UX1RPS0VOO1xuY29uc3QgZ2FtZSA9IHtcbiAgdHlwZTogJ1BMQVlJTkcnLFxuICBuYW1lOiAnd2l0aCB5b3VyIG1pbmQnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24oc2VydmVycykge1xuICBjb25zdCBkaXNjb3JkQWRhcHRlciA9IGdldERpc2NvcmRBZGFwdGVyKCk7XG4gIGNvbnN0IGZiQWRhcHRlciA9IGdldEZiQWRhcHRlcihzZXJ2ZXJzKTtcbiAgY29uc3QgeyBpbnB1dHMkLCByZWFjdGlvbnMkLCBjb21tYW5kcyQgfSA9IGRpc2NvcmRBZGFwdGVyO1xuICBjb25zdCBjcmVhdGVNZXNzYWdlQ29udGV4dCA9IGdldENvbnRleHRDcmVhdG9yKHNlcnZlcnMpO1xuXG4gIGNvbnN0IG1lc3NhZ2VzUGlwZWxpbmUgPSBwaXBlKFxuICAgIGZpbHRlcihpID0+IGkudHlwZSA9PT0gJ2luY29taW5nLW1lc3NhZ2UnKSxcblxuICAgIG1hcChjcmVhdGVNZXNzYWdlQ29udGV4dCksXG4gICAgbWFwKGF0dGVtcHRUb1RyaWdlckltcHVsc2UpLFxuICAgIG1hcChjb252ZXJzYXRpb25Ub0NvbnRleHQpLFxuICAgIG1hcChmaWx0ZXJNZXNzYWdlcyksXG4gICAgLy8gR28gYXN5bmMgLi4uXG4gICAgbWFwKGFzeW5jUHJvY2Vzc1dpdGhObHApLFxuICAgIG1hcChhc3luY0F0dGVtcHRTa2lsbEhhbmRsaW5nKSxcbiAgICBtYXAoYXN5bmNSZXNvcnRUb05scFJlc3BvbnNlKSxcbiAgICBtYXAoYXN5bmNSZXNvbHZlUmVhY3Rpb24pLFxuICAgIC8vIC4uLiB0aGVuIGZsYXR0ZW5cbiAgICBtZXJnZUFsbCgpLFxuXG4gICAgY2F0Y2hFcnJvcihlcnJvciA9PiBvZih7IHR5cGU6ICdlcnJvcicsIGVycm9yIH0pKSxcbiAgKTtcblxuICBjb25zdCBldmVudHNQaXBlbGluZSA9IHBpcGUoXG4gICAgZmlsdGVyKGkgPT4gaS50eXBlICE9PSAnaW5jb21pbmctbWVzc2FnZScpLFxuICAgIGNhdGNoRXJyb3IoZXJyb3IgPT4gb2YoeyB0eXBlOiAnZXJyb3InLCBlcnJvciB9KSksXG4gICk7XG5cbiAgbWVyZ2UoaW5wdXRzJC5sZXQobWVzc2FnZXNQaXBlbGluZSksIGlucHV0cyQubGV0KGV2ZW50c1BpcGVsaW5lKSkuc3Vic2NyaWJlKFxuICAgIHJlYWN0aW9ucyQsXG4gICk7XG4gIG1lcmdlKGZiQWRhcHRlci5pbnB1dHMkLmxldChtZXNzYWdlc1BpcGVsaW5lKSwgZmJBZGFwdGVyLmlucHV0cyQubGV0KGV2ZW50c1BpcGVsaW5lKSkuc3Vic2NyaWJlKFxuICAgIGZiQWRhcHRlci5yZWFjdGlvbnMkLFxuICApO1xuXG4gIGNvbW1hbmRzJC5uZXh0KHsgdHlwZTogJ2Nvbm5lY3QnLCB0b2tlbiB9KTtcblxuICByZXR1cm4geyBpbnB1dHMkLCByZWFjdGlvbnMkIH07XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "token",
        "process",
        "env",
        "DISCORD_BOT_TOKEN",
        "game",
        "type",
        "name",
        "servers",
        "discordAdapter",
        "fbAdapter",
        "inputs$",
        "reactions$",
        "commands$",
        "createMessageContext",
        "messagesPipeline",
        "i",
        "error",
        "eventsPipeline",
        "let",
        "subscribe",
        "next"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAMA,MAAMA,QAAQC,QAAQC,GAAR,CAAYC,iBAA1B;AACA,MAAMC,OAAO;AACXC,QAAM,SADK;AAEXC,QAAM;AAFK,CAAb;;kBAKe,gBAAeC,OAAf,EAAwB;AACrC,QAAMC,iBAAiB,0BAAvB;AACA,QAAMC,YAAY,2BAAaF,OAAb,CAAlB;AACA,QAAM,EAAEG,OAAF,EAAWC,UAAX,EAAuBC,SAAvB,KAAqCJ,cAA3C;AACA,QAAMK,uBAAuB,8BAAkBN,OAAlB,CAA7B;;AAEA,QAAMO,mBAAmB,cACvB,uBAAOC,KAAKA,EAAEV,IAAF,KAAW,kBAAvB,CADuB,EAGvB,oBAAIQ,oBAAJ,CAHuB,EAIvB,uCAJuB,EAKvB,2CALuB,EAMvB,6CANuB;AAOvB;AACA,oCARuB,EASvB,qCATuB,EAUvB,+CAVuB,EAWvB,8CAXuB;AAYvB;AACA,4BAbuB,EAevB,2BAAWG,SAAS,YAAG,EAAEX,MAAM,OAAR,EAAiBW,KAAjB,EAAH,CAApB,CAfuB,CAAzB;;AAkBA,QAAMC,iBAAiB,cACrB,uBAAOF,KAAKA,EAAEV,IAAF,KAAW,kBAAvB,CADqB,EAErB,2BAAWW,SAAS,YAAG,EAAEX,MAAM,OAAR,EAAiBW,KAAjB,EAAH,CAApB,CAFqB,CAAvB;;AAKA,oBAAMN,QAAQQ,GAAR,CAAYJ,gBAAZ,CAAN,EAAqCJ,QAAQQ,GAAR,CAAYD,cAAZ,CAArC,EAAkEE,SAAlE,CACER,UADF;AAGA,oBAAMF,UAAUC,OAAV,CAAkBQ,GAAlB,CAAsBJ,gBAAtB,CAAN,EAA+CL,UAAUC,OAAV,CAAkBQ,GAAlB,CAAsBD,cAAtB,CAA/C,EAAsFE,SAAtF,CACEV,UAAUE,UADZ;;AAIAC,YAAUQ,IAAV,CAAe,EAAEf,MAAM,SAAR,EAAmBL,KAAnB,EAAf;;AAEA,SAAO,EAAEU,OAAF,EAAWC,UAAX,EAAP;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "import { pipe } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter, map, mergeAll, catchError } from 'rxjs/operators';\n\nimport getDiscordAdapter from './adapters/discordJs';\nimport getFbAdapter from './adapters/fbMessenger';\n\nimport getContextCreator from './messageContext';\nimport attemptToTrigerImpulse from './impulses';\nimport filterMessages from './filterMessages';\nimport conversationToContext from './skills/conversation';\n// Async Stuff\nimport asyncProcessWithNlp from './nlp';\nimport asyncAttemptSkillHandling from './skills';\nimport asyncResolveReaction from './resolveReaction';\nimport asyncResortToNlpResponse from './nlpBasedResponse';\n\nconst token = process.env.DISCORD_BOT_TOKEN;\nconst game = {\n  type: 'PLAYING',\n  name: 'with your mind',\n};\n\nexport default async function(servers) {\n  const discordAdapter = getDiscordAdapter();\n  const fbAdapter = getFbAdapter(servers);\n  const { inputs$, reactions$, commands$ } = discordAdapter;\n  const createMessageContext = getContextCreator(servers);\n\n  const messagesPipeline = pipe(\n    filter(i => i.type === 'incoming-message'),\n\n    map(createMessageContext),\n    map(attemptToTrigerImpulse),\n    map(conversationToContext),\n    map(filterMessages),\n    // Go async ...\n    map(asyncProcessWithNlp),\n    map(asyncAttemptSkillHandling),\n    map(asyncResortToNlpResponse),\n    map(asyncResolveReaction),\n    // ... then flatten\n    mergeAll(),\n\n    catchError(error => of({ type: 'error', error })),\n  );\n\n  const eventsPipeline = pipe(\n    filter(i => i.type !== 'incoming-message'),\n    catchError(error => of({ type: 'error', error })),\n  );\n\n  merge(inputs$.let(messagesPipeline), inputs$.let(eventsPipeline)).subscribe(\n    reactions$,\n  );\n  merge(fbAdapter.inputs$.let(messagesPipeline), fbAdapter.inputs$.let(eventsPipeline)).subscribe(\n    fbAdapter.reactions$,\n  );\n\n  commands$.next({ type: 'connect', token });\n\n  return { inputs$, reactions$ };\n}\n"
      ]
    },
    "mtime": 1525135549746
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "discord.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Discord"
              }
            ]
          },
          {
            "source": "rxjs/Rx",
            "imported": [
              "Subject",
              "Observable"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Subject",
                "local": "Subject"
              },
              {
                "kind": "named",
                "imported": "Observable",
                "local": "Observable"
              }
            ]
          },
          {
            "source": "rxjs/observable/zip",
            "imported": [
              "zip"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "zip",
                "local": "zip"
              }
            ]
          },
          {
            "source": "rxjs/observable/merge",
            "imported": [
              "merge"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "merge",
                "local": "merge"
              }
            ]
          },
          {
            "source": "rxjs/observable/fromEvent",
            "imported": [
              "fromEvent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "fromEvent",
                "local": "fromEvent"
              }
            ]
          },
          {
            "source": "./handlers",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "actionHandler"
              }
            ]
          },
          {
            "source": "./actions",
            "imported": [
              "adapterReady",
              "publishMessage",
              "platformMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "adapterReady",
                "local": "adapterReady"
              },
              {
                "kind": "named",
                "imported": "publishMessage",
                "local": "publishMessage"
              },
              {
                "kind": "named",
                "imported": "platformMessage",
                "local": "platformMessage"
              }
            ]
          },
          {
            "source": "./messageHelpers",
            "imported": [
              "discardOwnMessages",
              "discardBotMessages"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "discardOwnMessages",
                "local": "discardOwnMessages"
              },
              {
                "kind": "named",
                "imported": "discardBotMessages",
                "local": "discardBotMessages"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/index.js",
      "filenameRelative": "/app/bot/adapters/discordJs/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _discord = require('discord.js');\n\nvar _discord2 = _interopRequireDefault(_discord);\n\nvar _Rx = require('rxjs/Rx');\n\nvar _zip = require('rxjs/observable/zip');\n\nvar _merge = require('rxjs/observable/merge');\n\nvar _fromEvent = require('rxjs/observable/fromEvent');\n\nvar _handlers = require('./handlers');\n\nvar _handlers2 = _interopRequireDefault(_handlers);\n\nvar _actions = require('./actions');\n\nvar _messageHelpers = require('./messageHelpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst client = new _discord2.default.Client();\n\nconst commands$ = new _Rx.Subject();\nconst reactions$ = new _Rx.Subject();\n\n// TODO: Let the bot handle the errors\nclient.on('error', console.error);\n\nconst platformMessages$ = (0, _fromEvent.fromEvent)(client, 'message').filter((0, _messageHelpers.discardOwnMessages)(client)).filter(_messageHelpers.discardBotMessages).map(_actions.platformMessage);\n\nconst platformEvents$ = (0, _merge.merge)((0, _fromEvent.fromEvent)(client, 'ready').map(_actions.adapterReady));\n\nconst messageLoop$ = (0, _zip.zip)((0, _merge.merge)(platformEvents$, platformMessages$), reactions$, (input, reaction) => _extends({}, reaction, { input }));\n\nconst platformSubscription = (0, _merge.merge)(messageLoop$, commands$).subscribe((0, _handlers2.default)(client));\n\nexports.default = () => ({\n  inputs$: (0, _merge.merge)(platformEvents$, platformMessages$.map(_actions.publishMessage)),\n  reactions$,\n  commands$\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNsaWVudCIsIkNsaWVudCIsImNvbW1hbmRzJCIsInJlYWN0aW9ucyQiLCJvbiIsImNvbnNvbGUiLCJlcnJvciIsInBsYXRmb3JtTWVzc2FnZXMkIiwiZmlsdGVyIiwibWFwIiwicGxhdGZvcm1FdmVudHMkIiwibWVzc2FnZUxvb3AkIiwiaW5wdXQiLCJyZWFjdGlvbiIsInBsYXRmb3JtU3Vic2NyaXB0aW9uIiwic3Vic2NyaWJlIiwiaW5wdXRzJCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxTQUFTLElBQUksa0JBQVFDLE1BQVosRUFBZjs7QUFFQSxNQUFNQyxZQUFZLGlCQUFsQjtBQUNBLE1BQU1DLGFBQWEsaUJBQW5COztBQUVBO0FBQ0FILE9BQU9JLEVBQVAsQ0FBVSxPQUFWLEVBQW1CQyxRQUFRQyxLQUEzQjs7QUFFQSxNQUFNQyxvQkFBb0IsMEJBQVVQLE1BQVYsRUFBa0IsU0FBbEIsRUFDdkJRLE1BRHVCLENBQ2hCLHdDQUFtQlIsTUFBbkIsQ0FEZ0IsRUFFdkJRLE1BRnVCLHFDQUd2QkMsR0FIdUIsMEJBQTFCOztBQUtBLE1BQU1DLGtCQUFrQixrQkFBTSwwQkFBVVYsTUFBVixFQUFrQixPQUFsQixFQUEyQlMsR0FBM0IsdUJBQU4sQ0FBeEI7O0FBRUEsTUFBTUUsZUFBZSxjQUNuQixrQkFBTUQsZUFBTixFQUF1QkgsaUJBQXZCLENBRG1CLEVBRW5CSixVQUZtQixFQUduQixDQUFDUyxLQUFELEVBQVFDLFFBQVIsa0JBQTJCQSxRQUEzQixJQUFxQ0QsS0FBckMsR0FIbUIsQ0FBckI7O0FBTUEsTUFBTUUsdUJBQXVCLGtCQUFNSCxZQUFOLEVBQW9CVCxTQUFwQixFQUErQmEsU0FBL0IsQ0FDM0Isd0JBQWNmLE1BQWQsQ0FEMkIsQ0FBN0I7O2tCQUllLE9BQU87QUFDcEJnQixXQUFTLGtCQUFNTixlQUFOLEVBQXVCSCxrQkFBa0JFLEdBQWxCLHlCQUF2QixDQURXO0FBRXBCTixZQUZvQjtBQUdwQkQ7QUFIb0IsQ0FBUCxDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2Rpc2NvcmRKcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaXNjb3JkIGZyb20gJ2Rpc2NvcmQuanMnO1xuaW1wb3J0IHsgU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvUngnO1xuaW1wb3J0IHsgemlwIH0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL3ppcCc7XG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9tZXJnZSc7XG5pbXBvcnQgeyBmcm9tRXZlbnQgfSBmcm9tICdyeGpzL29ic2VydmFibGUvZnJvbUV2ZW50JztcblxuaW1wb3J0IGFjdGlvbkhhbmRsZXIgZnJvbSAnLi9oYW5kbGVycyc7XG5pbXBvcnQgeyBhZGFwdGVyUmVhZHksIHB1Ymxpc2hNZXNzYWdlLCBwbGF0Zm9ybU1lc3NhZ2UgfSBmcm9tICcuL2FjdGlvbnMnO1xuaW1wb3J0IHsgZGlzY2FyZE93bk1lc3NhZ2VzLCBkaXNjYXJkQm90TWVzc2FnZXMgfSBmcm9tICcuL21lc3NhZ2VIZWxwZXJzJztcblxuY29uc3QgY2xpZW50ID0gbmV3IERpc2NvcmQuQ2xpZW50KCk7XG5cbmNvbnN0IGNvbW1hbmRzJCA9IG5ldyBTdWJqZWN0KCk7XG5jb25zdCByZWFjdGlvbnMkID0gbmV3IFN1YmplY3QoKTtcblxuLy8gVE9ETzogTGV0IHRoZSBib3QgaGFuZGxlIHRoZSBlcnJvcnNcbmNsaWVudC5vbignZXJyb3InLCBjb25zb2xlLmVycm9yKTtcblxuY29uc3QgcGxhdGZvcm1NZXNzYWdlcyQgPSBmcm9tRXZlbnQoY2xpZW50LCAnbWVzc2FnZScpXG4gIC5maWx0ZXIoZGlzY2FyZE93bk1lc3NhZ2VzKGNsaWVudCkpXG4gIC5maWx0ZXIoZGlzY2FyZEJvdE1lc3NhZ2VzKVxuICAubWFwKHBsYXRmb3JtTWVzc2FnZSk7XG5cbmNvbnN0IHBsYXRmb3JtRXZlbnRzJCA9IG1lcmdlKGZyb21FdmVudChjbGllbnQsICdyZWFkeScpLm1hcChhZGFwdGVyUmVhZHkpKTtcblxuY29uc3QgbWVzc2FnZUxvb3AkID0gemlwKFxuICBtZXJnZShwbGF0Zm9ybUV2ZW50cyQsIHBsYXRmb3JtTWVzc2FnZXMkKSxcbiAgcmVhY3Rpb25zJCxcbiAgKGlucHV0LCByZWFjdGlvbikgPT4gKHsgLi4ucmVhY3Rpb24sIGlucHV0IH0pLFxuKTtcblxuY29uc3QgcGxhdGZvcm1TdWJzY3JpcHRpb24gPSBtZXJnZShtZXNzYWdlTG9vcCQsIGNvbW1hbmRzJCkuc3Vic2NyaWJlKFxuICBhY3Rpb25IYW5kbGVyKGNsaWVudCksXG4pO1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiAoe1xuICBpbnB1dHMkOiBtZXJnZShwbGF0Zm9ybUV2ZW50cyQsIHBsYXRmb3JtTWVzc2FnZXMkLm1hcChwdWJsaXNoTWVzc2FnZSkpLFxuICByZWFjdGlvbnMkLFxuICBjb21tYW5kcyQsXG59KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "client",
        "Client",
        "commands$",
        "reactions$",
        "on",
        "console",
        "error",
        "platformMessages$",
        "filter",
        "map",
        "platformEvents$",
        "messageLoop$",
        "input",
        "reaction",
        "platformSubscription",
        "subscribe",
        "inputs$"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;AACA;;;;AAEA,MAAMA,SAAS,IAAI,kBAAQC,MAAZ,EAAf;;AAEA,MAAMC,YAAY,iBAAlB;AACA,MAAMC,aAAa,iBAAnB;;AAEA;AACAH,OAAOI,EAAP,CAAU,OAAV,EAAmBC,QAAQC,KAA3B;;AAEA,MAAMC,oBAAoB,0BAAUP,MAAV,EAAkB,SAAlB,EACvBQ,MADuB,CAChB,wCAAmBR,MAAnB,CADgB,EAEvBQ,MAFuB,qCAGvBC,GAHuB,0BAA1B;;AAKA,MAAMC,kBAAkB,kBAAM,0BAAUV,MAAV,EAAkB,OAAlB,EAA2BS,GAA3B,uBAAN,CAAxB;;AAEA,MAAME,eAAe,cACnB,kBAAMD,eAAN,EAAuBH,iBAAvB,CADmB,EAEnBJ,UAFmB,EAGnB,CAACS,KAAD,EAAQC,QAAR,kBAA2BA,QAA3B,IAAqCD,KAArC,GAHmB,CAArB;;AAMA,MAAME,uBAAuB,kBAAMH,YAAN,EAAoBT,SAApB,EAA+Ba,SAA/B,CAC3B,wBAAcf,MAAd,CAD2B,CAA7B;;kBAIe,OAAO;AACpBgB,WAAS,kBAAMN,eAAN,EAAuBH,kBAAkBE,GAAlB,yBAAvB,CADW;AAEpBN,YAFoB;AAGpBD;AAHoB,CAAP,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "import Discord from 'discord.js';\nimport { Subject, Observable } from 'rxjs/Rx';\nimport { zip } from 'rxjs/observable/zip';\nimport { merge } from 'rxjs/observable/merge';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\n\nimport actionHandler from './handlers';\nimport { adapterReady, publishMessage, platformMessage } from './actions';\nimport { discardOwnMessages, discardBotMessages } from './messageHelpers';\n\nconst client = new Discord.Client();\n\nconst commands$ = new Subject();\nconst reactions$ = new Subject();\n\n// TODO: Let the bot handle the errors\nclient.on('error', console.error);\n\nconst platformMessages$ = fromEvent(client, 'message')\n  .filter(discardOwnMessages(client))\n  .filter(discardBotMessages)\n  .map(platformMessage);\n\nconst platformEvents$ = merge(fromEvent(client, 'ready').map(adapterReady));\n\nconst messageLoop$ = zip(\n  merge(platformEvents$, platformMessages$),\n  reactions$,\n  (input, reaction) => ({ ...reaction, input }),\n);\n\nconst platformSubscription = merge(messageLoop$, commands$).subscribe(\n  actionHandler(client),\n);\n\nexport default () => ({\n  inputs$: merge(platformEvents$, platformMessages$.map(publishMessage)),\n  reactions$,\n  commands$,\n});\n"
      ]
    },
    "mtime": 1524553891112
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/handlers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/handlers.js",
      "filenameRelative": "/app/bot/adapters/discordJs/handlers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "handlers.js",
      "sourceFileName": "handlers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "handlers"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst logPrefix = 'Adapter[discordJs]:';\n\nconst wait = t => new Promise(r => setTimeout(r, t));\n\nconst makeMessage = reaction => {\n  switch (reaction.contentType) {\n    case 'text':\n    case 'embed':\n      return reaction.content;\n    case 'nlp-response':\n      return reaction.fulfillment;\n    default:\n      return;\n  }\n};\n\nconst platformActions = {\n  'default-action'(client, reaction) {\n    console.warn(`${logPrefix} I don't know what to do with reaction type: ${reaction.type}`);\n  },\n  ignore() {\n    return;\n  },\n  error(_, reaction) {\n    console.log('errored Reaction', reaction);\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`);\n  },\n  'message-reply'(_, reaction) {\n    const { input, message } = reaction;\n    const { channel } = input.message;\n    channel.startTyping();\n    wait(1000).then(() => channel.send(makeMessage(message)) && channel.stopTyping());\n  },\n  connect(client, reaction) {\n    const { token } = reaction;\n    client.login(token);\n  },\n  'set-presence'(client, reaction) {\n    const { presence } = reaction;\n    client.user.setPresence(presence);\n  },\n  'adapter-ready'(client, reaction) {\n    console.log(`${logPrefix} logged in as ${client.user.tag}`);\n  }\n};\n\nconst getAction = actionType => actionType in platformActions ? platformActions[actionType] : platformActions['default-action'];\n\nexports.default = client => action => {\n  getAction(action.type)(client, action);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXJzLmpzIl0sIm5hbWVzIjpbImxvZ1ByZWZpeCIsIndhaXQiLCJ0IiwiUHJvbWlzZSIsInIiLCJzZXRUaW1lb3V0IiwibWFrZU1lc3NhZ2UiLCJyZWFjdGlvbiIsImNvbnRlbnRUeXBlIiwiY29udGVudCIsImZ1bGZpbGxtZW50IiwicGxhdGZvcm1BY3Rpb25zIiwiY2xpZW50IiwiY29uc29sZSIsIndhcm4iLCJ0eXBlIiwiaWdub3JlIiwiZXJyb3IiLCJfIiwibG9nIiwiaW5wdXQiLCJtZXNzYWdlIiwiY2hhbm5lbCIsInN0YXJ0VHlwaW5nIiwidGhlbiIsInNlbmQiLCJzdG9wVHlwaW5nIiwiY29ubmVjdCIsInRva2VuIiwibG9naW4iLCJwcmVzZW5jZSIsInVzZXIiLCJzZXRQcmVzZW5jZSIsInRhZyIsImdldEFjdGlvbiIsImFjdGlvblR5cGUiLCJhY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsWUFBWSxxQkFBbEI7O0FBRUEsTUFBTUMsT0FBT0MsS0FBSyxJQUFJQyxPQUFKLENBQVlDLEtBQUtDLFdBQVdELENBQVgsRUFBY0YsQ0FBZCxDQUFqQixDQUFsQjs7QUFFQSxNQUFNSSxjQUFjQyxZQUFZO0FBQzlCLFVBQVFBLFNBQVNDLFdBQWpCO0FBQ0UsU0FBSyxNQUFMO0FBQ0EsU0FBSyxPQUFMO0FBQ0UsYUFBT0QsU0FBU0UsT0FBaEI7QUFDRixTQUFLLGNBQUw7QUFDRSxhQUFPRixTQUFTRyxXQUFoQjtBQUNGO0FBQ0U7QUFQSjtBQVNELENBVkQ7O0FBWUEsTUFBTUMsa0JBQWtCO0FBQ3RCLG1CQUFpQkMsTUFBakIsRUFBeUJMLFFBQXpCLEVBQW1DO0FBQ2pDTSxZQUFRQyxJQUFSLENBQ0csR0FBRWQsU0FBVSxnREFDWE8sU0FBU1EsSUFDVixFQUhIO0FBS0QsR0FQcUI7QUFRdEJDLFdBQVM7QUFDUDtBQUNELEdBVnFCO0FBV3RCQyxRQUFNQyxDQUFOLEVBQVNYLFFBQVQsRUFBbUI7QUFDakJNLFlBQVFNLEdBQVIsQ0FBWSxrQkFBWixFQUFnQ1osUUFBaEM7QUFDQSxXQUFPTSxRQUFRSSxLQUFSLENBQWUsR0FBRWpCLFNBQVUscUJBQW9CTyxTQUFTVSxLQUFNLEVBQTlELENBQVA7QUFDRCxHQWRxQjtBQWV0QixrQkFBZ0JDLENBQWhCLEVBQW1CWCxRQUFuQixFQUE2QjtBQUMzQixVQUFNLEVBQUVhLEtBQUYsRUFBU0MsT0FBVCxLQUFxQmQsUUFBM0I7QUFDQSxVQUFNLEVBQUVlLE9BQUYsS0FBY0YsTUFBTUMsT0FBMUI7QUFDQUMsWUFBUUMsV0FBUjtBQUNBdEIsU0FBSyxJQUFMLEVBQVd1QixJQUFYLENBQ0UsTUFBTUYsUUFBUUcsSUFBUixDQUFhbkIsWUFBWWUsT0FBWixDQUFiLEtBQXNDQyxRQUFRSSxVQUFSLEVBRDlDO0FBR0QsR0F0QnFCO0FBdUJ0QkMsVUFBUWYsTUFBUixFQUFnQkwsUUFBaEIsRUFBMEI7QUFDeEIsVUFBTSxFQUFFcUIsS0FBRixLQUFZckIsUUFBbEI7QUFDQUssV0FBT2lCLEtBQVAsQ0FBYUQsS0FBYjtBQUNELEdBMUJxQjtBQTJCdEIsaUJBQWVoQixNQUFmLEVBQXVCTCxRQUF2QixFQUFpQztBQUMvQixVQUFNLEVBQUV1QixRQUFGLEtBQWV2QixRQUFyQjtBQUNBSyxXQUFPbUIsSUFBUCxDQUFZQyxXQUFaLENBQXdCRixRQUF4QjtBQUNELEdBOUJxQjtBQStCdEIsa0JBQWdCbEIsTUFBaEIsRUFBd0JMLFFBQXhCLEVBQWtDO0FBQ2hDTSxZQUFRTSxHQUFSLENBQWEsR0FBRW5CLFNBQVUsaUJBQWdCWSxPQUFPbUIsSUFBUCxDQUFZRSxHQUFJLEVBQXpEO0FBQ0Q7QUFqQ3FCLENBQXhCOztBQW9DQSxNQUFNQyxZQUFZQyxjQUNoQkEsY0FBY3hCLGVBQWQsR0FDSUEsZ0JBQWdCd0IsVUFBaEIsQ0FESixHQUVJeEIsZ0JBQWdCLGdCQUFoQixDQUhOOztrQkFLZUMsVUFBVXdCLFVBQVU7QUFDakNGLFlBQVVFLE9BQU9yQixJQUFqQixFQUF1QkgsTUFBdkIsRUFBK0J3QixNQUEvQjtBQUNELEMiLCJmaWxlIjoiaGFuZGxlcnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvYWRhcHRlcnMvZGlzY29yZEpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbG9nUHJlZml4ID0gJ0FkYXB0ZXJbZGlzY29yZEpzXTonO1xuXG5jb25zdCB3YWl0ID0gdCA9PiBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgdCkpO1xuXG5jb25zdCBtYWtlTWVzc2FnZSA9IHJlYWN0aW9uID0+IHtcbiAgc3dpdGNoIChyZWFjdGlvbi5jb250ZW50VHlwZSkge1xuICAgIGNhc2UgJ3RleHQnOlxuICAgIGNhc2UgJ2VtYmVkJzpcbiAgICAgIHJldHVybiByZWFjdGlvbi5jb250ZW50O1xuICAgIGNhc2UgJ25scC1yZXNwb25zZSc6XG4gICAgICByZXR1cm4gcmVhY3Rpb24uZnVsZmlsbG1lbnQ7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybjtcbiAgfVxufTtcblxuY29uc3QgcGxhdGZvcm1BY3Rpb25zID0ge1xuICAnZGVmYXVsdC1hY3Rpb24nKGNsaWVudCwgcmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBgJHtsb2dQcmVmaXh9IEkgZG9uJ3Qga25vdyB3aGF0IHRvIGRvIHdpdGggcmVhY3Rpb24gdHlwZTogJHtcbiAgICAgICAgcmVhY3Rpb24udHlwZVxuICAgICAgfWAsXG4gICAgKTtcbiAgfSxcbiAgaWdub3JlKCkge1xuICAgIHJldHVybjtcbiAgfSxcbiAgZXJyb3IoXywgcmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLmxvZygnZXJyb3JlZCBSZWFjdGlvbicsIHJlYWN0aW9uKVxuICAgIHJldHVybiBjb25zb2xlLmVycm9yKGAke2xvZ1ByZWZpeH0gSSBoYXZlIGFuIGVycm9yOiAke3JlYWN0aW9uLmVycm9yfWApO1xuICB9LFxuICAnbWVzc2FnZS1yZXBseScoXywgcmVhY3Rpb24pIHtcbiAgICBjb25zdCB7IGlucHV0LCBtZXNzYWdlIH0gPSByZWFjdGlvbjtcbiAgICBjb25zdCB7IGNoYW5uZWwgfSA9IGlucHV0Lm1lc3NhZ2U7XG4gICAgY2hhbm5lbC5zdGFydFR5cGluZygpO1xuICAgIHdhaXQoMTAwMCkudGhlbihcbiAgICAgICgpID0+IGNoYW5uZWwuc2VuZChtYWtlTWVzc2FnZShtZXNzYWdlKSkgJiYgY2hhbm5lbC5zdG9wVHlwaW5nKCksXG4gICAgKTtcbiAgfSxcbiAgY29ubmVjdChjbGllbnQsIHJlYWN0aW9uKSB7XG4gICAgY29uc3QgeyB0b2tlbiB9ID0gcmVhY3Rpb247XG4gICAgY2xpZW50LmxvZ2luKHRva2VuKTtcbiAgfSxcbiAgJ3NldC1wcmVzZW5jZScoY2xpZW50LCByZWFjdGlvbikge1xuICAgIGNvbnN0IHsgcHJlc2VuY2UgfSA9IHJlYWN0aW9uO1xuICAgIGNsaWVudC51c2VyLnNldFByZXNlbmNlKHByZXNlbmNlKTtcbiAgfSxcbiAgJ2FkYXB0ZXItcmVhZHknKGNsaWVudCwgcmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLmxvZyhgJHtsb2dQcmVmaXh9IGxvZ2dlZCBpbiBhcyAke2NsaWVudC51c2VyLnRhZ31gKTtcbiAgfSxcbn07XG5cbmNvbnN0IGdldEFjdGlvbiA9IGFjdGlvblR5cGUgPT5cbiAgYWN0aW9uVHlwZSBpbiBwbGF0Zm9ybUFjdGlvbnNcbiAgICA/IHBsYXRmb3JtQWN0aW9uc1thY3Rpb25UeXBlXVxuICAgIDogcGxhdGZvcm1BY3Rpb25zWydkZWZhdWx0LWFjdGlvbiddO1xuXG5leHBvcnQgZGVmYXVsdCBjbGllbnQgPT4gYWN0aW9uID0+IHtcbiAgZ2V0QWN0aW9uKGFjdGlvbi50eXBlKShjbGllbnQsIGFjdGlvbik7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "handlers.js"
      ],
      "names": [
        "logPrefix",
        "wait",
        "t",
        "Promise",
        "r",
        "setTimeout",
        "makeMessage",
        "reaction",
        "contentType",
        "content",
        "fulfillment",
        "platformActions",
        "client",
        "console",
        "warn",
        "type",
        "ignore",
        "error",
        "_",
        "log",
        "input",
        "message",
        "channel",
        "startTyping",
        "then",
        "send",
        "stopTyping",
        "connect",
        "token",
        "login",
        "presence",
        "user",
        "setPresence",
        "tag",
        "getAction",
        "actionType",
        "action"
      ],
      "mappings": ";;;;;AAAA,MAAMA,YAAY,qBAAlB;;AAEA,MAAMC,OAAOC,KAAK,IAAIC,OAAJ,CAAYC,KAAKC,WAAWD,CAAX,EAAcF,CAAd,CAAjB,CAAlB;;AAEA,MAAMI,cAAcC,YAAY;AAC9B,UAAQA,SAASC,WAAjB;AACE,SAAK,MAAL;AACA,SAAK,OAAL;AACE,aAAOD,SAASE,OAAhB;AACF,SAAK,cAAL;AACE,aAAOF,SAASG,WAAhB;AACF;AACE;AAPJ;AASD,CAVD;;AAYA,MAAMC,kBAAkB;AACtB,mBAAiBC,MAAjB,EAAyBL,QAAzB,EAAmC;AACjCM,YAAQC,IAAR,CACG,GAAEd,SAAU,gDACXO,SAASQ,IACV,EAHH;AAKD,GAPqB;AAQtBC,WAAS;AACP;AACD,GAVqB;AAWtBC,QAAMC,CAAN,EAASX,QAAT,EAAmB;AACjBM,YAAQM,GAAR,CAAY,kBAAZ,EAAgCZ,QAAhC;AACA,WAAOM,QAAQI,KAAR,CAAe,GAAEjB,SAAU,qBAAoBO,SAASU,KAAM,EAA9D,CAAP;AACD,GAdqB;AAetB,kBAAgBC,CAAhB,EAAmBX,QAAnB,EAA6B;AAC3B,UAAM,EAAEa,KAAF,EAASC,OAAT,KAAqBd,QAA3B;AACA,UAAM,EAAEe,OAAF,KAAcF,MAAMC,OAA1B;AACAC,YAAQC,WAAR;AACAtB,SAAK,IAAL,EAAWuB,IAAX,CACE,MAAMF,QAAQG,IAAR,CAAanB,YAAYe,OAAZ,CAAb,KAAsCC,QAAQI,UAAR,EAD9C;AAGD,GAtBqB;AAuBtBC,UAAQf,MAAR,EAAgBL,QAAhB,EAA0B;AACxB,UAAM,EAAEqB,KAAF,KAAYrB,QAAlB;AACAK,WAAOiB,KAAP,CAAaD,KAAb;AACD,GA1BqB;AA2BtB,iBAAehB,MAAf,EAAuBL,QAAvB,EAAiC;AAC/B,UAAM,EAAEuB,QAAF,KAAevB,QAArB;AACAK,WAAOmB,IAAP,CAAYC,WAAZ,CAAwBF,QAAxB;AACD,GA9BqB;AA+BtB,kBAAgBlB,MAAhB,EAAwBL,QAAxB,EAAkC;AAChCM,YAAQM,GAAR,CAAa,GAAEnB,SAAU,iBAAgBY,OAAOmB,IAAP,CAAYE,GAAI,EAAzD;AACD;AAjCqB,CAAxB;;AAoCA,MAAMC,YAAYC,cAChBA,cAAcxB,eAAd,GACIA,gBAAgBwB,UAAhB,CADJ,GAEIxB,gBAAgB,gBAAhB,CAHN;;kBAKeC,UAAUwB,UAAU;AACjCF,YAAUE,OAAOrB,IAAjB,EAAuBH,MAAvB,EAA+BwB,MAA/B;AACD,C",
      "file": "handlers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "const logPrefix = 'Adapter[discordJs]:';\n\nconst wait = t => new Promise(r => setTimeout(r, t));\n\nconst makeMessage = reaction => {\n  switch (reaction.contentType) {\n    case 'text':\n    case 'embed':\n      return reaction.content;\n    case 'nlp-response':\n      return reaction.fulfillment;\n    default:\n      return;\n  }\n};\n\nconst platformActions = {\n  'default-action'(client, reaction) {\n    console.warn(\n      `${logPrefix} I don't know what to do with reaction type: ${\n        reaction.type\n      }`,\n    );\n  },\n  ignore() {\n    return;\n  },\n  error(_, reaction) {\n    console.log('errored Reaction', reaction)\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`);\n  },\n  'message-reply'(_, reaction) {\n    const { input, message } = reaction;\n    const { channel } = input.message;\n    channel.startTyping();\n    wait(1000).then(\n      () => channel.send(makeMessage(message)) && channel.stopTyping(),\n    );\n  },\n  connect(client, reaction) {\n    const { token } = reaction;\n    client.login(token);\n  },\n  'set-presence'(client, reaction) {\n    const { presence } = reaction;\n    client.user.setPresence(presence);\n  },\n  'adapter-ready'(client, reaction) {\n    console.log(`${logPrefix} logged in as ${client.user.tag}`);\n  },\n};\n\nconst getAction = actionType =>\n  actionType in platformActions\n    ? platformActions[actionType]\n    : platformActions['default-action'];\n\nexport default client => action => {\n  getAction(action.type)(client, action);\n};\n"
      ]
    },
    "mtime": 1524385991211
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/actions.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./messageHelpers",
            "imported": [
              "marshallMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "marshallMessage",
                "local": "marshallMessage"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "publishMessage",
            "platformMessage",
            "adapterReady"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "publishMessage",
              "exported": "publishMessage"
            },
            {
              "kind": "local",
              "local": "platformMessage",
              "exported": "platformMessage"
            },
            {
              "kind": "local",
              "local": "adapterReady",
              "exported": "adapterReady"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/actions.js",
      "filenameRelative": "/app/bot/adapters/discordJs/actions.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "actions.js",
      "sourceFileName": "actions.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "actions"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adapterReady = exports.platformMessage = exports.publishMessage = undefined;\n\nvar _messageHelpers = require('./messageHelpers');\n\nconst publishMessage = exports.publishMessage = ({ message }) => ({\n  type: 'incoming-message',\n  message: (0, _messageHelpers.marshallMessage)(message)\n});\n\nconst platformMessage = exports.platformMessage = message => ({\n  type: 'platform-message',\n  message\n});\n\nconst adapterReady = exports.adapterReady = () => ({ type: 'adapter-ready' });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsicHVibGlzaE1lc3NhZ2UiLCJtZXNzYWdlIiwidHlwZSIsInBsYXRmb3JtTWVzc2FnZSIsImFkYXB0ZXJSZWFkeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLE1BQU1BLDBDQUFpQixDQUFDLEVBQUVDLE9BQUYsRUFBRCxNQUFrQjtBQUM5Q0MsUUFBTSxrQkFEd0M7QUFFOUNELFdBQVMscUNBQWdCQSxPQUFoQjtBQUZxQyxDQUFsQixDQUF2Qjs7QUFLQSxNQUFNRSw0Q0FBa0JGLFlBQVk7QUFDekNDLFFBQU0sa0JBRG1DO0FBRXpDRDtBQUZ5QyxDQUFaLENBQXhCOztBQUtBLE1BQU1HLHNDQUFlLE9BQU8sRUFBRUYsTUFBTSxlQUFSLEVBQVAsQ0FBckIiLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9hZGFwdGVycy9kaXNjb3JkSnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXJzaGFsbE1lc3NhZ2UgfSBmcm9tICcuL21lc3NhZ2VIZWxwZXJzJztcblxuZXhwb3J0IGNvbnN0IHB1Ymxpc2hNZXNzYWdlID0gKHsgbWVzc2FnZSB9KSA9PiAoe1xuICB0eXBlOiAnaW5jb21pbmctbWVzc2FnZScsXG4gIG1lc3NhZ2U6IG1hcnNoYWxsTWVzc2FnZShtZXNzYWdlKSxcbn0pO1xuXG5leHBvcnQgY29uc3QgcGxhdGZvcm1NZXNzYWdlID0gbWVzc2FnZSA9PiAoe1xuICB0eXBlOiAncGxhdGZvcm0tbWVzc2FnZScsXG4gIG1lc3NhZ2UsXG59KTtcblxuZXhwb3J0IGNvbnN0IGFkYXB0ZXJSZWFkeSA9ICgpID0+ICh7IHR5cGU6ICdhZGFwdGVyLXJlYWR5JyB9KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "actions.js"
      ],
      "names": [
        "publishMessage",
        "message",
        "type",
        "platformMessage",
        "adapterReady"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,MAAMA,0CAAiB,CAAC,EAAEC,OAAF,EAAD,MAAkB;AAC9CC,QAAM,kBADwC;AAE9CD,WAAS,qCAAgBA,OAAhB;AAFqC,CAAlB,CAAvB;;AAKA,MAAME,4CAAkBF,YAAY;AACzCC,QAAM,kBADmC;AAEzCD;AAFyC,CAAZ,CAAxB;;AAKA,MAAMG,sCAAe,OAAO,EAAEF,MAAM,eAAR,EAAP,CAArB",
      "file": "actions.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "import { marshallMessage } from './messageHelpers';\n\nexport const publishMessage = ({ message }) => ({\n  type: 'incoming-message',\n  message: marshallMessage(message),\n});\n\nexport const platformMessage = message => ({\n  type: 'platform-message',\n  message,\n});\n\nexport const adapterReady = () => ({ type: 'adapter-ready' });\n"
      ]
    },
    "mtime": 1524553309001
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/messageHelpers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "discardOwnMessages",
            "discardBotMessages",
            "marshallMessage"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "discardOwnMessages",
              "exported": "discardOwnMessages"
            },
            {
              "kind": "local",
              "local": "discardBotMessages",
              "exported": "discardBotMessages"
            },
            {
              "kind": "local",
              "local": "marshallMessage",
              "exported": "marshallMessage"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/messageHelpers.js",
      "filenameRelative": "/app/bot/adapters/discordJs/messageHelpers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "messageHelpers.js",
      "sourceFileName": "messageHelpers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "messageHelpers"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst discardOwnMessages = exports.discardOwnMessages = client => message => Boolean(message.author.id !== client.user.id);\n\nconst discardBotMessages = exports.discardBotMessages = message => !message.author.bot;\n\nconst marshallMessage = exports.marshallMessage = message => ({\n  msgId: message.id,\n  content: message.content,\n  authorId: message.author.id,\n  authorName: message.author.username,\n  channel: message.channel.id,\n  attachments: message.attachments\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VIZWxwZXJzLmpzIl0sIm5hbWVzIjpbImRpc2NhcmRPd25NZXNzYWdlcyIsImNsaWVudCIsIm1lc3NhZ2UiLCJCb29sZWFuIiwiYXV0aG9yIiwiaWQiLCJ1c2VyIiwiZGlzY2FyZEJvdE1lc3NhZ2VzIiwiYm90IiwibWFyc2hhbGxNZXNzYWdlIiwibXNnSWQiLCJjb250ZW50IiwiYXV0aG9ySWQiLCJhdXRob3JOYW1lIiwidXNlcm5hbWUiLCJjaGFubmVsIiwiYXR0YWNobWVudHMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsa0RBQXFCQyxVQUFVQyxXQUMxQ0MsUUFBUUQsUUFBUUUsTUFBUixDQUFlQyxFQUFmLEtBQXNCSixPQUFPSyxJQUFQLENBQVlELEVBQTFDLENBREs7O0FBR0EsTUFBTUUsa0RBQXFCTCxXQUFXLENBQUNBLFFBQVFFLE1BQVIsQ0FBZUksR0FBdEQ7O0FBRUEsTUFBTUMsNENBQWtCUCxZQUFZO0FBQ3pDUSxTQUFPUixRQUFRRyxFQUQwQjtBQUV6Q00sV0FBU1QsUUFBUVMsT0FGd0I7QUFHekNDLFlBQVVWLFFBQVFFLE1BQVIsQ0FBZUMsRUFIZ0I7QUFJekNRLGNBQVlYLFFBQVFFLE1BQVIsQ0FBZVUsUUFKYztBQUt6Q0MsV0FBU2IsUUFBUWEsT0FBUixDQUFnQlYsRUFMZ0I7QUFNekNXLGVBQWFkLFFBQVFjO0FBTm9CLENBQVosQ0FBeEIiLCJmaWxlIjoibWVzc2FnZUhlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvYWRhcHRlcnMvZGlzY29yZEpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRpc2NhcmRPd25NZXNzYWdlcyA9IGNsaWVudCA9PiBtZXNzYWdlID0+XG4gIEJvb2xlYW4obWVzc2FnZS5hdXRob3IuaWQgIT09IGNsaWVudC51c2VyLmlkKTtcblxuZXhwb3J0IGNvbnN0IGRpc2NhcmRCb3RNZXNzYWdlcyA9IG1lc3NhZ2UgPT4gIW1lc3NhZ2UuYXV0aG9yLmJvdDtcblxuZXhwb3J0IGNvbnN0IG1hcnNoYWxsTWVzc2FnZSA9IG1lc3NhZ2UgPT4gKHtcbiAgbXNnSWQ6IG1lc3NhZ2UuaWQsXG4gIGNvbnRlbnQ6IG1lc3NhZ2UuY29udGVudCxcbiAgYXV0aG9ySWQ6IG1lc3NhZ2UuYXV0aG9yLmlkLFxuICBhdXRob3JOYW1lOiBtZXNzYWdlLmF1dGhvci51c2VybmFtZSxcbiAgY2hhbm5lbDogbWVzc2FnZS5jaGFubmVsLmlkLFxuICBhdHRhY2htZW50czogbWVzc2FnZS5hdHRhY2htZW50cyxcbn0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "messageHelpers.js"
      ],
      "names": [
        "discardOwnMessages",
        "client",
        "message",
        "Boolean",
        "author",
        "id",
        "user",
        "discardBotMessages",
        "bot",
        "marshallMessage",
        "msgId",
        "content",
        "authorId",
        "authorName",
        "username",
        "channel",
        "attachments"
      ],
      "mappings": ";;;;;AAAO,MAAMA,kDAAqBC,UAAUC,WAC1CC,QAAQD,QAAQE,MAAR,CAAeC,EAAf,KAAsBJ,OAAOK,IAAP,CAAYD,EAA1C,CADK;;AAGA,MAAME,kDAAqBL,WAAW,CAACA,QAAQE,MAAR,CAAeI,GAAtD;;AAEA,MAAMC,4CAAkBP,YAAY;AACzCQ,SAAOR,QAAQG,EAD0B;AAEzCM,WAAST,QAAQS,OAFwB;AAGzCC,YAAUV,QAAQE,MAAR,CAAeC,EAHgB;AAIzCQ,cAAYX,QAAQE,MAAR,CAAeU,QAJc;AAKzCC,WAASb,QAAQa,OAAR,CAAgBV,EALgB;AAMzCW,eAAad,QAAQc;AANoB,CAAZ,CAAxB",
      "file": "messageHelpers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "export const discardOwnMessages = client => message =>\n  Boolean(message.author.id !== client.user.id);\n\nexport const discardBotMessages = message => !message.author.bot;\n\nexport const marshallMessage = message => ({\n  msgId: message.id,\n  content: message.content,\n  authorId: message.author.id,\n  authorName: message.author.username,\n  channel: message.channel.id,\n  attachments: message.attachments,\n});\n"
      ]
    },
    "mtime": 1524377795871
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "rxjs/Rx",
            "imported": [
              "Subject",
              "Observable"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Subject",
                "local": "Subject"
              },
              {
                "kind": "named",
                "imported": "Observable",
                "local": "Observable"
              }
            ]
          },
          {
            "source": "rxjs/observable/zip",
            "imported": [
              "zip"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "zip",
                "local": "zip"
              }
            ]
          },
          {
            "source": "rxjs/observable/merge",
            "imported": [
              "merge"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "merge",
                "local": "merge"
              }
            ]
          },
          {
            "source": "rxjs/observable/fromEvent",
            "imported": [
              "fromEvent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "fromEvent",
                "local": "fromEvent"
              }
            ]
          },
          {
            "source": "./handlers",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "actionHandler"
              }
            ]
          },
          {
            "source": "./actions",
            "imported": [
              "publishMessage",
              "platformMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "publishMessage",
                "local": "publishMessage"
              },
              {
                "kind": "named",
                "imported": "platformMessage",
                "local": "platformMessage"
              }
            ]
          },
          {
            "source": "./webhook",
            "imported": [
              "authController",
              "mainController"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "authController",
                "local": "authController"
              },
              {
                "kind": "named",
                "imported": "mainController",
                "local": "mainController"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/index.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _Rx = require('rxjs/Rx');\n\nvar _zip = require('rxjs/observable/zip');\n\nvar _merge = require('rxjs/observable/merge');\n\nvar _fromEvent = require('rxjs/observable/fromEvent');\n\nvar _handlers = require('./handlers');\n\nvar _handlers2 = _interopRequireDefault(_handlers);\n\nvar _actions = require('./actions');\n\nvar _webhook = require('./webhook');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst commands$ = new _Rx.Subject();\nconst incomingEvents$ = new _Rx.Subject();\nconst reactions$ = new _Rx.Subject();\n\nconst { FB_WEBHOOK_ENDPOINT } = process.env;\n\nconst configureExpressApp = ({ app }) => {\n  app.get(`/${FB_WEBHOOK_ENDPOINT}`, _webhook.authController);\n  app.post(`/${FB_WEBHOOK_ENDPOINT}`, (0, _webhook.mainController)(incomingEvents$));\n};\n\nconst platformMessages$ = incomingEvents$.map(_actions.platformMessage);\n\n// const platformEvents$ = merge(fromEvent(client, 'ready').map(adapterReady));\n\nconst messageLoop$ = (0, _zip.zip)(platformMessages$, reactions$, (input, reaction) => _extends({}, reaction, { input }));\n\nconst platformSubscription = (0, _merge.merge)(messageLoop$, commands$).subscribe(_handlers2.default);\n\n// messageLoop$.subscribe({ next: v => console.log('value from loop: ', v) });\n\nexports.default = servers => {\n  const { ws } = servers;\n  configureExpressApp(ws);\n  return {\n    inputs$: platformMessages$.map(_actions.publishMessage),\n    reactions$,\n    commands$\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbW1hbmRzJCIsImluY29taW5nRXZlbnRzJCIsInJlYWN0aW9ucyQiLCJGQl9XRUJIT09LX0VORFBPSU5UIiwicHJvY2VzcyIsImVudiIsImNvbmZpZ3VyZUV4cHJlc3NBcHAiLCJhcHAiLCJnZXQiLCJwb3N0IiwicGxhdGZvcm1NZXNzYWdlcyQiLCJtYXAiLCJtZXNzYWdlTG9vcCQiLCJpbnB1dCIsInJlYWN0aW9uIiwicGxhdGZvcm1TdWJzY3JpcHRpb24iLCJzdWJzY3JpYmUiLCJzZXJ2ZXJzIiwid3MiLCJpbnB1dHMkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBQ0E7O0FBTUE7Ozs7QUFKQSxNQUFNQSxZQUFZLGlCQUFsQjtBQUNBLE1BQU1DLGtCQUFrQixpQkFBeEI7QUFDQSxNQUFNQyxhQUFhLGlCQUFuQjs7QUFJQSxNQUFNLEVBQUVDLG1CQUFGLEtBQTBCQyxRQUFRQyxHQUF4Qzs7QUFFQSxNQUFNQyxzQkFBc0IsQ0FBQyxFQUFFQyxHQUFGLEVBQUQsS0FBYTtBQUN2Q0EsTUFBSUMsR0FBSixDQUFTLElBQUdMLG1CQUFvQixFQUFoQztBQUNBSSxNQUFJRSxJQUFKLENBQVUsSUFBR04sbUJBQW9CLEVBQWpDLEVBQW9DLDZCQUFlRixlQUFmLENBQXBDO0FBQ0QsQ0FIRDs7QUFLQSxNQUFNUyxvQkFBb0JULGdCQUN2QlUsR0FEdUIsMEJBQTFCOztBQUdBOztBQUVBLE1BQU1DLGVBQWUsY0FDbkJGLGlCQURtQixFQUVuQlIsVUFGbUIsRUFHbkIsQ0FBQ1csS0FBRCxFQUFRQyxRQUFSLGtCQUEyQkEsUUFBM0IsSUFBcUNELEtBQXJDLEdBSG1CLENBQXJCOztBQU1BLE1BQU1FLHVCQUF1QixrQkFBTUgsWUFBTixFQUFvQlosU0FBcEIsRUFBK0JnQixTQUEvQixvQkFBN0I7O0FBSUE7O2tCQUVlQyxXQUFXO0FBQ3hCLFFBQU0sRUFBRUMsRUFBRixLQUFTRCxPQUFmO0FBQ0FYLHNCQUFvQlksRUFBcEI7QUFDQSxTQUFPO0FBQ0xDLGFBQVNULGtCQUFrQkMsR0FBbEIseUJBREo7QUFFTFQsY0FGSztBQUdMRjtBQUhLLEdBQVA7QUFLRCxDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2ZiTWVzc2VuZ2VyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvUngnO1xuaW1wb3J0IHsgemlwIH0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL3ppcCc7XG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9tZXJnZSc7XG5pbXBvcnQgeyBmcm9tRXZlbnQgfSBmcm9tICdyeGpzL29ic2VydmFibGUvZnJvbUV2ZW50JztcblxuaW1wb3J0IGFjdGlvbkhhbmRsZXIgZnJvbSAnLi9oYW5kbGVycyc7XG5pbXBvcnQgeyBwdWJsaXNoTWVzc2FnZSwgcGxhdGZvcm1NZXNzYWdlIH0gZnJvbSAnLi9hY3Rpb25zJztcblxuY29uc3QgY29tbWFuZHMkID0gbmV3IFN1YmplY3QoKTtcbmNvbnN0IGluY29taW5nRXZlbnRzJCA9IG5ldyBTdWJqZWN0KCk7XG5jb25zdCByZWFjdGlvbnMkID0gbmV3IFN1YmplY3QoKTtcblxuaW1wb3J0IHsgYXV0aENvbnRyb2xsZXIsIG1haW5Db250cm9sbGVyIH0gZnJvbSAnLi93ZWJob29rJztcblxuY29uc3QgeyBGQl9XRUJIT09LX0VORFBPSU5UIH0gPSBwcm9jZXNzLmVudjtcblxuY29uc3QgY29uZmlndXJlRXhwcmVzc0FwcCA9ICh7IGFwcCB9KSA9PiB7XG4gIGFwcC5nZXQoYC8ke0ZCX1dFQkhPT0tfRU5EUE9JTlR9YCwgYXV0aENvbnRyb2xsZXIpO1xuICBhcHAucG9zdChgLyR7RkJfV0VCSE9PS19FTkRQT0lOVH1gLCBtYWluQ29udHJvbGxlcihpbmNvbWluZ0V2ZW50cyQpKTtcbn07XG5cbmNvbnN0IHBsYXRmb3JtTWVzc2FnZXMkID0gaW5jb21pbmdFdmVudHMkXG4gIC5tYXAocGxhdGZvcm1NZXNzYWdlKTtcblxuLy8gY29uc3QgcGxhdGZvcm1FdmVudHMkID0gbWVyZ2UoZnJvbUV2ZW50KGNsaWVudCwgJ3JlYWR5JykubWFwKGFkYXB0ZXJSZWFkeSkpO1xuXG5jb25zdCBtZXNzYWdlTG9vcCQgPSB6aXAoXG4gIHBsYXRmb3JtTWVzc2FnZXMkLFxuICByZWFjdGlvbnMkLFxuICAoaW5wdXQsIHJlYWN0aW9uKSA9PiAoeyAuLi5yZWFjdGlvbiwgaW5wdXQgfSksXG4pO1xuXG5jb25zdCBwbGF0Zm9ybVN1YnNjcmlwdGlvbiA9IG1lcmdlKG1lc3NhZ2VMb29wJCwgY29tbWFuZHMkKS5zdWJzY3JpYmUoXG4gIGFjdGlvbkhhbmRsZXIsXG4pO1xuXG4vLyBtZXNzYWdlTG9vcCQuc3Vic2NyaWJlKHsgbmV4dDogdiA9PiBjb25zb2xlLmxvZygndmFsdWUgZnJvbSBsb29wOiAnLCB2KSB9KTtcblxuZXhwb3J0IGRlZmF1bHQgc2VydmVycyA9PiB7XG4gIGNvbnN0IHsgd3MgfSA9IHNlcnZlcnM7XG4gIGNvbmZpZ3VyZUV4cHJlc3NBcHAod3MpO1xuICByZXR1cm4ge1xuICAgIGlucHV0cyQ6IHBsYXRmb3JtTWVzc2FnZXMkLm1hcChwdWJsaXNoTWVzc2FnZSksXG4gICAgcmVhY3Rpb25zJCxcbiAgICBjb21tYW5kcyQsXG4gIH1cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "commands$",
        "incomingEvents$",
        "reactions$",
        "FB_WEBHOOK_ENDPOINT",
        "process",
        "env",
        "configureExpressApp",
        "app",
        "get",
        "post",
        "platformMessages$",
        "map",
        "messageLoop$",
        "input",
        "reaction",
        "platformSubscription",
        "subscribe",
        "servers",
        "ws",
        "inputs$"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;AAMA;;;;AAJA,MAAMA,YAAY,iBAAlB;AACA,MAAMC,kBAAkB,iBAAxB;AACA,MAAMC,aAAa,iBAAnB;;AAIA,MAAM,EAAEC,mBAAF,KAA0BC,QAAQC,GAAxC;;AAEA,MAAMC,sBAAsB,CAAC,EAAEC,GAAF,EAAD,KAAa;AACvCA,MAAIC,GAAJ,CAAS,IAAGL,mBAAoB,EAAhC;AACAI,MAAIE,IAAJ,CAAU,IAAGN,mBAAoB,EAAjC,EAAoC,6BAAeF,eAAf,CAApC;AACD,CAHD;;AAKA,MAAMS,oBAAoBT,gBACvBU,GADuB,0BAA1B;;AAGA;;AAEA,MAAMC,eAAe,cACnBF,iBADmB,EAEnBR,UAFmB,EAGnB,CAACW,KAAD,EAAQC,QAAR,kBAA2BA,QAA3B,IAAqCD,KAArC,GAHmB,CAArB;;AAMA,MAAME,uBAAuB,kBAAMH,YAAN,EAAoBZ,SAApB,EAA+BgB,SAA/B,oBAA7B;;AAIA;;kBAEeC,WAAW;AACxB,QAAM,EAAEC,EAAF,KAASD,OAAf;AACAX,sBAAoBY,EAApB;AACA,SAAO;AACLC,aAAST,kBAAkBC,GAAlB,yBADJ;AAELT,cAFK;AAGLF;AAHK,GAAP;AAKD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "import { Subject, Observable } from 'rxjs/Rx';\nimport { zip } from 'rxjs/observable/zip';\nimport { merge } from 'rxjs/observable/merge';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\n\nimport actionHandler from './handlers';\nimport { publishMessage, platformMessage } from './actions';\n\nconst commands$ = new Subject();\nconst incomingEvents$ = new Subject();\nconst reactions$ = new Subject();\n\nimport { authController, mainController } from './webhook';\n\nconst { FB_WEBHOOK_ENDPOINT } = process.env;\n\nconst configureExpressApp = ({ app }) => {\n  app.get(`/${FB_WEBHOOK_ENDPOINT}`, authController);\n  app.post(`/${FB_WEBHOOK_ENDPOINT}`, mainController(incomingEvents$));\n};\n\nconst platformMessages$ = incomingEvents$\n  .map(platformMessage);\n\n// const platformEvents$ = merge(fromEvent(client, 'ready').map(adapterReady));\n\nconst messageLoop$ = zip(\n  platformMessages$,\n  reactions$,\n  (input, reaction) => ({ ...reaction, input }),\n);\n\nconst platformSubscription = merge(messageLoop$, commands$).subscribe(\n  actionHandler,\n);\n\n// messageLoop$.subscribe({ next: v => console.log('value from loop: ', v) });\n\nexport default servers => {\n  const { ws } = servers;\n  configureExpressApp(ws);\n  return {\n    inputs$: platformMessages$.map(publishMessage),\n    reactions$,\n    commands$,\n  }\n};\n"
      ]
    },
    "mtime": 1524985369806
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/webhook.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "mainController",
            "authController"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "mainController",
              "exported": "mainController"
            },
            {
              "kind": "local",
              "local": "authController",
              "exported": "authController"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/webhook.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/webhook.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "webhook.js",
      "sourceFileName": "webhook.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "webhook"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nconst { FB_MESSENGER_VALIDATION_TOKEN } = process.env;\n\nconst getMessages = entries => [].concat(...entries.map(entry => entry.messaging.map(message => _extends({}, message, {\n  pageId: entry.id,\n  eventTime: entry.time\n}))));\n\nconst mainController = exports.mainController = subj$ => (req, res) => {\n  const data = req.body;\n  if (data.object === 'page' && Array.isArray(data.entry)) {\n    getMessages(data.entry).forEach(v => subj$.next(v));\n  }\n  res.sendStatus(200);\n};\n\nconst authController = exports.authController = (req, res) => {\n  const mode = req.query['hub.mode'];\n  const token = req.query['hub.verify_token'];\n  const challenge = req.query['hub.challenge'];\n  if (mode && token) {\n    if (mode === 'subscribe' && token === FB_MESSENGER_VALIDATION_TOKEN) {\n      res.status(200).send(challenge);\n    } else {\n      res.sendStatus(403);\n    }\n  } else {\n    res.sendStatus(400);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmhvb2suanMiXSwibmFtZXMiOlsiRkJfTUVTU0VOR0VSX1ZBTElEQVRJT05fVE9LRU4iLCJwcm9jZXNzIiwiZW52IiwiZ2V0TWVzc2FnZXMiLCJlbnRyaWVzIiwiY29uY2F0IiwibWFwIiwiZW50cnkiLCJtZXNzYWdpbmciLCJtZXNzYWdlIiwicGFnZUlkIiwiaWQiLCJldmVudFRpbWUiLCJ0aW1lIiwibWFpbkNvbnRyb2xsZXIiLCJzdWJqJCIsInJlcSIsInJlcyIsImRhdGEiLCJib2R5Iiwib2JqZWN0IiwiQXJyYXkiLCJpc0FycmF5IiwiZm9yRWFjaCIsInYiLCJuZXh0Iiwic2VuZFN0YXR1cyIsImF1dGhDb250cm9sbGVyIiwibW9kZSIsInF1ZXJ5IiwidG9rZW4iLCJjaGFsbGVuZ2UiLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLE1BQU0sRUFBRUEsNkJBQUYsS0FBb0NDLFFBQVFDLEdBQWxEOztBQUVBLE1BQU1DLGNBQWNDLFdBQ2xCLEdBQUdDLE1BQUgsQ0FDRSxHQUFHRCxRQUFRRSxHQUFSLENBQVlDLFNBQ2JBLE1BQU1DLFNBQU4sQ0FBZ0JGLEdBQWhCLENBQW9CRyx3QkFDZkEsT0FEZTtBQUVsQkMsVUFBUUgsTUFBTUksRUFGSTtBQUdsQkMsYUFBV0wsTUFBTU07QUFIQyxFQUFwQixDQURDLENBREwsQ0FERjs7QUFXTyxNQUFNQywwQ0FBaUJDLFNBQVMsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWM7QUFDbkQsUUFBTUMsT0FBT0YsSUFBSUcsSUFBakI7QUFDQSxNQUFJRCxLQUFLRSxNQUFMLEtBQWdCLE1BQWhCLElBQTBCQyxNQUFNQyxPQUFOLENBQWNKLEtBQUtYLEtBQW5CLENBQTlCLEVBQXlEO0FBQ3ZESixnQkFBWWUsS0FBS1gsS0FBakIsRUFBd0JnQixPQUF4QixDQUFnQ0MsS0FBS1QsTUFBTVUsSUFBTixDQUFXRCxDQUFYLENBQXJDO0FBQ0Q7QUFDRFAsTUFBSVMsVUFBSixDQUFlLEdBQWY7QUFDRCxDQU5NOztBQVFBLE1BQU1DLDBDQUFpQixDQUFDWCxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUMxQyxRQUFNVyxPQUFPWixJQUFJYSxLQUFKLENBQVUsVUFBVixDQUFiO0FBQ0EsUUFBTUMsUUFBUWQsSUFBSWEsS0FBSixDQUFVLGtCQUFWLENBQWQ7QUFDQSxRQUFNRSxZQUFZZixJQUFJYSxLQUFKLENBQVUsZUFBVixDQUFsQjtBQUNBLE1BQUlELFFBQVFFLEtBQVosRUFBbUI7QUFDakIsUUFBSUYsU0FBUyxXQUFULElBQXdCRSxVQUFVOUIsNkJBQXRDLEVBQXFFO0FBQ25FaUIsVUFBSWUsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixTQUFyQjtBQUNELEtBRkQsTUFFTztBQUNMZCxVQUFJUyxVQUFKLENBQWUsR0FBZjtBQUNEO0FBQ0YsR0FORCxNQU1PO0FBQ0xULFFBQUlTLFVBQUosQ0FBZSxHQUFmO0FBQ0Q7QUFDRixDQWJNIiwiZmlsZSI6IndlYmhvb2suanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvYWRhcHRlcnMvZmJNZXNzZW5nZXIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEZCX01FU1NFTkdFUl9WQUxJREFUSU9OX1RPS0VOIH0gPSBwcm9jZXNzLmVudjtcblxuY29uc3QgZ2V0TWVzc2FnZXMgPSBlbnRyaWVzID0+IFxuICBbXS5jb25jYXQoXG4gICAgLi4uZW50cmllcy5tYXAoZW50cnkgPT4gXG4gICAgICBlbnRyeS5tZXNzYWdpbmcubWFwKG1lc3NhZ2UgPT4gKHtcbiAgICAgICAgLi4ubWVzc2FnZSxcbiAgICAgICAgcGFnZUlkOiBlbnRyeS5pZCxcbiAgICAgICAgZXZlbnRUaW1lOiBlbnRyeS50aW1lLFxuICAgICAgfSkpXG4gICAgKVxuICApO1xuXG5leHBvcnQgY29uc3QgbWFpbkNvbnRyb2xsZXIgPSBzdWJqJCA9PiAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHJlcS5ib2R5O1xuICBpZiAoZGF0YS5vYmplY3QgPT09ICdwYWdlJyAmJiBBcnJheS5pc0FycmF5KGRhdGEuZW50cnkpKSB7XG4gICAgZ2V0TWVzc2FnZXMoZGF0YS5lbnRyeSkuZm9yRWFjaCh2ID0+IHN1YmokLm5leHQodikpO1xuICB9XG4gIHJlcy5zZW5kU3RhdHVzKDIwMCk7ICBcbn07XG5cbmV4cG9ydCBjb25zdCBhdXRoQ29udHJvbGxlciA9IChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBtb2RlID0gcmVxLnF1ZXJ5WydodWIubW9kZSddO1xuICBjb25zdCB0b2tlbiA9IHJlcS5xdWVyeVsnaHViLnZlcmlmeV90b2tlbiddO1xuICBjb25zdCBjaGFsbGVuZ2UgPSByZXEucXVlcnlbJ2h1Yi5jaGFsbGVuZ2UnXTtcbiAgaWYgKG1vZGUgJiYgdG9rZW4pIHtcbiAgICBpZiAobW9kZSA9PT0gJ3N1YnNjcmliZScgJiYgdG9rZW4gPT09IEZCX01FU1NFTkdFUl9WQUxJREFUSU9OX1RPS0VOKSB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChjaGFsbGVuZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXMuc2VuZFN0YXR1cyg0MDMpOyAgICAgIFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXMuc2VuZFN0YXR1cyg0MDApO1xuICB9XG59O1xuXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "webhook.js"
      ],
      "names": [
        "FB_MESSENGER_VALIDATION_TOKEN",
        "process",
        "env",
        "getMessages",
        "entries",
        "concat",
        "map",
        "entry",
        "messaging",
        "message",
        "pageId",
        "id",
        "eventTime",
        "time",
        "mainController",
        "subj$",
        "req",
        "res",
        "data",
        "body",
        "object",
        "Array",
        "isArray",
        "forEach",
        "v",
        "next",
        "sendStatus",
        "authController",
        "mode",
        "query",
        "token",
        "challenge",
        "status",
        "send"
      ],
      "mappings": ";;;;;;;;AAAA,MAAM,EAAEA,6BAAF,KAAoCC,QAAQC,GAAlD;;AAEA,MAAMC,cAAcC,WAClB,GAAGC,MAAH,CACE,GAAGD,QAAQE,GAAR,CAAYC,SACbA,MAAMC,SAAN,CAAgBF,GAAhB,CAAoBG,wBACfA,OADe;AAElBC,UAAQH,MAAMI,EAFI;AAGlBC,aAAWL,MAAMM;AAHC,EAApB,CADC,CADL,CADF;;AAWO,MAAMC,0CAAiBC,SAAS,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnD,QAAMC,OAAOF,IAAIG,IAAjB;AACA,MAAID,KAAKE,MAAL,KAAgB,MAAhB,IAA0BC,MAAMC,OAAN,CAAcJ,KAAKX,KAAnB,CAA9B,EAAyD;AACvDJ,gBAAYe,KAAKX,KAAjB,EAAwBgB,OAAxB,CAAgCC,KAAKT,MAAMU,IAAN,CAAWD,CAAX,CAArC;AACD;AACDP,MAAIS,UAAJ,CAAe,GAAf;AACD,CANM;;AAQA,MAAMC,0CAAiB,CAACX,GAAD,EAAMC,GAAN,KAAc;AAC1C,QAAMW,OAAOZ,IAAIa,KAAJ,CAAU,UAAV,CAAb;AACA,QAAMC,QAAQd,IAAIa,KAAJ,CAAU,kBAAV,CAAd;AACA,QAAME,YAAYf,IAAIa,KAAJ,CAAU,eAAV,CAAlB;AACA,MAAID,QAAQE,KAAZ,EAAmB;AACjB,QAAIF,SAAS,WAAT,IAAwBE,UAAU9B,6BAAtC,EAAqE;AACnEiB,UAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,SAArB;AACD,KAFD,MAEO;AACLd,UAAIS,UAAJ,CAAe,GAAf;AACD;AACF,GAND,MAMO;AACLT,QAAIS,UAAJ,CAAe,GAAf;AACD;AACF,CAbM",
      "file": "webhook.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "const { FB_MESSENGER_VALIDATION_TOKEN } = process.env;\n\nconst getMessages = entries => \n  [].concat(\n    ...entries.map(entry => \n      entry.messaging.map(message => ({\n        ...message,\n        pageId: entry.id,\n        eventTime: entry.time,\n      }))\n    )\n  );\n\nexport const mainController = subj$ => (req, res) => {\n  const data = req.body;\n  if (data.object === 'page' && Array.isArray(data.entry)) {\n    getMessages(data.entry).forEach(v => subj$.next(v));\n  }\n  res.sendStatus(200);  \n};\n\nexport const authController = (req, res) => {\n  const mode = req.query['hub.mode'];\n  const token = req.query['hub.verify_token'];\n  const challenge = req.query['hub.challenge'];\n  if (mode && token) {\n    if (mode === 'subscribe' && token === FB_MESSENGER_VALIDATION_TOKEN) {\n      res.status(200).send(challenge);\n    } else {\n      res.sendStatus(403);      \n    }\n  } else {\n    res.sendStatus(400);\n  }\n};\n\n"
      ]
    },
    "mtime": 1524555697684
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/send.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request-promise-native",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rp"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "sendTextMessage",
            "recipientId",
            "messageText"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "sendTextMessage",
              "exported": "default"
            },
            {
              "kind": "local",
              "local": "recipientId",
              "exported": "default"
            },
            {
              "kind": "local",
              "local": "messageText",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/send.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/send.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "send.js",
      "sourceFileName": "send.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "send"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sendTextMessage;\n\nvar _requestPromiseNative = require('request-promise-native');\n\nvar _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { FB_MESSENGER_PAGE_ACCESS_TOKEN } = process.env;\n\n/*\n * Call the Send API. The message data goes in the body. If successful, we'll\n * get the message id in a response\n *\n */\nfunction callSendAPI(messageData) {\n  (0, _requestPromiseNative2.default)({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n  }).then(response => {\n    const messageId = response['message_id'];\n    const recipientId = response['recipient_id'];\n    // if (messageId) {\n    //   console.log(`Successfully sent message with id ${messageId} to recipient ${recipientId}`);\n    // }\n    // else {\n    //   console.log(`Successfully called Send API for recipient ${recipientId}`);\n    // }\n  }).catch(err => console.error(err));\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nfunction sendTextMessage(recipientId, messageText) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText,\n      metadata: 'DEVELOPER_DEFINED_METADATA'\n    }\n  };\n\n  callSendAPI(messageData);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmQuanMiXSwibmFtZXMiOlsic2VuZFRleHRNZXNzYWdlIiwiRkJfTUVTU0VOR0VSX1BBR0VfQUNDRVNTX1RPS0VOIiwicHJvY2VzcyIsImVudiIsImNhbGxTZW5kQVBJIiwibWVzc2FnZURhdGEiLCJ1cmkiLCJxcyIsImFjY2Vzc190b2tlbiIsIm1ldGhvZCIsImpzb24iLCJ0aGVuIiwicmVzcG9uc2UiLCJtZXNzYWdlSWQiLCJyZWNpcGllbnRJZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZVRleHQiLCJyZWNpcGllbnQiLCJpZCIsIm1lc3NhZ2UiLCJ0ZXh0IiwibWV0YWRhdGEiXSwibWFwcGluZ3MiOiI7Ozs7O2tCQWlDd0JBLGU7O0FBakN4Qjs7Ozs7O0FBRUEsTUFBTSxFQUFFQyw4QkFBRixLQUFxQ0MsUUFBUUMsR0FBbkQ7O0FBRUE7Ozs7O0FBS0EsU0FBU0MsV0FBVCxDQUFxQkMsV0FBckIsRUFBa0M7QUFDaEMsc0NBQUc7QUFDREMsU0FBSyw2Q0FESjtBQUVEQyxRQUFJLEVBQUVDLGNBQWNQLDhCQUFoQixFQUZIO0FBR0RRLFlBQVEsTUFIUDtBQUlEQyxVQUFNTDtBQUpMLEdBQUgsRUFNR00sSUFOSCxDQU1RQyxZQUFZO0FBQ2hCLFVBQU1DLFlBQVlELFNBQVMsWUFBVCxDQUFsQjtBQUNBLFVBQU1FLGNBQWNGLFNBQVMsY0FBVCxDQUFwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNELEdBZkgsRUFnQkdHLEtBaEJILENBZ0JTQyxPQUFPQyxRQUFRQyxLQUFSLENBQWNGLEdBQWQsQ0FoQmhCO0FBaUJEOztBQUVEOzs7O0FBSWUsU0FBU2hCLGVBQVQsQ0FBeUJjLFdBQXpCLEVBQXNDSyxXQUF0QyxFQUFtRDtBQUNoRSxNQUFJZCxjQUFjO0FBQ2hCZSxlQUFXO0FBQ1RDLFVBQUlQO0FBREssS0FESztBQUloQlEsYUFBUztBQUNQQyxZQUFNSixXQURDO0FBRVBLLGdCQUFVO0FBRkg7QUFKTyxHQUFsQjs7QUFVQXBCLGNBQVlDLFdBQVo7QUFDRCIsImZpbGUiOiJzZW5kLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2ZiTWVzc2VuZ2VyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJwIGZyb20gJ3JlcXVlc3QtcHJvbWlzZS1uYXRpdmUnO1xuXG5jb25zdCB7IEZCX01FU1NFTkdFUl9QQUdFX0FDQ0VTU19UT0tFTiB9ID0gcHJvY2Vzcy5lbnY7XG5cbi8qXG4gKiBDYWxsIHRoZSBTZW5kIEFQSS4gVGhlIG1lc3NhZ2UgZGF0YSBnb2VzIGluIHRoZSBib2R5LiBJZiBzdWNjZXNzZnVsLCB3ZSdsbFxuICogZ2V0IHRoZSBtZXNzYWdlIGlkIGluIGEgcmVzcG9uc2VcbiAqXG4gKi9cbmZ1bmN0aW9uIGNhbGxTZW5kQVBJKG1lc3NhZ2VEYXRhKSB7XG4gIHJwKHtcbiAgICB1cmk6ICdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92Mi42L21lL21lc3NhZ2VzJyxcbiAgICBxczogeyBhY2Nlc3NfdG9rZW46IEZCX01FU1NFTkdFUl9QQUdFX0FDQ0VTU19UT0tFTiB9LFxuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGpzb246IG1lc3NhZ2VEYXRhXG4gIH0pXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgY29uc3QgbWVzc2FnZUlkID0gcmVzcG9uc2VbJ21lc3NhZ2VfaWQnXTtcbiAgICAgIGNvbnN0IHJlY2lwaWVudElkID0gcmVzcG9uc2VbJ3JlY2lwaWVudF9pZCddO1xuICAgICAgLy8gaWYgKG1lc3NhZ2VJZCkge1xuICAgICAgLy8gICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IHNlbnQgbWVzc2FnZSB3aXRoIGlkICR7bWVzc2FnZUlkfSB0byByZWNpcGllbnQgJHtyZWNpcGllbnRJZH1gKTtcbiAgICAgIC8vIH1cbiAgICAgIC8vIGVsc2Uge1xuICAgICAgLy8gICBjb25zb2xlLmxvZyhgU3VjY2Vzc2Z1bGx5IGNhbGxlZCBTZW5kIEFQSSBmb3IgcmVjaXBpZW50ICR7cmVjaXBpZW50SWR9YCk7XG4gICAgICAvLyB9XG4gICAgfSlcbiAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG59XG5cbi8qXG4gKiBTZW5kIGEgdGV4dCBtZXNzYWdlIHVzaW5nIHRoZSBTZW5kIEFQSS5cbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNlbmRUZXh0TWVzc2FnZShyZWNpcGllbnRJZCwgbWVzc2FnZVRleHQpIHtcbiAgdmFyIG1lc3NhZ2VEYXRhID0ge1xuICAgIHJlY2lwaWVudDoge1xuICAgICAgaWQ6IHJlY2lwaWVudElkXG4gICAgfSxcbiAgICBtZXNzYWdlOiB7XG4gICAgICB0ZXh0OiBtZXNzYWdlVGV4dCxcbiAgICAgIG1ldGFkYXRhOiAnREVWRUxPUEVSX0RFRklORURfTUVUQURBVEEnXG4gICAgfVxuICB9O1xuXG4gIGNhbGxTZW5kQVBJKG1lc3NhZ2VEYXRhKTtcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "send.js"
      ],
      "names": [
        "sendTextMessage",
        "FB_MESSENGER_PAGE_ACCESS_TOKEN",
        "process",
        "env",
        "callSendAPI",
        "messageData",
        "uri",
        "qs",
        "access_token",
        "method",
        "json",
        "then",
        "response",
        "messageId",
        "recipientId",
        "catch",
        "err",
        "console",
        "error",
        "messageText",
        "recipient",
        "id",
        "message",
        "text",
        "metadata"
      ],
      "mappings": ";;;;;kBAiCwBA,e;;AAjCxB;;;;;;AAEA,MAAM,EAAEC,8BAAF,KAAqCC,QAAQC,GAAnD;;AAEA;;;;;AAKA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAChC,sCAAG;AACDC,SAAK,6CADJ;AAEDC,QAAI,EAAEC,cAAcP,8BAAhB,EAFH;AAGDQ,YAAQ,MAHP;AAIDC,UAAML;AAJL,GAAH,EAMGM,IANH,CAMQC,YAAY;AAChB,UAAMC,YAAYD,SAAS,YAAT,CAAlB;AACA,UAAME,cAAcF,SAAS,cAAT,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfH,EAgBGG,KAhBH,CAgBSC,OAAOC,QAAQC,KAAR,CAAcF,GAAd,CAhBhB;AAiBD;;AAED;;;;AAIe,SAAShB,eAAT,CAAyBc,WAAzB,EAAsCK,WAAtC,EAAmD;AAChE,MAAId,cAAc;AAChBe,eAAW;AACTC,UAAIP;AADK,KADK;AAIhBQ,aAAS;AACPC,YAAMJ,WADC;AAEPK,gBAAU;AAFH;AAJO,GAAlB;;AAUApB,cAAYC,WAAZ;AACD",
      "file": "send.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "import rp from 'request-promise-native';\n\nconst { FB_MESSENGER_PAGE_ACCESS_TOKEN } = process.env;\n\n/*\n * Call the Send API. The message data goes in the body. If successful, we'll\n * get the message id in a response\n *\n */\nfunction callSendAPI(messageData) {\n  rp({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n  })\n    .then(response => {\n      const messageId = response['message_id'];\n      const recipientId = response['recipient_id'];\n      // if (messageId) {\n      //   console.log(`Successfully sent message with id ${messageId} to recipient ${recipientId}`);\n      // }\n      // else {\n      //   console.log(`Successfully called Send API for recipient ${recipientId}`);\n      // }\n    })\n    .catch(err => console.error(err));\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nexport default function sendTextMessage(recipientId, messageText) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText,\n      metadata: 'DEVELOPER_DEFINED_METADATA'\n    }\n  };\n\n  callSendAPI(messageData);\n}"
      ]
    },
    "mtime": 1524489884486
  },
  "{\"filename\":\"/app/bot/messageContext.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/messageContext.js",
      "filenameRelative": "/app/bot/messageContext.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "messageContext.js",
      "sourceFileName": "messageContext.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "messageContext"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = services => input => {\n  const { message } = input;\n  const { ws, wss, db } = services;\n  const ctxMap = new Map(); // eslint-disable-line\n\n  ctxMap.set('resolved', false);\n  ctxMap.set('startedAt', new Date());\n  ctxMap.set('message', message);\n  ctxMap.set('ws', ws);\n  ctxMap.set('wss', wss);\n  ctxMap.set('db', db);\n  ctxMap.set('reaction', void 0);\n\n  return {\n    // setter & getter\n    set: (key, value) => ctxMap.set(key, value),\n    get: key => ctxMap.get(key),\n\n    // Sugar\n    getMessage: () => ctxMap.get('message'),\n    getMessageContent: () => ctxMap.get('message').content,\n    getAuthorId: () => ctxMap.get('message').authorId,\n    getAuthorName: () => ctxMap.get('message').authorName,\n    getReaction: () => ctxMap.get('reaction'),\n\n    // resolve\n    resolve: reaction => ctxMap.set('resolved', true) && ctxMap.set('reaction', reaction),\n    resolved: () => ctxMap.get('resolved'),\n    reaction: {}\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VDb250ZXh0LmpzIl0sIm5hbWVzIjpbInNlcnZpY2VzIiwiaW5wdXQiLCJtZXNzYWdlIiwid3MiLCJ3c3MiLCJkYiIsImN0eE1hcCIsIk1hcCIsInNldCIsIkRhdGUiLCJrZXkiLCJ2YWx1ZSIsImdldCIsImdldE1lc3NhZ2UiLCJnZXRNZXNzYWdlQ29udGVudCIsImNvbnRlbnQiLCJnZXRBdXRob3JJZCIsImF1dGhvcklkIiwiZ2V0QXV0aG9yTmFtZSIsImF1dGhvck5hbWUiLCJnZXRSZWFjdGlvbiIsInJlc29sdmUiLCJyZWFjdGlvbiIsInJlc29sdmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWdCQSxRQUFELElBQWNDLFNBQVM7QUFDcEMsUUFBTSxFQUFFQyxPQUFGLEtBQWNELEtBQXBCO0FBQ0EsUUFBTSxFQUFFRSxFQUFGLEVBQU1DLEdBQU4sRUFBV0MsRUFBWCxLQUFrQkwsUUFBeEI7QUFDQSxRQUFNTSxTQUFTLElBQUlDLEdBQUosRUFBZixDQUhvQyxDQUdWOztBQUUxQkQsU0FBT0UsR0FBUCxDQUFXLFVBQVgsRUFBdUIsS0FBdkI7QUFDQUYsU0FBT0UsR0FBUCxDQUFXLFdBQVgsRUFBd0IsSUFBSUMsSUFBSixFQUF4QjtBQUNBSCxTQUFPRSxHQUFQLENBQVcsU0FBWCxFQUFzQk4sT0FBdEI7QUFDQUksU0FBT0UsR0FBUCxDQUFXLElBQVgsRUFBaUJMLEVBQWpCO0FBQ0FHLFNBQU9FLEdBQVAsQ0FBVyxLQUFYLEVBQWtCSixHQUFsQjtBQUNBRSxTQUFPRSxHQUFQLENBQVcsSUFBWCxFQUFpQkgsRUFBakI7QUFDQUMsU0FBT0UsR0FBUCxDQUFXLFVBQVgsRUFBdUIsS0FBSyxDQUE1Qjs7QUFFQSxTQUFPO0FBQ0w7QUFDQUEsU0FBSyxDQUFDRSxHQUFELEVBQU1DLEtBQU4sS0FBZ0JMLE9BQU9FLEdBQVAsQ0FBV0UsR0FBWCxFQUFnQkMsS0FBaEIsQ0FGaEI7QUFHTEMsU0FBS0YsT0FBT0osT0FBT00sR0FBUCxDQUFXRixHQUFYLENBSFA7O0FBS0w7QUFDQUcsZ0JBQVksTUFBTVAsT0FBT00sR0FBUCxDQUFXLFNBQVgsQ0FOYjtBQU9MRSx1QkFBbUIsTUFBTVIsT0FBT00sR0FBUCxDQUFXLFNBQVgsRUFBc0JHLE9BUDFDO0FBUUxDLGlCQUFhLE1BQU1WLE9BQU9NLEdBQVAsQ0FBVyxTQUFYLEVBQXNCSyxRQVJwQztBQVNMQyxtQkFBZSxNQUFNWixPQUFPTSxHQUFQLENBQVcsU0FBWCxFQUFzQk8sVUFUdEM7QUFVTEMsaUJBQWEsTUFBTWQsT0FBT00sR0FBUCxDQUFXLFVBQVgsQ0FWZDs7QUFZTDtBQUNBUyxhQUFTQyxZQUFZaEIsT0FBT0UsR0FBUCxDQUFXLFVBQVgsRUFBdUIsSUFBdkIsS0FBZ0NGLE9BQU9FLEdBQVAsQ0FBVyxVQUFYLEVBQXVCYyxRQUF2QixDQWJoRDtBQWNMQyxjQUFVLE1BQU1qQixPQUFPTSxHQUFQLENBQVcsVUFBWCxDQWRYO0FBZUxVLGNBQVU7QUFmTCxHQUFQO0FBaUJELEMiLCJmaWxlIjoibWVzc2FnZUNvbnRleHQuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoc2VydmljZXMpID0+IGlucHV0ID0+IHtcbiAgY29uc3QgeyBtZXNzYWdlIH0gPSBpbnB1dDtcbiAgY29uc3QgeyB3cywgd3NzLCBkYiB9ID0gc2VydmljZXM7XG4gIGNvbnN0IGN0eE1hcCA9IG5ldyBNYXAoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBcbiAgY3R4TWFwLnNldCgncmVzb2x2ZWQnLCBmYWxzZSk7XG4gIGN0eE1hcC5zZXQoJ3N0YXJ0ZWRBdCcsIG5ldyBEYXRlKCkpO1xuICBjdHhNYXAuc2V0KCdtZXNzYWdlJywgbWVzc2FnZSk7XG4gIGN0eE1hcC5zZXQoJ3dzJywgd3MpO1xuICBjdHhNYXAuc2V0KCd3c3MnLCB3c3MpO1xuICBjdHhNYXAuc2V0KCdkYicsIGRiKTtcbiAgY3R4TWFwLnNldCgncmVhY3Rpb24nLCB2b2lkIDApO1xuICBcbiAgcmV0dXJuIHtcbiAgICAvLyBzZXR0ZXIgJiBnZXR0ZXJcbiAgICBzZXQ6IChrZXksIHZhbHVlKSA9PiBjdHhNYXAuc2V0KGtleSwgdmFsdWUpLFxuICAgIGdldDoga2V5ID0+IGN0eE1hcC5nZXQoa2V5KSxcbiAgICBcbiAgICAvLyBTdWdhclxuICAgIGdldE1lc3NhZ2U6ICgpID0+IGN0eE1hcC5nZXQoJ21lc3NhZ2UnKSxcbiAgICBnZXRNZXNzYWdlQ29udGVudDogKCkgPT4gY3R4TWFwLmdldCgnbWVzc2FnZScpLmNvbnRlbnQsXG4gICAgZ2V0QXV0aG9ySWQ6ICgpID0+IGN0eE1hcC5nZXQoJ21lc3NhZ2UnKS5hdXRob3JJZCxcbiAgICBnZXRBdXRob3JOYW1lOiAoKSA9PiBjdHhNYXAuZ2V0KCdtZXNzYWdlJykuYXV0aG9yTmFtZSxcbiAgICBnZXRSZWFjdGlvbjogKCkgPT4gY3R4TWFwLmdldCgncmVhY3Rpb24nKSxcbiAgICBcbiAgICAvLyByZXNvbHZlXG4gICAgcmVzb2x2ZTogcmVhY3Rpb24gPT4gY3R4TWFwLnNldCgncmVzb2x2ZWQnLCB0cnVlKSAmJiBjdHhNYXAuc2V0KCdyZWFjdGlvbicsIHJlYWN0aW9uKSxcbiAgICByZXNvbHZlZDogKCkgPT4gY3R4TWFwLmdldCgncmVzb2x2ZWQnKSxcbiAgICByZWFjdGlvbjoge30sXG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "messageContext.js"
      ],
      "names": [
        "services",
        "input",
        "message",
        "ws",
        "wss",
        "db",
        "ctxMap",
        "Map",
        "set",
        "Date",
        "key",
        "value",
        "get",
        "getMessage",
        "getMessageContent",
        "content",
        "getAuthorId",
        "authorId",
        "getAuthorName",
        "authorName",
        "getReaction",
        "resolve",
        "reaction",
        "resolved"
      ],
      "mappings": ";;;;;;kBAAgBA,QAAD,IAAcC,SAAS;AACpC,QAAM,EAAEC,OAAF,KAAcD,KAApB;AACA,QAAM,EAAEE,EAAF,EAAMC,GAAN,EAAWC,EAAX,KAAkBL,QAAxB;AACA,QAAMM,SAAS,IAAIC,GAAJ,EAAf,CAHoC,CAGV;;AAE1BD,SAAOE,GAAP,CAAW,UAAX,EAAuB,KAAvB;AACAF,SAAOE,GAAP,CAAW,WAAX,EAAwB,IAAIC,IAAJ,EAAxB;AACAH,SAAOE,GAAP,CAAW,SAAX,EAAsBN,OAAtB;AACAI,SAAOE,GAAP,CAAW,IAAX,EAAiBL,EAAjB;AACAG,SAAOE,GAAP,CAAW,KAAX,EAAkBJ,GAAlB;AACAE,SAAOE,GAAP,CAAW,IAAX,EAAiBH,EAAjB;AACAC,SAAOE,GAAP,CAAW,UAAX,EAAuB,KAAK,CAA5B;;AAEA,SAAO;AACL;AACAA,SAAK,CAACE,GAAD,EAAMC,KAAN,KAAgBL,OAAOE,GAAP,CAAWE,GAAX,EAAgBC,KAAhB,CAFhB;AAGLC,SAAKF,OAAOJ,OAAOM,GAAP,CAAWF,GAAX,CAHP;;AAKL;AACAG,gBAAY,MAAMP,OAAOM,GAAP,CAAW,SAAX,CANb;AAOLE,uBAAmB,MAAMR,OAAOM,GAAP,CAAW,SAAX,EAAsBG,OAP1C;AAQLC,iBAAa,MAAMV,OAAOM,GAAP,CAAW,SAAX,EAAsBK,QARpC;AASLC,mBAAe,MAAMZ,OAAOM,GAAP,CAAW,SAAX,EAAsBO,UATtC;AAULC,iBAAa,MAAMd,OAAOM,GAAP,CAAW,UAAX,CAVd;;AAYL;AACAS,aAASC,YAAYhB,OAAOE,GAAP,CAAW,UAAX,EAAuB,IAAvB,KAAgCF,OAAOE,GAAP,CAAW,UAAX,EAAuBc,QAAvB,CAbhD;AAcLC,cAAU,MAAMjB,OAAOM,GAAP,CAAW,UAAX,CAdX;AAeLU,cAAU;AAfL,GAAP;AAiBD,C",
      "file": "messageContext.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "export default (services) => input => {\n  const { message } = input;\n  const { ws, wss, db } = services;\n  const ctxMap = new Map(); // eslint-disable-line\n  \n  ctxMap.set('resolved', false);\n  ctxMap.set('startedAt', new Date());\n  ctxMap.set('message', message);\n  ctxMap.set('ws', ws);\n  ctxMap.set('wss', wss);\n  ctxMap.set('db', db);\n  ctxMap.set('reaction', void 0);\n  \n  return {\n    // setter & getter\n    set: (key, value) => ctxMap.set(key, value),\n    get: key => ctxMap.get(key),\n    \n    // Sugar\n    getMessage: () => ctxMap.get('message'),\n    getMessageContent: () => ctxMap.get('message').content,\n    getAuthorId: () => ctxMap.get('message').authorId,\n    getAuthorName: () => ctxMap.get('message').authorName,\n    getReaction: () => ctxMap.get('reaction'),\n    \n    // resolve\n    resolve: reaction => ctxMap.set('resolved', true) && ctxMap.set('reaction', reaction),\n    resolved: () => ctxMap.get('resolved'),\n    reaction: {},\n  };\n};\n"
      ]
    },
    "mtime": 1525124378751
  },
  "{\"filename\":\"/app/bot/impulses/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/impulses\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./staticReplies",
            "imported": [
              "checkForStaticReply",
              "getStaticReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "checkForStaticReply",
                "local": "checkForStaticReply"
              },
              {
                "kind": "named",
                "imported": "getStaticReply",
                "local": "getStaticReply"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/impulses/index.js",
      "filenameRelative": "/app/bot/impulses/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/impulses",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/impulses",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  if (ctx.resolved()) return ctx;\n  const content = ctx.getMessageContent();\n\n  const iHaveAnImpulseReply = (0, _staticReplies.checkForStaticReply)(content);\n  const reaction = iHaveAnImpulseReply ? (0, _staticReplies.getStaticReply)(content) : ctx.reaction;\n\n  if ((0, _staticReplies.checkForStaticReply)(content)) ctx.resolve((0, _staticReplies.getStaticReply)(content));\n\n  return _extends({}, ctx, { handled: iHaveAnImpulseReply, reaction });\n};\n\nvar _staticReplies = require('./staticReplies');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsInJlc29sdmVkIiwiY29udGVudCIsImdldE1lc3NhZ2VDb250ZW50IiwiaUhhdmVBbkltcHVsc2VSZXBseSIsInJlYWN0aW9uIiwicmVzb2x2ZSIsImhhbmRsZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQUVlLFVBQVNBLEdBQVQsRUFBYztBQUMzQixNQUFJQSxJQUFJQyxRQUFKLEVBQUosRUFBb0IsT0FBT0QsR0FBUDtBQUNwQixRQUFNRSxVQUFVRixJQUFJRyxpQkFBSixFQUFoQjs7QUFFQSxRQUFNQyxzQkFBc0Isd0NBQW9CRixPQUFwQixDQUE1QjtBQUNBLFFBQU1HLFdBQVdELHNCQUFzQixtQ0FBZUYsT0FBZixDQUF0QixHQUFnREYsSUFBSUssUUFBckU7O0FBRUEsTUFBSSx3Q0FBb0JILE9BQXBCLENBQUosRUFBa0NGLElBQUlNLE9BQUosQ0FBWSxtQ0FBZUosT0FBZixDQUFaOztBQUVsQyxzQkFBWUYsR0FBWixJQUFpQk8sU0FBU0gsbUJBQTFCLEVBQStDQyxRQUEvQztBQUNELEM7O0FBWkQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvaW1wdWxzZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGVja0ZvclN0YXRpY1JlcGx5LCBnZXRTdGF0aWNSZXBseSB9IGZyb20gJy4vc3RhdGljUmVwbGllcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGN0eCkge1xuICBpZiAoY3R4LnJlc29sdmVkKCkpIHJldHVybiBjdHg7XG4gIGNvbnN0IGNvbnRlbnQgPSBjdHguZ2V0TWVzc2FnZUNvbnRlbnQoKTtcbiAgXG4gIGNvbnN0IGlIYXZlQW5JbXB1bHNlUmVwbHkgPSBjaGVja0ZvclN0YXRpY1JlcGx5KGNvbnRlbnQpO1xuICBjb25zdCByZWFjdGlvbiA9IGlIYXZlQW5JbXB1bHNlUmVwbHkgPyBnZXRTdGF0aWNSZXBseShjb250ZW50KSA6IGN0eC5yZWFjdGlvbjtcbiAgXG4gIGlmIChjaGVja0ZvclN0YXRpY1JlcGx5KGNvbnRlbnQpKSBjdHgucmVzb2x2ZShnZXRTdGF0aWNSZXBseShjb250ZW50KSk7XG4gIFxuICByZXR1cm4geyAuLi5jdHgsIGhhbmRsZWQ6IGlIYXZlQW5JbXB1bHNlUmVwbHksIHJlYWN0aW9uIH07XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "resolved",
        "content",
        "getMessageContent",
        "iHaveAnImpulseReply",
        "reaction",
        "resolve",
        "handled"
      ],
      "mappings": ";;;;;;;;kBAEe,UAASA,GAAT,EAAc;AAC3B,MAAIA,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,GAAP;AACpB,QAAME,UAAUF,IAAIG,iBAAJ,EAAhB;;AAEA,QAAMC,sBAAsB,wCAAoBF,OAApB,CAA5B;AACA,QAAMG,WAAWD,sBAAsB,mCAAeF,OAAf,CAAtB,GAAgDF,IAAIK,QAArE;;AAEA,MAAI,wCAAoBH,OAApB,CAAJ,EAAkCF,IAAIM,OAAJ,CAAY,mCAAeJ,OAAf,CAAZ;;AAElC,sBAAYF,GAAZ,IAAiBO,SAASH,mBAA1B,EAA+CC,QAA/C;AACD,C;;AAZD",
      "file": "index.js",
      "sourceRoot": "/app/bot/impulses",
      "sourcesContent": [
        "import { checkForStaticReply, getStaticReply } from './staticReplies';\n\nexport default function(ctx) {\n  if (ctx.resolved()) return ctx;\n  const content = ctx.getMessageContent();\n  \n  const iHaveAnImpulseReply = checkForStaticReply(content);\n  const reaction = iHaveAnImpulseReply ? getStaticReply(content) : ctx.reaction;\n  \n  if (checkForStaticReply(content)) ctx.resolve(getStaticReply(content));\n  \n  return { ...ctx, handled: iHaveAnImpulseReply, reaction };\n}\n"
      ]
    },
    "mtime": 1523140089072
  },
  "{\"filename\":\"/app/bot/impulses/staticReplies.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/impulses\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault",
        "interopRequireWildcard"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../actions",
            "imported": [
              "basicTextReply",
              "basicEmbedReply",
              "randomBasicFromArray"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              },
              {
                "kind": "named",
                "imported": "basicEmbedReply",
                "local": "basicEmbedReply"
              },
              {
                "kind": "named",
                "imported": "randomBasicFromArray",
                "local": "pickFrom"
              }
            ]
          },
          {
            "source": "./data/replyDb.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "replyStock"
              }
            ]
          },
          {
            "source": "./data/embedBase.json",
            "imported": [
              "*"
            ],
            "specifiers": [
              {
                "kind": "namespace",
                "local": "embed"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "checkForStaticReply",
            "getStaticReply"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "checkForStaticReply",
              "exported": "checkForStaticReply"
            },
            {
              "kind": "local",
              "local": "getStaticReply",
              "exported": "getStaticReply"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/impulses/staticReplies.js",
      "filenameRelative": "/app/bot/impulses/staticReplies.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "staticReplies.js",
      "sourceFileName": "staticReplies.js",
      "sourceRoot": "/app/bot/impulses",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/impulses",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "staticReplies"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStaticReply = exports.checkForStaticReply = undefined;\n\nvar _actions = require('../actions');\n\nvar _replyDb = require('./data/replyDb.json');\n\nvar _replyDb2 = _interopRequireDefault(_replyDb);\n\nvar _embedBase = require('./data/embedBase.json');\n\nvar embed = _interopRequireWildcard(_embedBase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst xToLower = x => String(x).toLowerCase(); // Esta funcion convierte nuestro texto en un objeto con nuestra respuesta y otros\n// datos utiles\n\nconst replies = new Map(_replyDb2.default); //eslint-disable-line\n\nconst replyThis = _actions.basicTextReply;\n\nconst checkForStaticReply = exports.checkForStaticReply = content => replies.has(xToLower(content));\n\n// Esta es la funcion que exportamos y se lee mas o menos asi:\n// Si el 'content' es igual a 'ping' entonces respondeEsto('pong')\n// fijate que solo la primera linea despues del 'export' no tiene\n// los dos puntos ' : ', cuando agregues mas lineas no olvides respetar esto.\nconst getStaticReply = exports.getStaticReply = content => {\n  const reply = replies.get(xToLower(content));\n  return reply && Array.isArray(reply) ? (0, _actions.randomBasicFromArray)(reply) : replyThis(reply);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpY1JlcGxpZXMuanMiXSwibmFtZXMiOlsiZW1iZWQiLCJ4VG9Mb3dlciIsIngiLCJTdHJpbmciLCJ0b0xvd2VyQ2FzZSIsInJlcGxpZXMiLCJNYXAiLCJyZXBseVRoaXMiLCJjaGVja0ZvclN0YXRpY1JlcGx5IiwiY29udGVudCIsImhhcyIsImdldFN0YXRpY1JlcGx5IiwicmVwbHkiLCJnZXQiLCJBcnJheSIsImlzQXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFNQTs7OztBQUNBOztJQUFZQSxLOzs7Ozs7QUFFWixNQUFNQyxXQUFXQyxLQUFLQyxPQUFPRCxDQUFQLEVBQVVFLFdBQVYsRUFBdEIsQyxDQVhBO0FBQ0E7O0FBV0EsTUFBTUMsVUFBVSxJQUFJQyxHQUFKLG1CQUFoQixDLENBQXFDOztBQUVyQyxNQUFNQyxtQ0FBTjs7QUFFTyxNQUFNQyxvREFBc0JDLFdBQVdKLFFBQVFLLEdBQVIsQ0FBWVQsU0FBU1EsT0FBVCxDQUFaLENBQXZDOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sTUFBTUUsMENBQWlCRixXQUFXO0FBQ3ZDLFFBQU1HLFFBQVFQLFFBQVFRLEdBQVIsQ0FBWVosU0FBU1EsT0FBVCxDQUFaLENBQWQ7QUFDQSxTQUFPRyxTQUFTRSxNQUFNQyxPQUFOLENBQWNILEtBQWQsQ0FBVCxHQUFnQyxtQ0FBU0EsS0FBVCxDQUFoQyxHQUFrREwsVUFBVUssS0FBVixDQUF6RDtBQUNELENBSE0iLCJmaWxlIjoic3RhdGljUmVwbGllcy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9pbXB1bHNlcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEVzdGEgZnVuY2lvbiBjb252aWVydGUgbnVlc3RybyB0ZXh0byBlbiB1biBvYmpldG8gY29uIG51ZXN0cmEgcmVzcHVlc3RhIHkgb3Ryb3Ncbi8vIGRhdG9zIHV0aWxlc1xuaW1wb3J0IHtcbiAgYmFzaWNUZXh0UmVwbHksXG4gIGJhc2ljRW1iZWRSZXBseSxcbiAgcmFuZG9tQmFzaWNGcm9tQXJyYXkgYXMgcGlja0Zyb20sXG59IGZyb20gJy4uL2FjdGlvbnMnO1xuXG5pbXBvcnQgcmVwbHlTdG9jayBmcm9tICcuL2RhdGEvcmVwbHlEYi5qc29uJztcbmltcG9ydCAqIGFzIGVtYmVkIGZyb20gJy4vZGF0YS9lbWJlZEJhc2UuanNvbic7XG5cbmNvbnN0IHhUb0xvd2VyID0geCA9PiBTdHJpbmcoeCkudG9Mb3dlckNhc2UoKTtcbmNvbnN0IHJlcGxpZXMgPSBuZXcgTWFwKHJlcGx5U3RvY2spOyAvL2VzbGludC1kaXNhYmxlLWxpbmVcblxuY29uc3QgcmVwbHlUaGlzID0gYmFzaWNUZXh0UmVwbHk7XG5cbmV4cG9ydCBjb25zdCBjaGVja0ZvclN0YXRpY1JlcGx5ID0gY29udGVudCA9PiByZXBsaWVzLmhhcyh4VG9Mb3dlcihjb250ZW50KSk7XG5cbi8vIEVzdGEgZXMgbGEgZnVuY2lvbiBxdWUgZXhwb3J0YW1vcyB5IHNlIGxlZSBtYXMgbyBtZW5vcyBhc2k6XG4vLyBTaSBlbCAnY29udGVudCcgZXMgaWd1YWwgYSAncGluZycgZW50b25jZXMgcmVzcG9uZGVFc3RvKCdwb25nJylcbi8vIGZpamF0ZSBxdWUgc29sbyBsYSBwcmltZXJhIGxpbmVhIGRlc3B1ZXMgZGVsICdleHBvcnQnIG5vIHRpZW5lXG4vLyBsb3MgZG9zIHB1bnRvcyAnIDogJywgY3VhbmRvIGFncmVndWVzIG1hcyBsaW5lYXMgbm8gb2x2aWRlcyByZXNwZXRhciBlc3RvLlxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1JlcGx5ID0gY29udGVudCA9PiB7XG4gIGNvbnN0IHJlcGx5ID0gcmVwbGllcy5nZXQoeFRvTG93ZXIoY29udGVudCkpO1xuICByZXR1cm4gcmVwbHkgJiYgQXJyYXkuaXNBcnJheShyZXBseSkgPyBwaWNrRnJvbShyZXBseSkgOiByZXBseVRoaXMocmVwbHkpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "staticReplies.js"
      ],
      "names": [
        "embed",
        "xToLower",
        "x",
        "String",
        "toLowerCase",
        "replies",
        "Map",
        "replyThis",
        "checkForStaticReply",
        "content",
        "has",
        "getStaticReply",
        "reply",
        "get",
        "Array",
        "isArray"
      ],
      "mappings": ";;;;;;;AAEA;;AAMA;;;;AACA;;IAAYA,K;;;;;;AAEZ,MAAMC,WAAWC,KAAKC,OAAOD,CAAP,EAAUE,WAAV,EAAtB,C,CAXA;AACA;;AAWA,MAAMC,UAAU,IAAIC,GAAJ,mBAAhB,C,CAAqC;;AAErC,MAAMC,mCAAN;;AAEO,MAAMC,oDAAsBC,WAAWJ,QAAQK,GAAR,CAAYT,SAASQ,OAAT,CAAZ,CAAvC;;AAEP;AACA;AACA;AACA;AACO,MAAME,0CAAiBF,WAAW;AACvC,QAAMG,QAAQP,QAAQQ,GAAR,CAAYZ,SAASQ,OAAT,CAAZ,CAAd;AACA,SAAOG,SAASE,MAAMC,OAAN,CAAcH,KAAd,CAAT,GAAgC,mCAASA,KAAT,CAAhC,GAAkDL,UAAUK,KAAV,CAAzD;AACD,CAHM",
      "file": "staticReplies.js",
      "sourceRoot": "/app/bot/impulses",
      "sourcesContent": [
        "// Esta funcion convierte nuestro texto en un objeto con nuestra respuesta y otros\n// datos utiles\nimport {\n  basicTextReply,\n  basicEmbedReply,\n  randomBasicFromArray as pickFrom,\n} from '../actions';\n\nimport replyStock from './data/replyDb.json';\nimport * as embed from './data/embedBase.json';\n\nconst xToLower = x => String(x).toLowerCase();\nconst replies = new Map(replyStock); //eslint-disable-line\n\nconst replyThis = basicTextReply;\n\nexport const checkForStaticReply = content => replies.has(xToLower(content));\n\n// Esta es la funcion que exportamos y se lee mas o menos asi:\n// Si el 'content' es igual a 'ping' entonces respondeEsto('pong')\n// fijate que solo la primera linea despues del 'export' no tiene\n// los dos puntos ' : ', cuando agregues mas lineas no olvides respetar esto.\nexport const getStaticReply = content => {\n  const reply = replies.get(xToLower(content));\n  return reply && Array.isArray(reply) ? pickFrom(reply) : replyThis(reply);\n};\n"
      ]
    },
    "mtime": 1523140004915
  },
  "{\"filename\":\"/app/bot/actions.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "basicTextReply",
            "basicEmbedReply",
            "basicRichContentReply",
            "randomBasicFromArray"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "basicTextReply",
              "exported": "basicTextReply"
            },
            {
              "kind": "local",
              "local": "basicEmbedReply",
              "exported": "basicEmbedReply"
            },
            {
              "kind": "local",
              "local": "basicRichContentReply",
              "exported": "basicRichContentReply"
            },
            {
              "kind": "local",
              "local": "randomBasicFromArray",
              "exported": "randomBasicFromArray"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/actions.js",
      "filenameRelative": "/app/bot/actions.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "actions.js",
      "sourceFileName": "actions.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "actions"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst basicTextReply = exports.basicTextReply = text => ({\n  type: text && text !== '' ? 'message-reply' : 'ignore',\n  message: { contentType: 'text', content: text }\n});\n\nconst basicEmbedReply = exports.basicEmbedReply = embed => ({\n  type: embed ? 'message-reply' : 'ignore',\n  message: { contentType: 'embed', content: embed }\n});\n\nconst basicRichContentReply = exports.basicRichContentReply = content => ({\n  type: content ? 'message-reply' : 'ignore',\n  message: { contentType: 'rich-content', content }\n});\n\nconst randomBasicFromArray = exports.randomBasicFromArray = replies => basicTextReply(replies[Math.floor(Math.random() * replies.length)]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsiYmFzaWNUZXh0UmVwbHkiLCJ0ZXh0IiwidHlwZSIsIm1lc3NhZ2UiLCJjb250ZW50VHlwZSIsImNvbnRlbnQiLCJiYXNpY0VtYmVkUmVwbHkiLCJlbWJlZCIsImJhc2ljUmljaENvbnRlbnRSZXBseSIsInJhbmRvbUJhc2ljRnJvbUFycmF5IiwicmVwbGllcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSwwQ0FBaUJDLFNBQVM7QUFDckNDLFFBQU1ELFFBQVFBLFNBQVMsRUFBakIsR0FBc0IsZUFBdEIsR0FBd0MsUUFEVDtBQUVyQ0UsV0FBUyxFQUFFQyxhQUFhLE1BQWYsRUFBdUJDLFNBQVNKLElBQWhDO0FBRjRCLENBQVQsQ0FBdkI7O0FBS0EsTUFBTUssNENBQWtCQyxVQUFVO0FBQ3ZDTCxRQUFNSyxRQUFRLGVBQVIsR0FBMEIsUUFETztBQUV2Q0osV0FBUyxFQUFFQyxhQUFhLE9BQWYsRUFBd0JDLFNBQVNFLEtBQWpDO0FBRjhCLENBQVYsQ0FBeEI7O0FBS0EsTUFBTUMsd0RBQXdCSCxZQUFZO0FBQy9DSCxRQUFNRyxVQUFVLGVBQVYsR0FBNEIsUUFEYTtBQUUvQ0YsV0FBUyxFQUFFQyxhQUFhLGNBQWYsRUFBK0JDLE9BQS9CO0FBRnNDLENBQVosQ0FBOUI7O0FBS0EsTUFBTUksc0RBQXVCQyxXQUNsQ1YsZUFBZVUsUUFBUUMsS0FBS0MsS0FBTCxDQUFXRCxLQUFLRSxNQUFMLEtBQWdCSCxRQUFRSSxNQUFuQyxDQUFSLENBQWYsQ0FESyIsImZpbGUiOiJhY3Rpb25zLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90Iiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJhc2ljVGV4dFJlcGx5ID0gdGV4dCA9PiAoe1xuICB0eXBlOiB0ZXh0ICYmIHRleHQgIT09ICcnID8gJ21lc3NhZ2UtcmVwbHknIDogJ2lnbm9yZScsXG4gIG1lc3NhZ2U6IHsgY29udGVudFR5cGU6ICd0ZXh0JywgY29udGVudDogdGV4dCB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBiYXNpY0VtYmVkUmVwbHkgPSBlbWJlZCA9PiAoe1xuICB0eXBlOiBlbWJlZCA/ICdtZXNzYWdlLXJlcGx5JyA6ICdpZ25vcmUnLFxuICBtZXNzYWdlOiB7IGNvbnRlbnRUeXBlOiAnZW1iZWQnLCBjb250ZW50OiBlbWJlZCB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBiYXNpY1JpY2hDb250ZW50UmVwbHkgPSBjb250ZW50ID0+ICh7XG4gIHR5cGU6IGNvbnRlbnQgPyAnbWVzc2FnZS1yZXBseScgOiAnaWdub3JlJyxcbiAgbWVzc2FnZTogeyBjb250ZW50VHlwZTogJ3JpY2gtY29udGVudCcsIGNvbnRlbnQgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgcmFuZG9tQmFzaWNGcm9tQXJyYXkgPSByZXBsaWVzID0+XG4gIGJhc2ljVGV4dFJlcGx5KHJlcGxpZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVwbGllcy5sZW5ndGgpXSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "actions.js"
      ],
      "names": [
        "basicTextReply",
        "text",
        "type",
        "message",
        "contentType",
        "content",
        "basicEmbedReply",
        "embed",
        "basicRichContentReply",
        "randomBasicFromArray",
        "replies",
        "Math",
        "floor",
        "random",
        "length"
      ],
      "mappings": ";;;;;AAAO,MAAMA,0CAAiBC,SAAS;AACrCC,QAAMD,QAAQA,SAAS,EAAjB,GAAsB,eAAtB,GAAwC,QADT;AAErCE,WAAS,EAAEC,aAAa,MAAf,EAAuBC,SAASJ,IAAhC;AAF4B,CAAT,CAAvB;;AAKA,MAAMK,4CAAkBC,UAAU;AACvCL,QAAMK,QAAQ,eAAR,GAA0B,QADO;AAEvCJ,WAAS,EAAEC,aAAa,OAAf,EAAwBC,SAASE,KAAjC;AAF8B,CAAV,CAAxB;;AAKA,MAAMC,wDAAwBH,YAAY;AAC/CH,QAAMG,UAAU,eAAV,GAA4B,QADa;AAE/CF,WAAS,EAAEC,aAAa,cAAf,EAA+BC,OAA/B;AAFsC,CAAZ,CAA9B;;AAKA,MAAMI,sDAAuBC,WAClCV,eAAeU,QAAQC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,QAAQI,MAAnC,CAAR,CAAf,CADK",
      "file": "actions.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "export const basicTextReply = text => ({\n  type: text && text !== '' ? 'message-reply' : 'ignore',\n  message: { contentType: 'text', content: text },\n});\n\nexport const basicEmbedReply = embed => ({\n  type: embed ? 'message-reply' : 'ignore',\n  message: { contentType: 'embed', content: embed },\n});\n\nexport const basicRichContentReply = content => ({\n  type: content ? 'message-reply' : 'ignore',\n  message: { contentType: 'rich-content', content },\n});\n\nexport const randomBasicFromArray = replies =>\n  basicTextReply(replies[Math.floor(Math.random() * replies.length)]);\n"
      ]
    },
    "mtime": 1523080955366
  },
  "{\"filename\":\"/app/bot/filterMessages.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/filterMessages.js",
      "filenameRelative": "/app/bot/filterMessages.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "filterMessages.js",
      "sourceFileName": "filterMessages.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "filterMessages"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  if (ctx.resolved()) return ctx;\n  const conversation = ctx.get('conversation');\n\n  const activeConversation = Boolean(conversation) && conversation.isActive;\n  const iWasMentioned = botNameRegExp.test(String(ctx.getMessageContent()).toLowerCase());\n\n  const shouldAttend = iWasMentioned || activeConversation;\n\n  if (shouldAttend) {}\n  const type = shouldAttend ? 'process-message' : 'ignore';\n\n  return _extends({}, ctx, { type });\n};\n\nconst botNameRegExp = new RegExp(process.env.BOT_NAME_REGEXP || 'bot', 'i');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlck1lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbImN0eCIsInJlc29sdmVkIiwiY29udmVyc2F0aW9uIiwiZ2V0IiwiYWN0aXZlQ29udmVyc2F0aW9uIiwiQm9vbGVhbiIsImlzQWN0aXZlIiwiaVdhc01lbnRpb25lZCIsImJvdE5hbWVSZWdFeHAiLCJ0ZXN0IiwiU3RyaW5nIiwiZ2V0TWVzc2FnZUNvbnRlbnQiLCJ0b0xvd2VyQ2FzZSIsInNob3VsZEF0dGVuZCIsInR5cGUiLCJSZWdFeHAiLCJwcm9jZXNzIiwiZW52IiwiQk9UX05BTUVfUkVHRVhQIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztrQkFFZSxVQUFTQSxHQUFULEVBQWM7QUFDM0IsTUFBSUEsSUFBSUMsUUFBSixFQUFKLEVBQW9CLE9BQU9ELEdBQVA7QUFDcEIsUUFBTUUsZUFBZUYsSUFBSUcsR0FBSixDQUFRLGNBQVIsQ0FBckI7O0FBRUEsUUFBTUMscUJBQXFCQyxRQUFRSCxZQUFSLEtBQXlCQSxhQUFhSSxRQUFqRTtBQUNBLFFBQU1DLGdCQUFnQkMsY0FBY0MsSUFBZCxDQUFtQkMsT0FBT1YsSUFBSVcsaUJBQUosRUFBUCxFQUFnQ0MsV0FBaEMsRUFBbkIsQ0FBdEI7O0FBRUEsUUFBTUMsZUFBZU4saUJBQWlCSCxrQkFBdEM7O0FBRUEsTUFBSVMsWUFBSixFQUFrQixDQUVqQjtBQUNELFFBQU1DLE9BQU9ELGVBQWUsaUJBQWYsR0FBbUMsUUFBaEQ7O0FBRUEsc0JBQVliLEdBQVosSUFBaUJjLElBQWpCO0FBQ0QsQzs7QUFqQkQsTUFBTU4sZ0JBQWdCLElBQUlPLE1BQUosQ0FBV0MsUUFBUUMsR0FBUixDQUFZQyxlQUFaLElBQStCLEtBQTFDLEVBQWlELEdBQWpELENBQXRCIiwiZmlsZSI6ImZpbHRlck1lc3NhZ2VzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYm90TmFtZVJlZ0V4cCA9IG5ldyBSZWdFeHAocHJvY2Vzcy5lbnYuQk9UX05BTUVfUkVHRVhQIHx8ICdib3QnLCAnaScpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjdHgpIHtcbiAgaWYgKGN0eC5yZXNvbHZlZCgpKSByZXR1cm4gY3R4O1xuICBjb25zdCBjb252ZXJzYXRpb24gPSBjdHguZ2V0KCdjb252ZXJzYXRpb24nKTtcbiAgXG4gIGNvbnN0IGFjdGl2ZUNvbnZlcnNhdGlvbiA9IEJvb2xlYW4oY29udmVyc2F0aW9uKSAmJiBjb252ZXJzYXRpb24uaXNBY3RpdmU7XG4gIGNvbnN0IGlXYXNNZW50aW9uZWQgPSBib3ROYW1lUmVnRXhwLnRlc3QoU3RyaW5nKGN0eC5nZXRNZXNzYWdlQ29udGVudCgpKS50b0xvd2VyQ2FzZSgpKTtcblxuICBjb25zdCBzaG91bGRBdHRlbmQgPSBpV2FzTWVudGlvbmVkIHx8IGFjdGl2ZUNvbnZlcnNhdGlvbjtcblxuICBpZiAoc2hvdWxkQXR0ZW5kKSB7XG4gICAgXG4gIH1cbiAgY29uc3QgdHlwZSA9IHNob3VsZEF0dGVuZCA/ICdwcm9jZXNzLW1lc3NhZ2UnIDogJ2lnbm9yZSc7XG5cbiAgcmV0dXJuIHsgLi4uY3R4LCB0eXBlIH07XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "filterMessages.js"
      ],
      "names": [
        "ctx",
        "resolved",
        "conversation",
        "get",
        "activeConversation",
        "Boolean",
        "isActive",
        "iWasMentioned",
        "botNameRegExp",
        "test",
        "String",
        "getMessageContent",
        "toLowerCase",
        "shouldAttend",
        "type",
        "RegExp",
        "process",
        "env",
        "BOT_NAME_REGEXP"
      ],
      "mappings": ";;;;;;;;kBAEe,UAASA,GAAT,EAAc;AAC3B,MAAIA,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,GAAP;AACpB,QAAME,eAAeF,IAAIG,GAAJ,CAAQ,cAAR,CAArB;;AAEA,QAAMC,qBAAqBC,QAAQH,YAAR,KAAyBA,aAAaI,QAAjE;AACA,QAAMC,gBAAgBC,cAAcC,IAAd,CAAmBC,OAAOV,IAAIW,iBAAJ,EAAP,EAAgCC,WAAhC,EAAnB,CAAtB;;AAEA,QAAMC,eAAeN,iBAAiBH,kBAAtC;;AAEA,MAAIS,YAAJ,EAAkB,CAEjB;AACD,QAAMC,OAAOD,eAAe,iBAAf,GAAmC,QAAhD;;AAEA,sBAAYb,GAAZ,IAAiBc,IAAjB;AACD,C;;AAjBD,MAAMN,gBAAgB,IAAIO,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,eAAZ,IAA+B,KAA1C,EAAiD,GAAjD,CAAtB",
      "file": "filterMessages.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "const botNameRegExp = new RegExp(process.env.BOT_NAME_REGEXP || 'bot', 'i');\n\nexport default function(ctx) {\n  if (ctx.resolved()) return ctx;\n  const conversation = ctx.get('conversation');\n  \n  const activeConversation = Boolean(conversation) && conversation.isActive;\n  const iWasMentioned = botNameRegExp.test(String(ctx.getMessageContent()).toLowerCase());\n\n  const shouldAttend = iWasMentioned || activeConversation;\n\n  if (shouldAttend) {\n    \n  }\n  const type = shouldAttend ? 'process-message' : 'ignore';\n\n  return { ...ctx, type };\n}\n"
      ]
    },
    "mtime": 1524103502989
  },
  "{\"filename\":\"/app/bot/skills/conversation/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/conversation\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../memory/shortTerm",
            "imported": [
              "addTopic"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "addTopic",
                "local": "addTopic"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/conversation/index.js",
      "filenameRelative": "/app/bot/skills/conversation/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/conversation",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/conversation",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  const message = ctx.getMessage();\n  let conversation = conversations.get(ctx.getAuthorId());\n  if (conversation) {\n    conversation.messages.push(message);\n    conversation.isActive = true;\n  } else {\n    conversation = conversationFactory(message);\n  }\n  conversations.set(ctx.getAuthorId(), conversation);\n  ctx.set('conversation', conversation);\n\n  return _extends({}, ctx, {\n    activateConversation: activate(conversation),\n    endConversation: end(conversation)\n  });\n};\n\nvar _shortTerm = require('../../memory/shortTerm');\n\nconst conversations = (0, _shortTerm.addTopic)('conversations', { stdTTL: 120 });\nconst conversationFactory = input => ({\n  id: input.authorId,\n  lastSeen: new Date(),\n  messages: [input],\n  isActive: false\n});\n\nconst activate = conversation => () => {\n  const { id } = conversation;\n  conversations.set(id, _extends({}, conversation, { isActive: true }));\n  return conversations.get(id);\n};\n\nconst end = ({ id }) => () => conversations.del(id);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsIm1lc3NhZ2UiLCJnZXRNZXNzYWdlIiwiY29udmVyc2F0aW9uIiwiY29udmVyc2F0aW9ucyIsImdldCIsImdldEF1dGhvcklkIiwibWVzc2FnZXMiLCJwdXNoIiwiaXNBY3RpdmUiLCJjb252ZXJzYXRpb25GYWN0b3J5Iiwic2V0IiwiYWN0aXZhdGVDb252ZXJzYXRpb24iLCJhY3RpdmF0ZSIsImVuZENvbnZlcnNhdGlvbiIsImVuZCIsInN0ZFRUTCIsImlucHV0IiwiaWQiLCJhdXRob3JJZCIsImxhc3RTZWVuIiwiRGF0ZSIsImRlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBa0JlLFVBQVNBLEdBQVQsRUFBYztBQUMzQixRQUFNQyxVQUFVRCxJQUFJRSxVQUFKLEVBQWhCO0FBQ0EsTUFBSUMsZUFBZUMsY0FBY0MsR0FBZCxDQUFrQkwsSUFBSU0sV0FBSixFQUFsQixDQUFuQjtBQUNBLE1BQUlILFlBQUosRUFBa0I7QUFDaEJBLGlCQUFhSSxRQUFiLENBQXNCQyxJQUF0QixDQUEyQlAsT0FBM0I7QUFDQUUsaUJBQWFNLFFBQWIsR0FBd0IsSUFBeEI7QUFDRCxHQUhELE1BR087QUFDTE4sbUJBQWVPLG9CQUFvQlQsT0FBcEIsQ0FBZjtBQUNEO0FBQ0RHLGdCQUFjTyxHQUFkLENBQWtCWCxJQUFJTSxXQUFKLEVBQWxCLEVBQXFDSCxZQUFyQztBQUNBSCxNQUFJVyxHQUFKLENBQVEsY0FBUixFQUF3QlIsWUFBeEI7O0FBRUEsc0JBQ0tILEdBREw7QUFFRVksMEJBQXNCQyxTQUFTVixZQUFULENBRnhCO0FBR0VXLHFCQUFpQkMsSUFBSVosWUFBSjtBQUhuQjtBQUtELEM7O0FBbkNEOztBQUVBLE1BQU1DLGdCQUFnQix5QkFBUyxlQUFULEVBQTBCLEVBQUVZLFFBQVEsR0FBVixFQUExQixDQUF0QjtBQUNBLE1BQU1OLHNCQUFzQk8sVUFBVTtBQUNwQ0MsTUFBSUQsTUFBTUUsUUFEMEI7QUFFcENDLFlBQVUsSUFBSUMsSUFBSixFQUYwQjtBQUdwQ2QsWUFBVSxDQUFDVSxLQUFELENBSDBCO0FBSXBDUixZQUFVO0FBSjBCLENBQVYsQ0FBNUI7O0FBT0EsTUFBTUksV0FBV1YsZ0JBQWdCLE1BQU07QUFDckMsUUFBTSxFQUFFZSxFQUFGLEtBQVNmLFlBQWY7QUFDQUMsZ0JBQWNPLEdBQWQsQ0FBa0JPLEVBQWxCLGVBQTBCZixZQUExQixJQUF3Q00sVUFBVSxJQUFsRDtBQUNBLFNBQU9MLGNBQWNDLEdBQWQsQ0FBa0JhLEVBQWxCLENBQVA7QUFDRCxDQUpEOztBQU1BLE1BQU1ILE1BQU0sQ0FBQyxFQUFFRyxFQUFGLEVBQUQsS0FBWSxNQUFNZCxjQUFja0IsR0FBZCxDQUFrQkosRUFBbEIsQ0FBOUIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzL2NvbnZlcnNhdGlvbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFRvcGljIH0gZnJvbSAnLi4vLi4vbWVtb3J5L3Nob3J0VGVybSc7XG5cbmNvbnN0IGNvbnZlcnNhdGlvbnMgPSBhZGRUb3BpYygnY29udmVyc2F0aW9ucycsIHsgc3RkVFRMOiAxMjAgfSk7XG5jb25zdCBjb252ZXJzYXRpb25GYWN0b3J5ID0gaW5wdXQgPT4gKHtcbiAgaWQ6IGlucHV0LmF1dGhvcklkLFxuICBsYXN0U2VlbjogbmV3IERhdGUoKSxcbiAgbWVzc2FnZXM6IFtpbnB1dF0sXG4gIGlzQWN0aXZlOiBmYWxzZSxcbn0pO1xuXG5jb25zdCBhY3RpdmF0ZSA9IGNvbnZlcnNhdGlvbiA9PiAoKSA9PiB7XG4gIGNvbnN0IHsgaWQgfSA9IGNvbnZlcnNhdGlvbjtcbiAgY29udmVyc2F0aW9ucy5zZXQoaWQsIHsuLi5jb252ZXJzYXRpb24sIGlzQWN0aXZlOiB0cnVlIH0pO1xuICByZXR1cm4gY29udmVyc2F0aW9ucy5nZXQoaWQpO1xufTtcblxuY29uc3QgZW5kID0gKHsgaWQgfSkgPT4gKCkgPT4gY29udmVyc2F0aW9ucy5kZWwoaWQpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjdHgpIHtcbiAgY29uc3QgbWVzc2FnZSA9IGN0eC5nZXRNZXNzYWdlKCk7XG4gIGxldCBjb252ZXJzYXRpb24gPSBjb252ZXJzYXRpb25zLmdldChjdHguZ2V0QXV0aG9ySWQoKSk7XG4gIGlmIChjb252ZXJzYXRpb24pIHtcbiAgICBjb252ZXJzYXRpb24ubWVzc2FnZXMucHVzaChtZXNzYWdlKTtcbiAgICBjb252ZXJzYXRpb24uaXNBY3RpdmUgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGNvbnZlcnNhdGlvbiA9IGNvbnZlcnNhdGlvbkZhY3RvcnkobWVzc2FnZSk7XG4gIH1cbiAgY29udmVyc2F0aW9ucy5zZXQoY3R4LmdldEF1dGhvcklkKCksIGNvbnZlcnNhdGlvbik7XG4gIGN0eC5zZXQoJ2NvbnZlcnNhdGlvbicsIGNvbnZlcnNhdGlvbik7XG4gIFxuICByZXR1cm4ge1xuICAgIC4uLmN0eCxcbiAgICBhY3RpdmF0ZUNvbnZlcnNhdGlvbjogYWN0aXZhdGUoY29udmVyc2F0aW9uKSxcbiAgICBlbmRDb252ZXJzYXRpb246IGVuZChjb252ZXJzYXRpb24pXG4gIH07XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "message",
        "getMessage",
        "conversation",
        "conversations",
        "get",
        "getAuthorId",
        "messages",
        "push",
        "isActive",
        "conversationFactory",
        "set",
        "activateConversation",
        "activate",
        "endConversation",
        "end",
        "stdTTL",
        "input",
        "id",
        "authorId",
        "lastSeen",
        "Date",
        "del"
      ],
      "mappings": ";;;;;;;;kBAkBe,UAASA,GAAT,EAAc;AAC3B,QAAMC,UAAUD,IAAIE,UAAJ,EAAhB;AACA,MAAIC,eAAeC,cAAcC,GAAd,CAAkBL,IAAIM,WAAJ,EAAlB,CAAnB;AACA,MAAIH,YAAJ,EAAkB;AAChBA,iBAAaI,QAAb,CAAsBC,IAAtB,CAA2BP,OAA3B;AACAE,iBAAaM,QAAb,GAAwB,IAAxB;AACD,GAHD,MAGO;AACLN,mBAAeO,oBAAoBT,OAApB,CAAf;AACD;AACDG,gBAAcO,GAAd,CAAkBX,IAAIM,WAAJ,EAAlB,EAAqCH,YAArC;AACAH,MAAIW,GAAJ,CAAQ,cAAR,EAAwBR,YAAxB;;AAEA,sBACKH,GADL;AAEEY,0BAAsBC,SAASV,YAAT,CAFxB;AAGEW,qBAAiBC,IAAIZ,YAAJ;AAHnB;AAKD,C;;AAnCD;;AAEA,MAAMC,gBAAgB,yBAAS,eAAT,EAA0B,EAAEY,QAAQ,GAAV,EAA1B,CAAtB;AACA,MAAMN,sBAAsBO,UAAU;AACpCC,MAAID,MAAME,QAD0B;AAEpCC,YAAU,IAAIC,IAAJ,EAF0B;AAGpCd,YAAU,CAACU,KAAD,CAH0B;AAIpCR,YAAU;AAJ0B,CAAV,CAA5B;;AAOA,MAAMI,WAAWV,gBAAgB,MAAM;AACrC,QAAM,EAAEe,EAAF,KAASf,YAAf;AACAC,gBAAcO,GAAd,CAAkBO,EAAlB,eAA0Bf,YAA1B,IAAwCM,UAAU,IAAlD;AACA,SAAOL,cAAcC,GAAd,CAAkBa,EAAlB,CAAP;AACD,CAJD;;AAMA,MAAMH,MAAM,CAAC,EAAEG,EAAF,EAAD,KAAY,MAAMd,cAAckB,GAAd,CAAkBJ,EAAlB,CAA9B",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/conversation",
      "sourcesContent": [
        "import { addTopic } from '../../memory/shortTerm';\n\nconst conversations = addTopic('conversations', { stdTTL: 120 });\nconst conversationFactory = input => ({\n  id: input.authorId,\n  lastSeen: new Date(),\n  messages: [input],\n  isActive: false,\n});\n\nconst activate = conversation => () => {\n  const { id } = conversation;\n  conversations.set(id, {...conversation, isActive: true });\n  return conversations.get(id);\n};\n\nconst end = ({ id }) => () => conversations.del(id);\n\nexport default function(ctx) {\n  const message = ctx.getMessage();\n  let conversation = conversations.get(ctx.getAuthorId());\n  if (conversation) {\n    conversation.messages.push(message);\n    conversation.isActive = true;\n  } else {\n    conversation = conversationFactory(message);\n  }\n  conversations.set(ctx.getAuthorId(), conversation);\n  ctx.set('conversation', conversation);\n  \n  return {\n    ...ctx,\n    activateConversation: activate(conversation),\n    endConversation: end(conversation)\n  };\n}\n"
      ]
    },
    "mtime": 1525135113861
  },
  "{\"filename\":\"/app/bot/memory/shortTerm.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/memory\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "node-cache",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "NodeCache"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addTopic",
            "getTopic"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addTopic",
              "exported": "addTopic"
            },
            {
              "kind": "local",
              "local": "getTopic",
              "exported": "getTopic"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/memory/shortTerm.js",
      "filenameRelative": "/app/bot/memory/shortTerm.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "shortTerm.js",
      "sourceFileName": "shortTerm.js",
      "sourceRoot": "/app/bot/memory",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/memory",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "shortTerm"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopic = exports.addTopic = undefined;\n\nvar _nodeCache = require('node-cache');\n\nvar _nodeCache2 = _interopRequireDefault(_nodeCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// this will be mutated\nconst topics = {};\n\nconst getAllTopics = () => topics;\n\nconst addTopic = exports.addTopic = (topicId, options = {}) => getTopic(topicId) || Object.assign(topics, { [topicId]: new _nodeCache2.default(options) })[topicId];\n\nconst getTopic = exports.getTopic = topicId => topics.hasOwnProperty(topicId) && topics[topicId];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3J0VGVybS5qcyJdLCJuYW1lcyI6WyJ0b3BpY3MiLCJnZXRBbGxUb3BpY3MiLCJhZGRUb3BpYyIsInRvcGljSWQiLCJvcHRpb25zIiwiZ2V0VG9waWMiLCJPYmplY3QiLCJhc3NpZ24iLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBLE1BQU1BLFNBQVMsRUFBZjs7QUFFQSxNQUFNQyxlQUFlLE1BQU1ELE1BQTNCOztBQUVPLE1BQU1FLDhCQUFXLENBQUNDLE9BQUQsRUFBVUMsVUFBVSxFQUFwQixLQUN0QkMsU0FBU0YsT0FBVCxLQUNBRyxPQUFPQyxNQUFQLENBQWNQLE1BQWQsRUFBc0IsRUFBRSxDQUFDRyxPQUFELEdBQVcsd0JBQWNDLE9BQWQsQ0FBYixFQUF0QixFQUE2REQsT0FBN0QsQ0FGSzs7QUFJQSxNQUFNRSw4QkFBV0YsV0FDdEJILE9BQU9RLGNBQVAsQ0FBc0JMLE9BQXRCLEtBQWtDSCxPQUFPRyxPQUFQLENBRDdCIiwiZmlsZSI6InNob3J0VGVybS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9tZW1vcnkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTm9kZUNhY2hlIGZyb20gJ25vZGUtY2FjaGUnO1xuXG4vLyB0aGlzIHdpbGwgYmUgbXV0YXRlZFxuY29uc3QgdG9waWNzID0ge307XG5cbmNvbnN0IGdldEFsbFRvcGljcyA9ICgpID0+IHRvcGljcztcblxuZXhwb3J0IGNvbnN0IGFkZFRvcGljID0gKHRvcGljSWQsIG9wdGlvbnMgPSB7fSkgPT5cbiAgZ2V0VG9waWModG9waWNJZCkgfHxcbiAgT2JqZWN0LmFzc2lnbih0b3BpY3MsIHsgW3RvcGljSWRdOiBuZXcgTm9kZUNhY2hlKG9wdGlvbnMpIH0pW3RvcGljSWRdO1xuXG5leHBvcnQgY29uc3QgZ2V0VG9waWMgPSB0b3BpY0lkID0+XG4gIHRvcGljcy5oYXNPd25Qcm9wZXJ0eSh0b3BpY0lkKSAmJiB0b3BpY3NbdG9waWNJZF07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "shortTerm.js"
      ],
      "names": [
        "topics",
        "getAllTopics",
        "addTopic",
        "topicId",
        "options",
        "getTopic",
        "Object",
        "assign",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACA,MAAMA,SAAS,EAAf;;AAEA,MAAMC,eAAe,MAAMD,MAA3B;;AAEO,MAAME,8BAAW,CAACC,OAAD,EAAUC,UAAU,EAApB,KACtBC,SAASF,OAAT,KACAG,OAAOC,MAAP,CAAcP,MAAd,EAAsB,EAAE,CAACG,OAAD,GAAW,wBAAcC,OAAd,CAAb,EAAtB,EAA6DD,OAA7D,CAFK;;AAIA,MAAME,8BAAWF,WACtBH,OAAOQ,cAAP,CAAsBL,OAAtB,KAAkCH,OAAOG,OAAP,CAD7B",
      "file": "shortTerm.js",
      "sourceRoot": "/app/bot/memory",
      "sourcesContent": [
        "import NodeCache from 'node-cache';\n\n// this will be mutated\nconst topics = {};\n\nconst getAllTopics = () => topics;\n\nexport const addTopic = (topicId, options = {}) =>\n  getTopic(topicId) ||\n  Object.assign(topics, { [topicId]: new NodeCache(options) })[topicId];\n\nexport const getTopic = topicId =>\n  topics.hasOwnProperty(topicId) && topics[topicId];\n"
      ]
    },
    "mtime": 1523080925630
  },
  "{\"filename\":\"/app/bot/nlp/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/nlp\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dialogflow",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "askDf"
              }
            ]
          },
          {
            "source": "../actions",
            "imported": [
              "basicTextReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/nlp/index.js",
      "filenameRelative": "/app/bot/nlp/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/nlp",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/nlp",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _dialogflow = require('./dialogflow');\n\nvar _dialogflow2 = _interopRequireDefault(_dialogflow);\n\nvar _actions = require('../actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async function (ctx) {\n  if (ctx.resolved()) return ctx;\n  const nlp = await (0, _dialogflow2.default)(ctx.getMessageContent(), {\n    sessionId: ctx.getAuthorId()\n  });\n\n  ctx.set('nlp', nlp);\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsInJlc29sdmVkIiwibmxwIiwiZ2V0TWVzc2FnZUNvbnRlbnQiLCJzZXNzaW9uSWQiLCJnZXRBdXRob3JJZCIsInNldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztrQkFFZSxnQkFBZUEsR0FBZixFQUFvQjtBQUNqQyxNQUFJQSxJQUFJQyxRQUFKLEVBQUosRUFBb0IsT0FBT0QsR0FBUDtBQUNwQixRQUFNRSxNQUFNLE1BQU0sMEJBQU1GLElBQUlHLGlCQUFKLEVBQU4sRUFBK0I7QUFDL0NDLGVBQVdKLElBQUlLLFdBQUo7QUFEb0MsR0FBL0IsQ0FBbEI7O0FBSUFMLE1BQUlNLEdBQUosQ0FBUSxLQUFSLEVBQWVKLEdBQWY7QUFDQSxTQUFPRixHQUFQO0FBQ0QsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9ubHAiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNrRGYgZnJvbSAnLi9kaWFsb2dmbG93JztcbmltcG9ydCB7IGJhc2ljVGV4dFJlcGx5IH0gZnJvbSAnLi4vYWN0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uKGN0eCkge1xuICBpZiAoY3R4LnJlc29sdmVkKCkpIHJldHVybiBjdHg7XG4gIGNvbnN0IG5scCA9IGF3YWl0IGFza0RmKGN0eC5nZXRNZXNzYWdlQ29udGVudCgpLCB7XG4gICAgc2Vzc2lvbklkOiBjdHguZ2V0QXV0aG9ySWQoKSxcbiAgfSk7XG5cbiAgY3R4LnNldCgnbmxwJywgbmxwKTtcbiAgcmV0dXJuIGN0eDtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "resolved",
        "nlp",
        "getMessageContent",
        "sessionId",
        "getAuthorId",
        "set"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;kBAEe,gBAAeA,GAAf,EAAoB;AACjC,MAAIA,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,GAAP;AACpB,QAAME,MAAM,MAAM,0BAAMF,IAAIG,iBAAJ,EAAN,EAA+B;AAC/CC,eAAWJ,IAAIK,WAAJ;AADoC,GAA/B,CAAlB;;AAIAL,MAAIM,GAAJ,CAAQ,KAAR,EAAeJ,GAAf;AACA,SAAOF,GAAP;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/nlp",
      "sourcesContent": [
        "import askDf from './dialogflow';\nimport { basicTextReply } from '../actions';\n\nexport default async function(ctx) {\n  if (ctx.resolved()) return ctx;\n  const nlp = await askDf(ctx.getMessageContent(), {\n    sessionId: ctx.getAuthorId(),\n  });\n\n  ctx.set('nlp', nlp);\n  return ctx;\n}\n"
      ]
    },
    "mtime": 1524098507840
  },
  "{\"filename\":\"/app/bot/nlp/dialogflow.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/nlp\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "apiai",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiai"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/nlp/dialogflow.js",
      "filenameRelative": "/app/bot/nlp/dialogflow.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dialogflow.js",
      "sourceFileName": "dialogflow.js",
      "sourceRoot": "/app/bot/nlp",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/nlp",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dialogflow"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apiai = require('apiai');\n\nvar _apiai2 = _interopRequireDefault(_apiai);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { DF_CLIENT_ACCESS_TOKEN } = process.env;\nconst agent = (0, _apiai2.default)(DF_CLIENT_ACCESS_TOKEN);\n\nconst checkFulfilled = fulfillment => Boolean(fulfillment.messages) && Array.isArray(fulfillment.messages) && Boolean(fulfillment.messages.length > 0) && Boolean(fulfillment.speech && fulfillment.speech !== '');\nconst getFulfillment = fl => fl.messages[0].speech;\n\nconst marshallResponse = response => {\n  const { result, lang, status } = response;\n  const { action, parameters, fulfillment } = result || {};\n  const reaction = {\n    type: 'nlp-response',\n    lang,\n    action,\n    parameters,\n    nlpFulfilled: checkFulfilled(fulfillment),\n    query: result.resolvedQuery\n  };\n  if (action && action !== '' && reaction.nlpFulfilled) reaction.fulfillment = getFulfillment(fulfillment);\n  return reaction;\n};\n\nexports.default = (content, options = {}) => new Promise((resolve, reject) => {\n  const request = agent.textRequest(content, options);\n  request.on('response', resolve);\n  request.on('error', reject);\n  request.end();\n}).then(marshallResponse);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiREZfQ0xJRU5UX0FDQ0VTU19UT0tFTiIsInByb2Nlc3MiLCJlbnYiLCJhZ2VudCIsImNoZWNrRnVsZmlsbGVkIiwiZnVsZmlsbG1lbnQiLCJCb29sZWFuIiwibWVzc2FnZXMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJzcGVlY2giLCJnZXRGdWxmaWxsbWVudCIsImZsIiwibWFyc2hhbGxSZXNwb25zZSIsInJlc3BvbnNlIiwicmVzdWx0IiwibGFuZyIsInN0YXR1cyIsImFjdGlvbiIsInBhcmFtZXRlcnMiLCJyZWFjdGlvbiIsInR5cGUiLCJubHBGdWxmaWxsZWQiLCJxdWVyeSIsInJlc29sdmVkUXVlcnkiLCJjb250ZW50Iiwib3B0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVxdWVzdCIsInRleHRSZXF1ZXN0Iiwib24iLCJlbmQiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUEsTUFBTSxFQUFFQSxzQkFBRixLQUE2QkMsUUFBUUMsR0FBM0M7QUFDQSxNQUFNQyxRQUFRLHFCQUFNSCxzQkFBTixDQUFkOztBQUVBLE1BQU1JLGlCQUFpQkMsZUFDckJDLFFBQVFELFlBQVlFLFFBQXBCLEtBQ0FDLE1BQU1DLE9BQU4sQ0FBY0osWUFBWUUsUUFBMUIsQ0FEQSxJQUVBRCxRQUFRRCxZQUFZRSxRQUFaLENBQXFCRyxNQUFyQixHQUE4QixDQUF0QyxDQUZBLElBR0FKLFFBQVFELFlBQVlNLE1BQVosSUFBc0JOLFlBQVlNLE1BQVosS0FBdUIsRUFBckQsQ0FKRjtBQUtBLE1BQU1DLGlCQUFpQkMsTUFBTUEsR0FBR04sUUFBSCxDQUFZLENBQVosRUFBZUksTUFBNUM7O0FBRUEsTUFBTUcsbUJBQW1CQyxZQUFZO0FBQ25DLFFBQU0sRUFBRUMsTUFBRixFQUFVQyxJQUFWLEVBQWdCQyxNQUFoQixLQUEyQkgsUUFBakM7QUFDQSxRQUFNLEVBQUVJLE1BQUYsRUFBVUMsVUFBVixFQUFzQmYsV0FBdEIsS0FBc0NXLFVBQVUsRUFBdEQ7QUFDQSxRQUFNSyxXQUFXO0FBQ2ZDLFVBQU0sY0FEUztBQUVmTCxRQUZlO0FBR2ZFLFVBSGU7QUFJZkMsY0FKZTtBQUtmRyxrQkFBY25CLGVBQWVDLFdBQWYsQ0FMQztBQU1mbUIsV0FBT1IsT0FBT1M7QUFOQyxHQUFqQjtBQVFBLE1BQUlOLFVBQVVBLFdBQVcsRUFBckIsSUFBMkJFLFNBQVNFLFlBQXhDLEVBQ0VGLFNBQVNoQixXQUFULEdBQXVCTyxlQUFlUCxXQUFmLENBQXZCO0FBQ0YsU0FBT2dCLFFBQVA7QUFDRCxDQWREOztrQkFnQmUsQ0FBQ0ssT0FBRCxFQUFVQyxVQUFVLEVBQXBCLEtBQ2IsSUFBSUMsT0FBSixDQUFZLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtBQUMvQixRQUFNQyxVQUFVNUIsTUFBTTZCLFdBQU4sQ0FBa0JOLE9BQWxCLEVBQTJCQyxPQUEzQixDQUFoQjtBQUNBSSxVQUFRRSxFQUFSLENBQVcsVUFBWCxFQUF1QkosT0FBdkI7QUFDQUUsVUFBUUUsRUFBUixDQUFXLE9BQVgsRUFBb0JILE1BQXBCO0FBQ0FDLFVBQVFHLEdBQVI7QUFDRCxDQUxELEVBS0dDLElBTEgsQ0FLUXJCLGdCQUxSLEMiLCJmaWxlIjoiZGlhbG9nZmxvdy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9ubHAiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBpYWkgZnJvbSAnYXBpYWknO1xuXG5jb25zdCB7IERGX0NMSUVOVF9BQ0NFU1NfVE9LRU4gfSA9IHByb2Nlc3MuZW52O1xuY29uc3QgYWdlbnQgPSBhcGlhaShERl9DTElFTlRfQUNDRVNTX1RPS0VOKTtcblxuY29uc3QgY2hlY2tGdWxmaWxsZWQgPSBmdWxmaWxsbWVudCA9PlxuICBCb29sZWFuKGZ1bGZpbGxtZW50Lm1lc3NhZ2VzKSAmJlxuICBBcnJheS5pc0FycmF5KGZ1bGZpbGxtZW50Lm1lc3NhZ2VzKSAmJlxuICBCb29sZWFuKGZ1bGZpbGxtZW50Lm1lc3NhZ2VzLmxlbmd0aCA+IDApICYmXG4gIEJvb2xlYW4oZnVsZmlsbG1lbnQuc3BlZWNoICYmIGZ1bGZpbGxtZW50LnNwZWVjaCAhPT0gJycpO1xuY29uc3QgZ2V0RnVsZmlsbG1lbnQgPSBmbCA9PiBmbC5tZXNzYWdlc1swXS5zcGVlY2g7XG5cbmNvbnN0IG1hcnNoYWxsUmVzcG9uc2UgPSByZXNwb25zZSA9PiB7XG4gIGNvbnN0IHsgcmVzdWx0LCBsYW5nLCBzdGF0dXMgfSA9IHJlc3BvbnNlO1xuICBjb25zdCB7IGFjdGlvbiwgcGFyYW1ldGVycywgZnVsZmlsbG1lbnQgfSA9IHJlc3VsdCB8fCB7fTtcbiAgY29uc3QgcmVhY3Rpb24gPSB7XG4gICAgdHlwZTogJ25scC1yZXNwb25zZScsXG4gICAgbGFuZyxcbiAgICBhY3Rpb24sXG4gICAgcGFyYW1ldGVycyxcbiAgICBubHBGdWxmaWxsZWQ6IGNoZWNrRnVsZmlsbGVkKGZ1bGZpbGxtZW50KSxcbiAgICBxdWVyeTogcmVzdWx0LnJlc29sdmVkUXVlcnksXG4gIH07XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uICE9PSAnJyAmJiByZWFjdGlvbi5ubHBGdWxmaWxsZWQpXG4gICAgcmVhY3Rpb24uZnVsZmlsbG1lbnQgPSBnZXRGdWxmaWxsbWVudChmdWxmaWxsbWVudCk7XG4gIHJldHVybiByZWFjdGlvbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IChjb250ZW50LCBvcHRpb25zID0ge30pID0+XG4gIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCByZXF1ZXN0ID0gYWdlbnQudGV4dFJlcXVlc3QoY29udGVudCwgb3B0aW9ucyk7XG4gICAgcmVxdWVzdC5vbigncmVzcG9uc2UnLCByZXNvbHZlKTtcbiAgICByZXF1ZXN0Lm9uKCdlcnJvcicsIHJlamVjdCk7XG4gICAgcmVxdWVzdC5lbmQoKTtcbiAgfSkudGhlbihtYXJzaGFsbFJlc3BvbnNlKTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "DF_CLIENT_ACCESS_TOKEN",
        "process",
        "env",
        "agent",
        "checkFulfilled",
        "fulfillment",
        "Boolean",
        "messages",
        "Array",
        "isArray",
        "length",
        "speech",
        "getFulfillment",
        "fl",
        "marshallResponse",
        "response",
        "result",
        "lang",
        "status",
        "action",
        "parameters",
        "reaction",
        "type",
        "nlpFulfilled",
        "query",
        "resolvedQuery",
        "content",
        "options",
        "Promise",
        "resolve",
        "reject",
        "request",
        "textRequest",
        "on",
        "end",
        "then"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAM,EAAEA,sBAAF,KAA6BC,QAAQC,GAA3C;AACA,MAAMC,QAAQ,qBAAMH,sBAAN,CAAd;;AAEA,MAAMI,iBAAiBC,eACrBC,QAAQD,YAAYE,QAApB,KACAC,MAAMC,OAAN,CAAcJ,YAAYE,QAA1B,CADA,IAEAD,QAAQD,YAAYE,QAAZ,CAAqBG,MAArB,GAA8B,CAAtC,CAFA,IAGAJ,QAAQD,YAAYM,MAAZ,IAAsBN,YAAYM,MAAZ,KAAuB,EAArD,CAJF;AAKA,MAAMC,iBAAiBC,MAAMA,GAAGN,QAAH,CAAY,CAAZ,EAAeI,MAA5C;;AAEA,MAAMG,mBAAmBC,YAAY;AACnC,QAAM,EAAEC,MAAF,EAAUC,IAAV,EAAgBC,MAAhB,KAA2BH,QAAjC;AACA,QAAM,EAAEI,MAAF,EAAUC,UAAV,EAAsBf,WAAtB,KAAsCW,UAAU,EAAtD;AACA,QAAMK,WAAW;AACfC,UAAM,cADS;AAEfL,QAFe;AAGfE,UAHe;AAIfC,cAJe;AAKfG,kBAAcnB,eAAeC,WAAf,CALC;AAMfmB,WAAOR,OAAOS;AANC,GAAjB;AAQA,MAAIN,UAAUA,WAAW,EAArB,IAA2BE,SAASE,YAAxC,EACEF,SAAShB,WAAT,GAAuBO,eAAeP,WAAf,CAAvB;AACF,SAAOgB,QAAP;AACD,CAdD;;kBAgBe,CAACK,OAAD,EAAUC,UAAU,EAApB,KACb,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,UAAU5B,MAAM6B,WAAN,CAAkBN,OAAlB,EAA2BC,OAA3B,CAAhB;AACAI,UAAQE,EAAR,CAAW,UAAX,EAAuBJ,OAAvB;AACAE,UAAQE,EAAR,CAAW,OAAX,EAAoBH,MAApB;AACAC,UAAQG,GAAR;AACD,CALD,EAKGC,IALH,CAKQrB,gBALR,C",
      "file": "dialogflow.js",
      "sourceRoot": "/app/bot/nlp",
      "sourcesContent": [
        "import apiai from 'apiai';\n\nconst { DF_CLIENT_ACCESS_TOKEN } = process.env;\nconst agent = apiai(DF_CLIENT_ACCESS_TOKEN);\n\nconst checkFulfilled = fulfillment =>\n  Boolean(fulfillment.messages) &&\n  Array.isArray(fulfillment.messages) &&\n  Boolean(fulfillment.messages.length > 0) &&\n  Boolean(fulfillment.speech && fulfillment.speech !== '');\nconst getFulfillment = fl => fl.messages[0].speech;\n\nconst marshallResponse = response => {\n  const { result, lang, status } = response;\n  const { action, parameters, fulfillment } = result || {};\n  const reaction = {\n    type: 'nlp-response',\n    lang,\n    action,\n    parameters,\n    nlpFulfilled: checkFulfilled(fulfillment),\n    query: result.resolvedQuery,\n  };\n  if (action && action !== '' && reaction.nlpFulfilled)\n    reaction.fulfillment = getFulfillment(fulfillment);\n  return reaction;\n};\n\nexport default (content, options = {}) =>\n  new Promise((resolve, reject) => {\n    const request = agent.textRequest(content, options);\n    request.on('response', resolve);\n    request.on('error', reject);\n    request.end();\n  }).then(marshallResponse);\n"
      ]
    },
    "mtime": 1525123985119
  },
  "{\"filename\":\"/app/bot/skills/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./useNlpResponse",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "useNlpResponse"
              }
            ]
          },
          {
            "source": "./lolstats",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "lolstats"
              }
            ]
          },
          {
            "source": "./global",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "global"
              }
            ]
          },
          {
            "source": "./vision",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "vision"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/index.js",
      "filenameRelative": "/app/bot/skills/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _useNlpResponse = require('./useNlpResponse');\n\nvar _useNlpResponse2 = _interopRequireDefault(_useNlpResponse);\n\nvar _lolstats = require('./lolstats');\n\nvar _lolstats2 = _interopRequireDefault(_lolstats);\n\nvar _global = require('./global');\n\nvar _global2 = _interopRequireDefault(_global);\n\nvar _vision = require('./vision');\n\nvar _vision2 = _interopRequireDefault(_vision);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst skillset = {\n  global: _global2.default,\n  lolstats: _lolstats2.default,\n  vision: _vision2.default\n};\n\nconst skillFinder = intent => {\n  const [namespace, skill] = intent.split('.');\n  const domain = skillset[namespace];\n  return typeof domain === 'object' ? domain[skill] : void 0;\n};\n\nexports.default = async function (_ctx) {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx;\n\n  const nlp = ctx.get('nlp');\n  if (typeof nlp !== 'object') throw new Error('No NLP response was provided');\n\n  const { action } = nlp;\n  const skill = action && action !== '' && skillFinder(action);\n\n  if (skill) ctx.resolve((await skill(ctx)));\n\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNraWxsc2V0IiwiZ2xvYmFsIiwibG9sc3RhdHMiLCJ2aXNpb24iLCJza2lsbEZpbmRlciIsImludGVudCIsIm5hbWVzcGFjZSIsInNraWxsIiwic3BsaXQiLCJkb21haW4iLCJfY3R4IiwiY3R4IiwicmVzb2x2ZWQiLCJubHAiLCJnZXQiLCJFcnJvciIsImFjdGlvbiIsInJlc29sdmUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxXQUFXO0FBQ2ZDLDBCQURlO0FBRWZDLDhCQUZlO0FBR2ZDO0FBSGUsQ0FBakI7O0FBTUEsTUFBTUMsY0FBY0MsVUFBVTtBQUM1QixRQUFNLENBQUNDLFNBQUQsRUFBWUMsS0FBWixJQUFxQkYsT0FBT0csS0FBUCxDQUFhLEdBQWIsQ0FBM0I7QUFDQSxRQUFNQyxTQUFTVCxTQUFTTSxTQUFULENBQWY7QUFDQSxTQUFPLE9BQU9HLE1BQVAsS0FBa0IsUUFBbEIsR0FBNkJBLE9BQU9GLEtBQVAsQ0FBN0IsR0FBNkMsS0FBSyxDQUF6RDtBQUNELENBSkQ7O2tCQU1lLGdCQUFlRyxJQUFmLEVBQXFCO0FBQ2xDLFFBQU1DLE1BQU0sTUFBTUQsSUFBbEI7QUFDQSxNQUFJQyxJQUFJQyxRQUFKLEVBQUosRUFBb0IsT0FBT0QsR0FBUDs7QUFFcEIsUUFBTUUsTUFBTUYsSUFBSUcsR0FBSixDQUFRLEtBQVIsQ0FBWjtBQUNBLE1BQUksT0FBT0QsR0FBUCxLQUFlLFFBQW5CLEVBQTZCLE1BQU0sSUFBSUUsS0FBSixDQUFVLDhCQUFWLENBQU47O0FBRTdCLFFBQU0sRUFBRUMsTUFBRixLQUFhSCxHQUFuQjtBQUNBLFFBQU1OLFFBQVFTLFVBQVVBLFdBQVcsRUFBckIsSUFBMkJaLFlBQVlZLE1BQVosQ0FBekM7O0FBRUEsTUFBSVQsS0FBSixFQUFXSSxJQUFJTSxPQUFKLEVBQVksTUFBTVYsTUFBTUksR0FBTixDQUFsQjs7QUFFWCxTQUFPQSxHQUFQO0FBQ0QsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9za2lsbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlTmxwUmVzcG9uc2UgZnJvbSAnLi91c2VObHBSZXNwb25zZSc7XG5pbXBvcnQgbG9sc3RhdHMgZnJvbSAnLi9sb2xzdGF0cyc7XG5pbXBvcnQgZ2xvYmFsIGZyb20gJy4vZ2xvYmFsJztcbmltcG9ydCB2aXNpb24gZnJvbSAnLi92aXNpb24nO1xuXG5jb25zdCBza2lsbHNldCA9IHtcbiAgZ2xvYmFsLFxuICBsb2xzdGF0cyxcbiAgdmlzaW9uLFxufTtcblxuY29uc3Qgc2tpbGxGaW5kZXIgPSBpbnRlbnQgPT4ge1xuICBjb25zdCBbbmFtZXNwYWNlLCBza2lsbF0gPSBpbnRlbnQuc3BsaXQoJy4nKTtcbiAgY29uc3QgZG9tYWluID0gc2tpbGxzZXRbbmFtZXNwYWNlXTtcbiAgcmV0dXJuIHR5cGVvZiBkb21haW4gPT09ICdvYmplY3QnID8gZG9tYWluW3NraWxsXSA6IHZvaWQgMDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uKF9jdHgpIHtcbiAgY29uc3QgY3R4ID0gYXdhaXQgX2N0eDtcbiAgaWYgKGN0eC5yZXNvbHZlZCgpKSByZXR1cm4gY3R4O1xuICBcbiAgY29uc3QgbmxwID0gY3R4LmdldCgnbmxwJyk7XG4gIGlmICh0eXBlb2YgbmxwICE9PSAnb2JqZWN0JykgdGhyb3cgbmV3IEVycm9yKCdObyBOTFAgcmVzcG9uc2Ugd2FzIHByb3ZpZGVkJyk7XG4gIFxuICBjb25zdCB7IGFjdGlvbiB9ID0gbmxwO1xuICBjb25zdCBza2lsbCA9IGFjdGlvbiAmJiBhY3Rpb24gIT09ICcnICYmIHNraWxsRmluZGVyKGFjdGlvbik7XG4gIFxuICBpZiAoc2tpbGwpIGN0eC5yZXNvbHZlKGF3YWl0IHNraWxsKGN0eCkpO1xuICBcbiAgcmV0dXJuIGN0eDtcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "skillset",
        "global",
        "lolstats",
        "vision",
        "skillFinder",
        "intent",
        "namespace",
        "skill",
        "split",
        "domain",
        "_ctx",
        "ctx",
        "resolved",
        "nlp",
        "get",
        "Error",
        "action",
        "resolve"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,WAAW;AACfC,0BADe;AAEfC,8BAFe;AAGfC;AAHe,CAAjB;;AAMA,MAAMC,cAAcC,UAAU;AAC5B,QAAM,CAACC,SAAD,EAAYC,KAAZ,IAAqBF,OAAOG,KAAP,CAAa,GAAb,CAA3B;AACA,QAAMC,SAAST,SAASM,SAAT,CAAf;AACA,SAAO,OAAOG,MAAP,KAAkB,QAAlB,GAA6BA,OAAOF,KAAP,CAA7B,GAA6C,KAAK,CAAzD;AACD,CAJD;;kBAMe,gBAAeG,IAAf,EAAqB;AAClC,QAAMC,MAAM,MAAMD,IAAlB;AACA,MAAIC,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,GAAP;;AAEpB,QAAME,MAAMF,IAAIG,GAAJ,CAAQ,KAAR,CAAZ;AACA,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B,MAAM,IAAIE,KAAJ,CAAU,8BAAV,CAAN;;AAE7B,QAAM,EAAEC,MAAF,KAAaH,GAAnB;AACA,QAAMN,QAAQS,UAAUA,WAAW,EAArB,IAA2BZ,YAAYY,MAAZ,CAAzC;;AAEA,MAAIT,KAAJ,EAAWI,IAAIM,OAAJ,EAAY,MAAMV,MAAMI,GAAN,CAAlB;;AAEX,SAAOA,GAAP;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills",
      "sourcesContent": [
        "import useNlpResponse from './useNlpResponse';\nimport lolstats from './lolstats';\nimport global from './global';\nimport vision from './vision';\n\nconst skillset = {\n  global,\n  lolstats,\n  vision,\n};\n\nconst skillFinder = intent => {\n  const [namespace, skill] = intent.split('.');\n  const domain = skillset[namespace];\n  return typeof domain === 'object' ? domain[skill] : void 0;\n};\n\nexport default async function(_ctx) {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx;\n  \n  const nlp = ctx.get('nlp');\n  if (typeof nlp !== 'object') throw new Error('No NLP response was provided');\n  \n  const { action } = nlp;\n  const skill = action && action !== '' && skillFinder(action);\n  \n  if (skill) ctx.resolve(await skill(ctx));\n  \n  return ctx;\n}\n"
      ]
    },
    "mtime": 1524381745871
  },
  "{\"filename\":\"/app/bot/skills/useNlpResponse.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../actions",
            "imported": [
              "basicTextReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "replyWith"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/useNlpResponse.js",
      "filenameRelative": "/app/bot/skills/useNlpResponse.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "useNlpResponse.js",
      "sourceFileName": "useNlpResponse.js",
      "sourceRoot": "/app/bot/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "useNlpResponse"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _actions = require('../actions');\n\nexports.default = async _ctx => {\n  const ctx = await _ctx;\n  const nlp = ctx.get('nlp');\n\n  if (typeof nlp !== 'object') throw new Error('No NLP response recieved');\n  if (!nlp.nlpFulfilled) throw new Error('No fulfillment was provided by NLP');\n  return (0, _actions.basicTextReply)(nlp.fulfillment);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZU5scFJlc3BvbnNlLmpzIl0sIm5hbWVzIjpbIl9jdHgiLCJjdHgiLCJubHAiLCJnZXQiLCJFcnJvciIsIm5scEZ1bGZpbGxlZCIsImZ1bGZpbGxtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7a0JBRWUsTUFBT0EsSUFBUCxJQUFnQjtBQUM3QixRQUFNQyxNQUFNLE1BQU1ELElBQWxCO0FBQ0EsUUFBTUUsTUFBTUQsSUFBSUUsR0FBSixDQUFRLEtBQVIsQ0FBWjs7QUFFQSxNQUFJLE9BQU9ELEdBQVAsS0FBZSxRQUFuQixFQUE2QixNQUFNLElBQUlFLEtBQUosQ0FBVSwwQkFBVixDQUFOO0FBQzdCLE1BQUksQ0FBQ0YsSUFBSUcsWUFBVCxFQUF1QixNQUFNLElBQUlELEtBQUosQ0FBVSxvQ0FBVixDQUFOO0FBQ3ZCLFNBQU8sNkJBQVVGLElBQUlJLFdBQWQsQ0FBUDtBQUNELEMiLCJmaWxlIjoidXNlTmxwUmVzcG9uc2UuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzaWNUZXh0UmVwbHkgYXMgcmVwbHlXaXRoIH0gZnJvbSAnLi4vYWN0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChfY3R4KSA9PiB7XG4gIGNvbnN0IGN0eCA9IGF3YWl0IF9jdHg7XG4gIGNvbnN0IG5scCA9IGN0eC5nZXQoJ25scCcpO1xuICBcbiAgaWYgKHR5cGVvZiBubHAgIT09ICdvYmplY3QnKSB0aHJvdyBuZXcgRXJyb3IoJ05vIE5MUCByZXNwb25zZSByZWNpZXZlZCcpO1xuICBpZiAoIW5scC5ubHBGdWxmaWxsZWQpIHRocm93IG5ldyBFcnJvcignTm8gZnVsZmlsbG1lbnQgd2FzIHByb3ZpZGVkIGJ5IE5MUCcpO1xuICByZXR1cm4gcmVwbHlXaXRoKG5scC5mdWxmaWxsbWVudCk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "useNlpResponse.js"
      ],
      "names": [
        "_ctx",
        "ctx",
        "nlp",
        "get",
        "Error",
        "nlpFulfilled",
        "fulfillment"
      ],
      "mappings": ";;;;;;AAAA;;kBAEe,MAAOA,IAAP,IAAgB;AAC7B,QAAMC,MAAM,MAAMD,IAAlB;AACA,QAAME,MAAMD,IAAIE,GAAJ,CAAQ,KAAR,CAAZ;;AAEA,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AAC7B,MAAI,CAACF,IAAIG,YAAT,EAAuB,MAAM,IAAID,KAAJ,CAAU,oCAAV,CAAN;AACvB,SAAO,6BAAUF,IAAII,WAAd,CAAP;AACD,C",
      "file": "useNlpResponse.js",
      "sourceRoot": "/app/bot/skills",
      "sourcesContent": [
        "import { basicTextReply as replyWith } from '../actions';\n\nexport default async (_ctx) => {\n  const ctx = await _ctx;\n  const nlp = ctx.get('nlp');\n  \n  if (typeof nlp !== 'object') throw new Error('No NLP response recieved');\n  if (!nlp.nlpFulfilled) throw new Error('No fulfillment was provided by NLP');\n  return replyWith(nlp.fulfillment);\n};\n"
      ]
    },
    "mtime": 1524100529871
  },
  "{\"filename\":\"/app/bot/skills/lolstats/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./buildHelp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "buildHelp"
              }
            ]
          },
          {
            "source": "./rememberMySummoner",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rememberMySummoner"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/index.js",
      "filenameRelative": "/app/bot/skills/lolstats/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _buildHelp = require('./buildHelp');\n\nvar _buildHelp2 = _interopRequireDefault(_buildHelp);\n\nvar _rememberMySummoner = require('./rememberMySummoner');\n\nvar _rememberMySummoner2 = _interopRequireDefault(_rememberMySummoner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  buildHelp: _buildHelp2.default,\n  rememberMySummoner: _rememberMySummoner2.default\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJ1aWxkSGVscCIsInJlbWVtYmVyTXlTdW1tb25lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlO0FBQ2JBLGdDQURhO0FBRWJDO0FBRmEsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9za2lsbHMvbG9sc3RhdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnVpbGRIZWxwIGZyb20gJy4vYnVpbGRIZWxwJztcbmltcG9ydCByZW1lbWJlck15U3VtbW9uZXIgZnJvbSAnLi9yZW1lbWJlck15U3VtbW9uZXInO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGJ1aWxkSGVscCxcbiAgcmVtZW1iZXJNeVN1bW1vbmVyLFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "buildHelp",
        "rememberMySummoner"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACbA,gCADa;AAEbC;AAFa,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "import buildHelp from './buildHelp';\nimport rememberMySummoner from './rememberMySummoner';\n\nexport default {\n  buildHelp,\n  rememberMySummoner,\n};\n"
      ]
    },
    "mtime": 1525124470021
  },
  "{\"filename\":\"/app/bot/skills/lolstats/buildHelp.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/buildHelp.js",
      "filenameRelative": "/app/bot/skills/lolstats/buildHelp.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "buildHelp.js",
      "sourceFileName": "buildHelp.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "buildHelp"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = async () => ({\n  type: 'response',\n  contentType: 'text',\n  content: 'Te hare ganar algo de manos en LoL'\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkSGVscC5qcyJdLCJuYW1lcyI6WyJ0eXBlIiwiY29udGVudFR5cGUiLCJjb250ZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWUsYUFBYTtBQUMxQkEsUUFBTSxVQURvQjtBQUUxQkMsZUFBYSxNQUZhO0FBRzFCQyxXQUFTO0FBSGlCLENBQWIsQyIsImZpbGUiOiJidWlsZEhlbHAuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzL2xvbHN0YXRzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCkgPT4gKHtcbiAgdHlwZTogJ3Jlc3BvbnNlJyxcbiAgY29udGVudFR5cGU6ICd0ZXh0JyxcbiAgY29udGVudDogJ1RlIGhhcmUgZ2FuYXIgYWxnbyBkZSBtYW5vcyBlbiBMb0wnLFxufSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "buildHelp.js"
      ],
      "names": [
        "type",
        "contentType",
        "content"
      ],
      "mappings": ";;;;;;kBAAe,aAAa;AAC1BA,QAAM,UADoB;AAE1BC,eAAa,MAFa;AAG1BC,WAAS;AAHiB,CAAb,C",
      "file": "buildHelp.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "export default async () => ({\n  type: 'response',\n  contentType: 'text',\n  content: 'Te hare ganar algo de manos en LoL',\n});\n"
      ]
    },
    "mtime": 1523080865837
  },
  "{\"filename\":\"/app/bot/skills/lolstats/rememberMySummoner.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "Schema"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Schema",
                "local": "Schema"
              }
            ]
          },
          {
            "source": "../../../lol-api/summoner",
            "imported": [
              "getSummonerByName"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "getSummonerByName",
                "local": "getSummonerByName"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/rememberMySummoner.js",
      "filenameRelative": "/app/bot/skills/lolstats/rememberMySummoner.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "rememberMySummoner.js",
      "sourceFileName": "rememberMySummoner.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "rememberMySummoner"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _summoner = require('../../../lol-api/summoner');\n\nconst summoner = new _mongoose.Schema({\n  platformIds: [String],\n  id: Number,\n  accountId: Number,\n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number\n});\n\nexports.default = async ctx => {\n  const nlp = ctx.get('nlp');\n  const { summonerName, region } = nlp.parameters;\n  const db = ctx.get('db');\n  const Summoner = db.model('summoner', summoner);\n\n  const summonerData = await (0, _summoner.getSummonerByName)(summonerName, region);\n  console.log('yolotzin', summonerData);\n  return { type: 'ignore' };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbWVtYmVyTXlTdW1tb25lci5qcyJdLCJuYW1lcyI6WyJzdW1tb25lciIsInBsYXRmb3JtSWRzIiwiU3RyaW5nIiwiaWQiLCJOdW1iZXIiLCJhY2NvdW50SWQiLCJuYW1lIiwicHJvZmlsZUljb25JZCIsInJldmlzaW9uRGF0ZSIsInN1bW1vbmVyTGV2ZWwiLCJjdHgiLCJubHAiLCJnZXQiLCJzdW1tb25lck5hbWUiLCJyZWdpb24iLCJwYXJhbWV0ZXJzIiwiZGIiLCJTdW1tb25lciIsIm1vZGVsIiwic3VtbW9uZXJEYXRhIiwiY29uc29sZSIsImxvZyIsInR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUVBLE1BQU1BLFdBQVcscUJBQVc7QUFDMUJDLGVBQWEsQ0FBQ0MsTUFBRCxDQURhO0FBRTFCQyxNQUFJQyxNQUZzQjtBQUcxQkMsYUFBV0QsTUFIZTtBQUkxQkUsUUFBTUosTUFKb0I7QUFLMUJLLGlCQUFlSCxNQUxXO0FBTTFCSSxnQkFBY0osTUFOWTtBQU8xQkssaUJBQWVMO0FBUFcsQ0FBWCxDQUFqQjs7a0JBVWUsTUFBTU0sR0FBTixJQUFhO0FBQzFCLFFBQU1DLE1BQU1ELElBQUlFLEdBQUosQ0FBUSxLQUFSLENBQVo7QUFDQSxRQUFNLEVBQUVDLFlBQUYsRUFBZ0JDLE1BQWhCLEtBQTJCSCxJQUFJSSxVQUFyQztBQUNBLFFBQU1DLEtBQUtOLElBQUlFLEdBQUosQ0FBUSxJQUFSLENBQVg7QUFDQSxRQUFNSyxXQUFXRCxHQUFHRSxLQUFILENBQVMsVUFBVCxFQUFxQmxCLFFBQXJCLENBQWpCOztBQUVBLFFBQU1tQixlQUFlLE1BQU0saUNBQWtCTixZQUFsQixFQUFnQ0MsTUFBaEMsQ0FBM0I7QUFDQU0sVUFBUUMsR0FBUixDQUFZLFVBQVosRUFBd0JGLFlBQXhCO0FBQ0EsU0FBTyxFQUFFRyxNQUFNLFFBQVIsRUFBUDtBQUNELEMiLCJmaWxlIjoicmVtZW1iZXJNeVN1bW1vbmVyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L3NraWxscy9sb2xzdGF0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSB9IGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7IGdldFN1bW1vbmVyQnlOYW1lIH0gZnJvbSAnLi4vLi4vLi4vbG9sLWFwaS9zdW1tb25lcic7XG5cbmNvbnN0IHN1bW1vbmVyID0gbmV3IFNjaGVtYSh7XG4gIHBsYXRmb3JtSWRzOiBbU3RyaW5nXSxcbiAgaWQ6IE51bWJlcixcbiAgYWNjb3VudElkOiBOdW1iZXIsIFxuICBuYW1lOiBTdHJpbmcsXG4gIHByb2ZpbGVJY29uSWQ6IE51bWJlcixcbiAgcmV2aXNpb25EYXRlOiBOdW1iZXIsXG4gIHN1bW1vbmVyTGV2ZWw6IE51bWJlcixcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBjdHggPT4ge1xuICBjb25zdCBubHAgPSBjdHguZ2V0KCdubHAnKTtcbiAgY29uc3QgeyBzdW1tb25lck5hbWUsIHJlZ2lvbiB9ID0gbmxwLnBhcmFtZXRlcnM7XG4gIGNvbnN0IGRiID0gY3R4LmdldCgnZGInKTtcbiAgY29uc3QgU3VtbW9uZXIgPSBkYi5tb2RlbCgnc3VtbW9uZXInLCBzdW1tb25lcik7XG4gIFxuICBjb25zdCBzdW1tb25lckRhdGEgPSBhd2FpdCBnZXRTdW1tb25lckJ5TmFtZShzdW1tb25lck5hbWUsIHJlZ2lvbik7XG4gIGNvbnNvbGUubG9nKCd5b2xvdHppbicsIHN1bW1vbmVyRGF0YSk7XG4gIHJldHVybiB7IHR5cGU6ICdpZ25vcmUnIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "rememberMySummoner.js"
      ],
      "names": [
        "summoner",
        "platformIds",
        "String",
        "id",
        "Number",
        "accountId",
        "name",
        "profileIconId",
        "revisionDate",
        "summonerLevel",
        "ctx",
        "nlp",
        "get",
        "summonerName",
        "region",
        "parameters",
        "db",
        "Summoner",
        "model",
        "summonerData",
        "console",
        "log",
        "type"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AAEA,MAAMA,WAAW,qBAAW;AAC1BC,eAAa,CAACC,MAAD,CADa;AAE1BC,MAAIC,MAFsB;AAG1BC,aAAWD,MAHe;AAI1BE,QAAMJ,MAJoB;AAK1BK,iBAAeH,MALW;AAM1BI,gBAAcJ,MANY;AAO1BK,iBAAeL;AAPW,CAAX,CAAjB;;kBAUe,MAAMM,GAAN,IAAa;AAC1B,QAAMC,MAAMD,IAAIE,GAAJ,CAAQ,KAAR,CAAZ;AACA,QAAM,EAAEC,YAAF,EAAgBC,MAAhB,KAA2BH,IAAII,UAArC;AACA,QAAMC,KAAKN,IAAIE,GAAJ,CAAQ,IAAR,CAAX;AACA,QAAMK,WAAWD,GAAGE,KAAH,CAAS,UAAT,EAAqBlB,QAArB,CAAjB;;AAEA,QAAMmB,eAAe,MAAM,iCAAkBN,YAAlB,EAAgCC,MAAhC,CAA3B;AACAM,UAAQC,GAAR,CAAY,UAAZ,EAAwBF,YAAxB;AACA,SAAO,EAAEG,MAAM,QAAR,EAAP;AACD,C",
      "file": "rememberMySummoner.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "import { Schema } from 'mongoose';\nimport { getSummonerByName } from '../../../lol-api/summoner';\n\nconst summoner = new Schema({\n  platformIds: [String],\n  id: Number,\n  accountId: Number, \n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number,\n});\n\nexport default async ctx => {\n  const nlp = ctx.get('nlp');\n  const { summonerName, region } = nlp.parameters;\n  const db = ctx.get('db');\n  const Summoner = db.model('summoner', summoner);\n  \n  const summonerData = await getSummonerByName(summonerName, region);\n  console.log('yolotzin', summonerData);\n  return { type: 'ignore' };\n};\n"
      ]
    },
    "mtime": 1525135022876
  },
  "{\"filename\":\"/app/lol-api/summoner.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/lol-api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./helpers",
            "imported": [
              "endpointBuilder",
              "buildRequest"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "endpointBuilder",
                "local": "endpointBuilder"
              },
              {
                "kind": "named",
                "imported": "buildRequest",
                "local": "buildRequest"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getSummonerById",
            "getSummonerByName",
            "getSummonerByAccount"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getSummonerById",
              "exported": "getSummonerById"
            },
            {
              "kind": "local",
              "local": "getSummonerByName",
              "exported": "getSummonerByName"
            },
            {
              "kind": "local",
              "local": "getSummonerByAccount",
              "exported": "getSummonerByAccount"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/lol-api/summoner.js",
      "filenameRelative": "/app/lol-api/summoner.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "summoner.js",
      "sourceFileName": "summoner.js",
      "sourceRoot": "/app/lol-api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/lol-api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "summoner"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSummonerByAccount = exports.getSummonerByName = exports.getSummonerById = undefined;\n\nvar _helpers = require('./helpers');\n\nconst getEndpoint = (0, _helpers.endpointBuilder)('/lol/summoner/v3/summoners');\n\nconst getSummonerById = exports.getSummonerById = (id, region) => (0, _helpers.buildRequest)(`${getEndpoint(region)}/${id}`);\nconst getSummonerByName = exports.getSummonerByName = (name, region) => (0, _helpers.buildRequest)(`${getEndpoint(region)}/by-name/${name}`);\nconst getSummonerByAccount = exports.getSummonerByAccount = (id, region) => (0, _helpers.buildRequest)(`${getEndpoint(region)}/by-account/${id}`);\n\nexports.default = {\n  getSummonerByName,\n  getSummonerById,\n  getSummonerByAccount\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1bW1vbmVyLmpzIl0sIm5hbWVzIjpbImdldEVuZHBvaW50IiwiZ2V0U3VtbW9uZXJCeUlkIiwiaWQiLCJyZWdpb24iLCJnZXRTdW1tb25lckJ5TmFtZSIsIm5hbWUiLCJnZXRTdW1tb25lckJ5QWNjb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLE1BQU1BLGNBQWMsOEJBQWdCLDRCQUFoQixDQUFwQjs7QUFFTyxNQUFNQyw0Q0FBa0IsQ0FBQ0MsRUFBRCxFQUFLQyxNQUFMLEtBQzdCLDJCQUFjLEdBQUVILFlBQVlHLE1BQVosQ0FBb0IsSUFBR0QsRUFBRyxFQUExQyxDQURLO0FBRUEsTUFBTUUsZ0RBQW9CLENBQUNDLElBQUQsRUFBT0YsTUFBUCxLQUMvQiwyQkFBYyxHQUFFSCxZQUFZRyxNQUFaLENBQW9CLFlBQVdFLElBQUssRUFBcEQsQ0FESztBQUVBLE1BQU1DLHNEQUF1QixDQUFDSixFQUFELEVBQUtDLE1BQUwsS0FDbEMsMkJBQWMsR0FBRUgsWUFBWUcsTUFBWixDQUFvQixlQUFjRCxFQUFHLEVBQXJELENBREs7O2tCQUdRO0FBQ2JFLG1CQURhO0FBRWJILGlCQUZhO0FBR2JLO0FBSGEsQyIsImZpbGUiOiJzdW1tb25lci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2xvbC1hcGkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmRwb2ludEJ1aWxkZXIsIGJ1aWxkUmVxdWVzdCB9IGZyb20gJy4vaGVscGVycyc7XG5cbmNvbnN0IGdldEVuZHBvaW50ID0gZW5kcG9pbnRCdWlsZGVyKCcvbG9sL3N1bW1vbmVyL3YzL3N1bW1vbmVycycpO1xuXG5leHBvcnQgY29uc3QgZ2V0U3VtbW9uZXJCeUlkID0gKGlkLCByZWdpb24pID0+IFxuICBidWlsZFJlcXVlc3QoYCR7Z2V0RW5kcG9pbnQocmVnaW9uKX0vJHtpZH1gKTtcbmV4cG9ydCBjb25zdCBnZXRTdW1tb25lckJ5TmFtZSA9IChuYW1lLCByZWdpb24pID0+IFxuICBidWlsZFJlcXVlc3QoYCR7Z2V0RW5kcG9pbnQocmVnaW9uKX0vYnktbmFtZS8ke25hbWV9YCk7XG5leHBvcnQgY29uc3QgZ2V0U3VtbW9uZXJCeUFjY291bnQgPSAoaWQsIHJlZ2lvbikgPT4gXG4gIGJ1aWxkUmVxdWVzdChgJHtnZXRFbmRwb2ludChyZWdpb24pfS9ieS1hY2NvdW50LyR7aWR9YCk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZ2V0U3VtbW9uZXJCeU5hbWUsXG4gIGdldFN1bW1vbmVyQnlJZCxcbiAgZ2V0U3VtbW9uZXJCeUFjY291bnQsXG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "summoner.js"
      ],
      "names": [
        "getEndpoint",
        "getSummonerById",
        "id",
        "region",
        "getSummonerByName",
        "name",
        "getSummonerByAccount"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,MAAMA,cAAc,8BAAgB,4BAAhB,CAApB;;AAEO,MAAMC,4CAAkB,CAACC,EAAD,EAAKC,MAAL,KAC7B,2BAAc,GAAEH,YAAYG,MAAZ,CAAoB,IAAGD,EAAG,EAA1C,CADK;AAEA,MAAME,gDAAoB,CAACC,IAAD,EAAOF,MAAP,KAC/B,2BAAc,GAAEH,YAAYG,MAAZ,CAAoB,YAAWE,IAAK,EAApD,CADK;AAEA,MAAMC,sDAAuB,CAACJ,EAAD,EAAKC,MAAL,KAClC,2BAAc,GAAEH,YAAYG,MAAZ,CAAoB,eAAcD,EAAG,EAArD,CADK;;kBAGQ;AACbE,mBADa;AAEbH,iBAFa;AAGbK;AAHa,C",
      "file": "summoner.js",
      "sourceRoot": "/app/lol-api",
      "sourcesContent": [
        "import { endpointBuilder, buildRequest } from './helpers';\n\nconst getEndpoint = endpointBuilder('/lol/summoner/v3/summoners');\n\nexport const getSummonerById = (id, region) => \n  buildRequest(`${getEndpoint(region)}/${id}`);\nexport const getSummonerByName = (name, region) => \n  buildRequest(`${getEndpoint(region)}/by-name/${name}`);\nexport const getSummonerByAccount = (id, region) => \n  buildRequest(`${getEndpoint(region)}/by-account/${id}`);\n\nexport default {\n  getSummonerByName,\n  getSummonerById,\n  getSummonerByAccount,\n}"
      ]
    },
    "mtime": 1524121469047
  },
  "{\"filename\":\"/app/lol-api/helpers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/lol-api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request-promise-native",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rp"
              }
            ]
          },
          {
            "source": "./regionalProxies.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "regionalProxies"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getRegionalProxy",
            "endpointBuilder",
            "buildRequest"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getRegionalProxy",
              "exported": "getRegionalProxy"
            },
            {
              "kind": "local",
              "local": "endpointBuilder",
              "exported": "endpointBuilder"
            },
            {
              "kind": "local",
              "local": "buildRequest",
              "exported": "buildRequest"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/lol-api/helpers.js",
      "filenameRelative": "/app/lol-api/helpers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "helpers.js",
      "sourceFileName": "helpers.js",
      "sourceRoot": "/app/lol-api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/lol-api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "helpers"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildRequest = exports.endpointBuilder = exports.getRegionalProxy = undefined;\n\nvar _requestPromiseNative = require('request-promise-native');\n\nvar _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);\n\nvar _regionalProxies = require('./regionalProxies.json');\n\nvar _regionalProxies2 = _interopRequireDefault(_regionalProxies);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getRegionalProxy = exports.getRegionalProxy = region => {\n  const proxyData = _regionalProxies2.default.find(i => i.serviceRegion === region);\n  if (!proxyData) throw new Error('Provided region does not exist', region);\n  return proxyData.endpoint;\n};\n\nconst endpointBuilder = exports.endpointBuilder = apiPath => region => `https://${getRegionalProxy(region)}${apiPath}`;\n\nconst buildRequest = exports.buildRequest = uri => (0, _requestPromiseNative2.default)({\n  uri,\n  qs: { 'api_key': process.env.RIOT_API_KEY },\n  json: true\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiZ2V0UmVnaW9uYWxQcm94eSIsInJlZ2lvbiIsInByb3h5RGF0YSIsImZpbmQiLCJpIiwic2VydmljZVJlZ2lvbiIsIkVycm9yIiwiZW5kcG9pbnQiLCJlbmRwb2ludEJ1aWxkZXIiLCJhcGlQYXRoIiwiYnVpbGRSZXF1ZXN0IiwidXJpIiwicXMiLCJwcm9jZXNzIiwiZW52IiwiUklPVF9BUElfS0VZIiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVPLE1BQU1BLDhDQUFtQkMsVUFBVTtBQUN4QyxRQUFNQyxZQUFZLDBCQUFnQkMsSUFBaEIsQ0FBcUJDLEtBQUtBLEVBQUVDLGFBQUYsS0FBb0JKLE1BQTlDLENBQWxCO0FBQ0EsTUFBSSxDQUFDQyxTQUFMLEVBQWdCLE1BQU0sSUFBSUksS0FBSixDQUFVLGdDQUFWLEVBQTRDTCxNQUE1QyxDQUFOO0FBQ2hCLFNBQU9DLFVBQVVLLFFBQWpCO0FBQ0QsQ0FKTTs7QUFNQSxNQUFNQyw0Q0FBa0JDLFdBQVdSLFVBQ3hDLFdBQVVELGlCQUFpQkMsTUFBakIsQ0FBeUIsR0FBRVEsT0FBUSxFQUR4Qzs7QUFHQSxNQUFNQyxzQ0FBZUMsT0FBTyxvQ0FBRztBQUNwQ0EsS0FEb0M7QUFFcENDLE1BQUksRUFBRSxXQUFXQyxRQUFRQyxHQUFSLENBQVlDLFlBQXpCLEVBRmdDO0FBR3BDQyxRQUFNO0FBSDhCLENBQUgsQ0FBNUIiLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2xvbC1hcGkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcnAgZnJvbSAncmVxdWVzdC1wcm9taXNlLW5hdGl2ZSc7XG5pbXBvcnQgcmVnaW9uYWxQcm94aWVzIGZyb20gJy4vcmVnaW9uYWxQcm94aWVzLmpzb24nO1xuXG5leHBvcnQgY29uc3QgZ2V0UmVnaW9uYWxQcm94eSA9IHJlZ2lvbiA9PiB7XG4gIGNvbnN0IHByb3h5RGF0YSA9IHJlZ2lvbmFsUHJveGllcy5maW5kKGkgPT4gaS5zZXJ2aWNlUmVnaW9uID09PSByZWdpb24pO1xuICBpZiAoIXByb3h5RGF0YSkgdGhyb3cgbmV3IEVycm9yKCdQcm92aWRlZCByZWdpb24gZG9lcyBub3QgZXhpc3QnLCByZWdpb24pO1xuICByZXR1cm4gcHJveHlEYXRhLmVuZHBvaW50O1xufTtcblxuZXhwb3J0IGNvbnN0IGVuZHBvaW50QnVpbGRlciA9IGFwaVBhdGggPT4gcmVnaW9uID0+IFxuIGBodHRwczovLyR7Z2V0UmVnaW9uYWxQcm94eShyZWdpb24pfSR7YXBpUGF0aH1gO1xuXG5leHBvcnQgY29uc3QgYnVpbGRSZXF1ZXN0ID0gdXJpID0+IHJwKHtcbiAgdXJpLFxuICBxczogeyAnYXBpX2tleSc6IHByb2Nlc3MuZW52LlJJT1RfQVBJX0tFWSB9LFxuICBqc29uOiB0cnVlLFxufSk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "getRegionalProxy",
        "region",
        "proxyData",
        "find",
        "i",
        "serviceRegion",
        "Error",
        "endpoint",
        "endpointBuilder",
        "apiPath",
        "buildRequest",
        "uri",
        "qs",
        "process",
        "env",
        "RIOT_API_KEY",
        "json"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAEO,MAAMA,8CAAmBC,UAAU;AACxC,QAAMC,YAAY,0BAAgBC,IAAhB,CAAqBC,KAAKA,EAAEC,aAAF,KAAoBJ,MAA9C,CAAlB;AACA,MAAI,CAACC,SAAL,EAAgB,MAAM,IAAII,KAAJ,CAAU,gCAAV,EAA4CL,MAA5C,CAAN;AAChB,SAAOC,UAAUK,QAAjB;AACD,CAJM;;AAMA,MAAMC,4CAAkBC,WAAWR,UACxC,WAAUD,iBAAiBC,MAAjB,CAAyB,GAAEQ,OAAQ,EADxC;;AAGA,MAAMC,sCAAeC,OAAO,oCAAG;AACpCA,KADoC;AAEpCC,MAAI,EAAE,WAAWC,QAAQC,GAAR,CAAYC,YAAzB,EAFgC;AAGpCC,QAAM;AAH8B,CAAH,CAA5B",
      "file": "helpers.js",
      "sourceRoot": "/app/lol-api",
      "sourcesContent": [
        "import rp from 'request-promise-native';\nimport regionalProxies from './regionalProxies.json';\n\nexport const getRegionalProxy = region => {\n  const proxyData = regionalProxies.find(i => i.serviceRegion === region);\n  if (!proxyData) throw new Error('Provided region does not exist', region);\n  return proxyData.endpoint;\n};\n\nexport const endpointBuilder = apiPath => region => \n `https://${getRegionalProxy(region)}${apiPath}`;\n\nexport const buildRequest = uri => rp({\n  uri,\n  qs: { 'api_key': process.env.RIOT_API_KEY },\n  json: true,\n});"
      ]
    },
    "mtime": 1524121427051
  },
  "{\"filename\":\"/app/bot/skills/global/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/global\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./whatCanYouDo",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "whatCanYouDo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/global/index.js",
      "filenameRelative": "/app/bot/skills/global/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/global",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/global",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _whatCanYouDo = require('./whatCanYouDo');\n\nvar _whatCanYouDo2 = _interopRequireDefault(_whatCanYouDo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  whatCanYouDo: _whatCanYouDo2.default\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndoYXRDYW5Zb3VEbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztrQkFFZTtBQUNiQTtBQURhLEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzL2dsb2JhbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3aGF0Q2FuWW91RG8gZnJvbSAnLi93aGF0Q2FuWW91RG8nO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHdoYXRDYW5Zb3VEbyxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "whatCanYouDo"
      ],
      "mappings": ";;;;;;AAAA;;;;;;kBAEe;AACbA;AADa,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/global",
      "sourcesContent": [
        "import whatCanYouDo from './whatCanYouDo';\n\nexport default {\n  whatCanYouDo,\n};\n"
      ]
    },
    "mtime": 1524099685871
  },
  "{\"filename\":\"/app/bot/skills/global/whatCanYouDo.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/global\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../actions",
            "imported": [
              "basicEmbedReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicEmbedReply",
                "local": "makeRichReplyOf"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/global/whatCanYouDo.js",
      "filenameRelative": "/app/bot/skills/global/whatCanYouDo.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "whatCanYouDo.js",
      "sourceFileName": "whatCanYouDo.js",
      "sourceRoot": "/app/bot/skills/global",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/global",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "whatCanYouDo"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _actions = require('../../actions');\n\nconst replyMessage = {\n  // content:\n  //   'this `supports` __a__ **subset** *of* ~~markdown~~ 😃 ```js\\nfunction foo(bar) {\\n  console.log(bar);\\n}\\n\\nfoo(1);```',\n  embed: {\n    // title: 'title ~~(did you know you can have markdown here too?)~~',\n    author: {\n      name: 'Hola !',\n      //   url: 'https://discordapp.com',\n      icon_url: 'https://cdn.discordapp.com/embed/avatars/3.png'\n    },\n    description:\n    // 'this supports [named links](https://discordapp.com) on top of the previously shown subset of markdown.',\n    '**Soy Bot Annah**',\n    // url: 'https://discordapp.com',\n    color: 13565214,\n    timestamp: '2018-02-20T23:43:51.079Z',\n    // footer: {\n    //   icon_url: 'https://cdn.discordapp.com/embed/avatars/0.png',\n    //   text: 'footer text',\n    // },\n    // thumbnail: {\n    //   url: 'https://cdn.discordapp.com/embed/avatars/1.png',\n    // },\n    // image: {\n    //   url: 'https://cdn.discordapp.com/embed/avatars/2.png',\n    // },\n    fields: [{\n      name: '😱',\n      value: `\n*Bueno, yo puedo hablar contigo de una manera especial 7v7, contarte chistes, te puedo decir como interactuar conmigo... Pero para poder usar mis poderes de bronza, necesito que me digas\ntu nombre de invocador y tu region, para esto mis creadores escribieron  este mini manual:*\n`\n    }, {\n      name: `✨Escribe tu nombre de invocador y region de LoL 😉`,\n      value: `\n*Si me dices tu nombre de invocador y region conmigo, puedo tener acceso a cierta informacion publica\nque puede ayudarme a mejorar tu experiencia, intenta pedirme que recuerde tu nombre de invocador. \\n\nPor ejemplo:*\n` + '```Botannah, mi nombre de invocador es bBaaXx y juego en LAN```'\n    }]\n  }\n};\n\nexports.default = async () => (0, _actions.basicEmbedReply)(replyMessage);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoYXRDYW5Zb3VEby5qcyJdLCJuYW1lcyI6WyJyZXBseU1lc3NhZ2UiLCJlbWJlZCIsImF1dGhvciIsIm5hbWUiLCJpY29uX3VybCIsImRlc2NyaXB0aW9uIiwiY29sb3IiLCJ0aW1lc3RhbXAiLCJmaWVsZHMiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUEsTUFBTUEsZUFBZTtBQUNuQjtBQUNBO0FBQ0FDLFNBQU87QUFDTDtBQUNBQyxZQUFRO0FBQ05DLFlBQU0sUUFEQTtBQUVOO0FBQ0FDLGdCQUFVO0FBSEosS0FGSDtBQU9MQztBQUNFO0FBQ0EsdUJBVEc7QUFVTDtBQUNBQyxXQUFPLFFBWEY7QUFZTEMsZUFBVywwQkFaTjtBQWFMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0FDLFlBQVEsQ0FDTjtBQUNFTCxZQUFNLElBRFI7QUFFRU0sYUFBUTs7OztBQUZWLEtBRE0sRUFRTjtBQUNFTixZQUFPLG9EQURUO0FBRUVNLGFBQ0c7Ozs7Q0FBRCxHQUlOO0FBUEUsS0FSTTtBQXZCSDtBQUhZLENBQXJCOztrQkErRGUsWUFBWSw4QkFBZ0JULFlBQWhCLEMiLCJmaWxlIjoid2hhdENhbllvdURvLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L3NraWxscy9nbG9iYWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNpY0VtYmVkUmVwbHkgYXMgbWFrZVJpY2hSZXBseU9mIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XG5cbmNvbnN0IHJlcGx5TWVzc2FnZSA9IHtcbiAgLy8gY29udGVudDpcbiAgLy8gICAndGhpcyBgc3VwcG9ydHNgIF9fYV9fICoqc3Vic2V0KiogKm9mKiB+fm1hcmtkb3dufn4g8J+YgyBgYGBqc1xcbmZ1bmN0aW9uIGZvbyhiYXIpIHtcXG4gIGNvbnNvbGUubG9nKGJhcik7XFxufVxcblxcbmZvbygxKTtgYGAnLFxuICBlbWJlZDoge1xuICAgIC8vIHRpdGxlOiAndGl0bGUgfn4oZGlkIHlvdSBrbm93IHlvdSBjYW4gaGF2ZSBtYXJrZG93biBoZXJlIHRvbz8pfn4nLFxuICAgIGF1dGhvcjoge1xuICAgICAgbmFtZTogJ0hvbGEgIScsXG4gICAgICAvLyAgIHVybDogJ2h0dHBzOi8vZGlzY29yZGFwcC5jb20nLFxuICAgICAgaWNvbl91cmw6ICdodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9lbWJlZC9hdmF0YXJzLzMucG5nJyxcbiAgICB9LFxuICAgIGRlc2NyaXB0aW9uOlxuICAgICAgLy8gJ3RoaXMgc3VwcG9ydHMgW25hbWVkIGxpbmtzXShodHRwczovL2Rpc2NvcmRhcHAuY29tKSBvbiB0b3Agb2YgdGhlIHByZXZpb3VzbHkgc2hvd24gc3Vic2V0IG9mIG1hcmtkb3duLicsXG4gICAgICAnKipTb3kgQm90IEFubmFoKionLFxuICAgIC8vIHVybDogJ2h0dHBzOi8vZGlzY29yZGFwcC5jb20nLFxuICAgIGNvbG9yOiAxMzU2NTIxNCxcbiAgICB0aW1lc3RhbXA6ICcyMDE4LTAyLTIwVDIzOjQzOjUxLjA3OVonLFxuICAgIC8vIGZvb3Rlcjoge1xuICAgIC8vICAgaWNvbl91cmw6ICdodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9lbWJlZC9hdmF0YXJzLzAucG5nJyxcbiAgICAvLyAgIHRleHQ6ICdmb290ZXIgdGV4dCcsXG4gICAgLy8gfSxcbiAgICAvLyB0aHVtYm5haWw6IHtcbiAgICAvLyAgIHVybDogJ2h0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2VtYmVkL2F2YXRhcnMvMS5wbmcnLFxuICAgIC8vIH0sXG4gICAgLy8gaW1hZ2U6IHtcbiAgICAvLyAgIHVybDogJ2h0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2VtYmVkL2F2YXRhcnMvMi5wbmcnLFxuICAgIC8vIH0sXG4gICAgZmllbGRzOiBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICfwn5ixJyxcbiAgICAgICAgdmFsdWU6IGBcbipCdWVubywgeW8gcHVlZG8gaGFibGFyIGNvbnRpZ28gZGUgdW5hIG1hbmVyYSBlc3BlY2lhbCA3djcsIGNvbnRhcnRlIGNoaXN0ZXMsIHRlIHB1ZWRvIGRlY2lyIGNvbW8gaW50ZXJhY3R1YXIgY29ubWlnby4uLiBQZXJvIHBhcmEgcG9kZXIgdXNhciBtaXMgcG9kZXJlcyBkZSBicm9uemEsIG5lY2VzaXRvIHF1ZSBtZSBkaWdhc1xudHUgbm9tYnJlIGRlIGludm9jYWRvciB5IHR1IHJlZ2lvbiwgcGFyYSBlc3RvIG1pcyBjcmVhZG9yZXMgZXNjcmliaWVyb24gIGVzdGUgbWluaSBtYW51YWw6KlxuYCxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6IGDinKhFc2NyaWJlIHR1IG5vbWJyZSBkZSBpbnZvY2Fkb3IgeSByZWdpb24gZGUgTG9MIPCfmIlgLFxuICAgICAgICB2YWx1ZTpcbiAgICAgICAgICBgXG4qU2kgbWUgZGljZXMgdHUgbm9tYnJlIGRlIGludm9jYWRvciB5IHJlZ2lvbiBjb25taWdvLCBwdWVkbyB0ZW5lciBhY2Nlc28gYSBjaWVydGEgaW5mb3JtYWNpb24gcHVibGljYVxucXVlIHB1ZWRlIGF5dWRhcm1lIGEgbWVqb3JhciB0dSBleHBlcmllbmNpYSwgaW50ZW50YSBwZWRpcm1lIHF1ZSByZWN1ZXJkZSB0dSBub21icmUgZGUgaW52b2NhZG9yLiBcXG5cblBvciBlamVtcGxvOipcbmAgKyAnYGBgQm90YW5uYWgsIG1pIG5vbWJyZSBkZSBpbnZvY2Fkb3IgZXMgYkJhYVh4IHkganVlZ28gZW4gTEFOYGBgJyxcbiAgICAgIH0sXG5cbiAgICAgIC8vICAge1xuICAgICAgLy8gICAgIG5hbWU6ICfwn5mEJyxcbiAgICAgIC8vICAgICB2YWx1ZTpcbiAgICAgIC8vICAgICAgICdhbiBpbmZvcm1hdGl2ZSBlcnJvciBzaG91bGQgc2hvdyB1cCwgYW5kIHRoaXMgdmlldyB3aWxsIHJlbWFpbiBhcy1pcyB1bnRpbCBhbGwgaXNzdWVzIGFyZSBmaXhlZCcsXG4gICAgICAvLyAgIH0sXG4gICAgICAvLyAgIHtcbiAgICAgIC8vICAgICBuYW1lOiAnPDpleWU6MjE5MDY5MjUwNjkyODQxNDczPicsXG4gICAgICAvLyAgICAgdmFsdWU6ICd0aGVzZSBsYXN0IHR3bycsXG4gICAgICAvLyAgICAgaW5saW5lOiB0cnVlLFxuICAgICAgLy8gICB9LFxuICAgICAgLy8gICB7XG4gICAgICAvLyAgICAgbmFtZTogJzpoYW5rZXk6JyxcbiAgICAgIC8vICAgICB2YWx1ZTogJ2FyZSBpbmxpbmUgZmllbGRzJyxcbiAgICAgIC8vICAgICBpbmxpbmU6IHRydWUsXG4gICAgICAvLyAgIH0sXG4gICAgXSxcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICgpID0+IG1ha2VSaWNoUmVwbHlPZihyZXBseU1lc3NhZ2UpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "whatCanYouDo.js"
      ],
      "names": [
        "replyMessage",
        "embed",
        "author",
        "name",
        "icon_url",
        "description",
        "color",
        "timestamp",
        "fields",
        "value"
      ],
      "mappings": ";;;;;;AAAA;;AAEA,MAAMA,eAAe;AACnB;AACA;AACAC,SAAO;AACL;AACAC,YAAQ;AACNC,YAAM,QADA;AAEN;AACAC,gBAAU;AAHJ,KAFH;AAOLC;AACE;AACA,uBATG;AAUL;AACAC,WAAO,QAXF;AAYLC,eAAW,0BAZN;AAaL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YAAQ,CACN;AACEL,YAAM,IADR;AAEEM,aAAQ;;;;AAFV,KADM,EAQN;AACEN,YAAO,oDADT;AAEEM,aACG;;;;CAAD,GAIN;AAPE,KARM;AAvBH;AAHY,CAArB;;kBA+De,YAAY,8BAAgBT,YAAhB,C",
      "file": "whatCanYouDo.js",
      "sourceRoot": "/app/bot/skills/global",
      "sourcesContent": [
        "import { basicEmbedReply as makeRichReplyOf } from '../../actions';\n\nconst replyMessage = {\n  // content:\n  //   'this `supports` __a__ **subset** *of* ~~markdown~~ 😃 ```js\\nfunction foo(bar) {\\n  console.log(bar);\\n}\\n\\nfoo(1);```',\n  embed: {\n    // title: 'title ~~(did you know you can have markdown here too?)~~',\n    author: {\n      name: 'Hola !',\n      //   url: 'https://discordapp.com',\n      icon_url: 'https://cdn.discordapp.com/embed/avatars/3.png',\n    },\n    description:\n      // 'this supports [named links](https://discordapp.com) on top of the previously shown subset of markdown.',\n      '**Soy Bot Annah**',\n    // url: 'https://discordapp.com',\n    color: 13565214,\n    timestamp: '2018-02-20T23:43:51.079Z',\n    // footer: {\n    //   icon_url: 'https://cdn.discordapp.com/embed/avatars/0.png',\n    //   text: 'footer text',\n    // },\n    // thumbnail: {\n    //   url: 'https://cdn.discordapp.com/embed/avatars/1.png',\n    // },\n    // image: {\n    //   url: 'https://cdn.discordapp.com/embed/avatars/2.png',\n    // },\n    fields: [\n      {\n        name: '😱',\n        value: `\n*Bueno, yo puedo hablar contigo de una manera especial 7v7, contarte chistes, te puedo decir como interactuar conmigo... Pero para poder usar mis poderes de bronza, necesito que me digas\ntu nombre de invocador y tu region, para esto mis creadores escribieron  este mini manual:*\n`,\n      },\n      {\n        name: `✨Escribe tu nombre de invocador y region de LoL 😉`,\n        value:\n          `\n*Si me dices tu nombre de invocador y region conmigo, puedo tener acceso a cierta informacion publica\nque puede ayudarme a mejorar tu experiencia, intenta pedirme que recuerde tu nombre de invocador. \\n\nPor ejemplo:*\n` + '```Botannah, mi nombre de invocador es bBaaXx y juego en LAN```',\n      },\n\n      //   {\n      //     name: '🙄',\n      //     value:\n      //       'an informative error should show up, and this view will remain as-is until all issues are fixed',\n      //   },\n      //   {\n      //     name: '<:eye:219069250692841473>',\n      //     value: 'these last two',\n      //     inline: true,\n      //   },\n      //   {\n      //     name: ':hankey:',\n      //     value: 'are inline fields',\n      //     inline: true,\n      //   },\n    ],\n  },\n};\n\nexport default async () => makeRichReplyOf(replyMessage);\n"
      ]
    },
    "mtime": 1523172989249
  },
  "{\"filename\":\"/app/bot/skills/vision/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/vision\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./whatIsThat",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "whatIsThat"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/vision/index.js",
      "filenameRelative": "/app/bot/skills/vision/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/vision",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/vision",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _whatIsThat = require('./whatIsThat');\n\nvar _whatIsThat2 = _interopRequireDefault(_whatIsThat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  whatIsThat: _whatIsThat2.default\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndoYXRJc1RoYXQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7a0JBRWU7QUFDYkE7QUFEYSxDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L3NraWxscy92aXNpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2hhdElzVGhhdCBmcm9tICcuL3doYXRJc1RoYXQnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHdoYXRJc1RoYXQsXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "whatIsThat"
      ],
      "mappings": ";;;;;;AAAA;;;;;;kBAEe;AACbA;AADa,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/vision",
      "sourcesContent": [
        "import whatIsThat from './whatIsThat';\n\nexport default {\n  whatIsThat,\n};\n"
      ]
    },
    "mtime": 1524377678994
  },
  "{\"filename\":\"/app/bot/skills/vision/whatIsThat.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/vision\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request-promise-native",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rp"
              }
            ]
          },
          {
            "source": "../../actions",
            "imported": [
              "basicTextReply",
              "randomBasicFromArray"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              },
              {
                "kind": "named",
                "imported": "randomBasicFromArray",
                "local": "pickFrom"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/vision/whatIsThat.js",
      "filenameRelative": "/app/bot/skills/vision/whatIsThat.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "whatIsThat.js",
      "sourceFileName": "whatIsThat.js",
      "sourceRoot": "/app/bot/skills/vision",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/vision",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "whatIsThat"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _requestPromiseNative = require('request-promise-native');\n\nvar _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);\n\nvar _actions = require('../../actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { OBJECT_ANALYSIS_ENDPOINT } = process.env;\n\nconst noImageResponses = [`Uhmm, no veo nada`, `Puedes intentar subiendo una imagen`, `Erhmmm, solo veo el texto de tu mensaje`];\n\nexports.default = async ctx => {\n  const { attachments } = ctx.getMessage();\n  const imageUrl = attachments.first();\n\n  if (typeof imageUrl === 'undefined') return (0, _actions.randomBasicFromArray)(noImageResponses);\n\n  const iaResult = await (0, _requestPromiseNative2.default)(OBJECT_ANALYSIS_ENDPOINT, {\n    qs: { imageUrl: imageUrl.url },\n    json: true\n  });\n\n  const reply = Array.isArray(iaResult) ? `Me parece que es un o una ... ${iaResult[0].class} o ${iaResult[1].class}, o ${iaResult[2].class}` : 'No, no, la verdad no doy ... intenta con otra imagen';\n\n  return (0, _actions.basicTextReply)(reply);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndoYXRJc1RoYXQuanMiXSwibmFtZXMiOlsiT0JKRUNUX0FOQUxZU0lTX0VORFBPSU5UIiwicHJvY2VzcyIsImVudiIsIm5vSW1hZ2VSZXNwb25zZXMiLCJjdHgiLCJhdHRhY2htZW50cyIsImdldE1lc3NhZ2UiLCJpbWFnZVVybCIsImZpcnN0IiwiaWFSZXN1bHQiLCJxcyIsInVybCIsImpzb24iLCJyZXBseSIsIkFycmF5IiwiaXNBcnJheSIsImNsYXNzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBS0EsTUFBTSxFQUFFQSx3QkFBRixLQUErQkMsUUFBUUMsR0FBN0M7O0FBRUEsTUFBTUMsbUJBQW1CLENBQ3RCLG1CQURzQixFQUV0QixxQ0FGc0IsRUFHdEIseUNBSHNCLENBQXpCOztrQkFNZSxNQUFNQyxHQUFOLElBQWE7QUFDMUIsUUFBTSxFQUFFQyxXQUFGLEtBQWtCRCxJQUFJRSxVQUFKLEVBQXhCO0FBQ0EsUUFBTUMsV0FBV0YsWUFBWUcsS0FBWixFQUFqQjs7QUFFQSxNQUFJLE9BQU9ELFFBQVAsS0FBb0IsV0FBeEIsRUFBcUMsT0FBTyxtQ0FBU0osZ0JBQVQsQ0FBUDs7QUFFckMsUUFBTU0sV0FBVyxNQUFNLG9DQUFHVCx3QkFBSCxFQUE2QjtBQUNsRFUsUUFBSSxFQUFFSCxVQUFVQSxTQUFTSSxHQUFyQixFQUQ4QztBQUVsREMsVUFBTTtBQUY0QyxHQUE3QixDQUF2Qjs7QUFLQSxRQUFNQyxRQUFRQyxNQUFNQyxPQUFOLENBQWNOLFFBQWQsSUFDVCxpQ0FBZ0NBLFNBQVMsQ0FBVCxFQUFZTyxLQUFNLE1BQ2pEUCxTQUFTLENBQVQsRUFBWU8sS0FDYixPQUFNUCxTQUFTLENBQVQsRUFBWU8sS0FBTSxFQUhmLEdBSVYsc0RBSko7O0FBTUEsU0FBTyw2QkFBZUgsS0FBZixDQUFQO0FBQ0QsQyIsImZpbGUiOiJ3aGF0SXNUaGF0LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L3NraWxscy92aXNpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcnAgZnJvbSAncmVxdWVzdC1wcm9taXNlLW5hdGl2ZSc7XG5pbXBvcnQge1xuICBiYXNpY1RleHRSZXBseSxcbiAgcmFuZG9tQmFzaWNGcm9tQXJyYXkgYXMgcGlja0Zyb20sXG59IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuXG5jb25zdCB7IE9CSkVDVF9BTkFMWVNJU19FTkRQT0lOVCB9ID0gcHJvY2Vzcy5lbnY7XG5cbmNvbnN0IG5vSW1hZ2VSZXNwb25zZXMgPSBbXG4gIGBVaG1tLCBubyB2ZW8gbmFkYWAsXG4gIGBQdWVkZXMgaW50ZW50YXIgc3ViaWVuZG8gdW5hIGltYWdlbmAsXG4gIGBFcmhtbW0sIHNvbG8gdmVvIGVsIHRleHRvIGRlIHR1IG1lbnNhamVgLFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgY3R4ID0+IHtcbiAgY29uc3QgeyBhdHRhY2htZW50cyB9ID0gY3R4LmdldE1lc3NhZ2UoKTtcbiAgY29uc3QgaW1hZ2VVcmwgPSBhdHRhY2htZW50cy5maXJzdCgpO1xuXG4gIGlmICh0eXBlb2YgaW1hZ2VVcmwgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gcGlja0Zyb20obm9JbWFnZVJlc3BvbnNlcyk7XG5cbiAgY29uc3QgaWFSZXN1bHQgPSBhd2FpdCBycChPQkpFQ1RfQU5BTFlTSVNfRU5EUE9JTlQsIHtcbiAgICBxczogeyBpbWFnZVVybDogaW1hZ2VVcmwudXJsIH0sXG4gICAganNvbjogdHJ1ZSxcbiAgfSk7XG5cbiAgY29uc3QgcmVwbHkgPSBBcnJheS5pc0FycmF5KGlhUmVzdWx0KVxuICAgID8gYE1lIHBhcmVjZSBxdWUgZXMgdW4gbyB1bmEgLi4uICR7aWFSZXN1bHRbMF0uY2xhc3N9IG8gJHtcbiAgICAgICAgaWFSZXN1bHRbMV0uY2xhc3NcbiAgICAgIH0sIG8gJHtpYVJlc3VsdFsyXS5jbGFzc31gXG4gICAgOiAnTm8sIG5vLCBsYSB2ZXJkYWQgbm8gZG95IC4uLiBpbnRlbnRhIGNvbiBvdHJhIGltYWdlbic7XG5cbiAgcmV0dXJuIGJhc2ljVGV4dFJlcGx5KHJlcGx5KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "whatIsThat.js"
      ],
      "names": [
        "OBJECT_ANALYSIS_ENDPOINT",
        "process",
        "env",
        "noImageResponses",
        "ctx",
        "attachments",
        "getMessage",
        "imageUrl",
        "first",
        "iaResult",
        "qs",
        "url",
        "json",
        "reply",
        "Array",
        "isArray",
        "class"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAKA,MAAM,EAAEA,wBAAF,KAA+BC,QAAQC,GAA7C;;AAEA,MAAMC,mBAAmB,CACtB,mBADsB,EAEtB,qCAFsB,EAGtB,yCAHsB,CAAzB;;kBAMe,MAAMC,GAAN,IAAa;AAC1B,QAAM,EAAEC,WAAF,KAAkBD,IAAIE,UAAJ,EAAxB;AACA,QAAMC,WAAWF,YAAYG,KAAZ,EAAjB;;AAEA,MAAI,OAAOD,QAAP,KAAoB,WAAxB,EAAqC,OAAO,mCAASJ,gBAAT,CAAP;;AAErC,QAAMM,WAAW,MAAM,oCAAGT,wBAAH,EAA6B;AAClDU,QAAI,EAAEH,UAAUA,SAASI,GAArB,EAD8C;AAElDC,UAAM;AAF4C,GAA7B,CAAvB;;AAKA,QAAMC,QAAQC,MAAMC,OAAN,CAAcN,QAAd,IACT,iCAAgCA,SAAS,CAAT,EAAYO,KAAM,MACjDP,SAAS,CAAT,EAAYO,KACb,OAAMP,SAAS,CAAT,EAAYO,KAAM,EAHf,GAIV,sDAJJ;;AAMA,SAAO,6BAAeH,KAAf,CAAP;AACD,C",
      "file": "whatIsThat.js",
      "sourceRoot": "/app/bot/skills/vision",
      "sourcesContent": [
        "import rp from 'request-promise-native';\nimport {\n  basicTextReply,\n  randomBasicFromArray as pickFrom,\n} from '../../actions';\n\nconst { OBJECT_ANALYSIS_ENDPOINT } = process.env;\n\nconst noImageResponses = [\n  `Uhmm, no veo nada`,\n  `Puedes intentar subiendo una imagen`,\n  `Erhmmm, solo veo el texto de tu mensaje`,\n];\n\nexport default async ctx => {\n  const { attachments } = ctx.getMessage();\n  const imageUrl = attachments.first();\n\n  if (typeof imageUrl === 'undefined') return pickFrom(noImageResponses);\n\n  const iaResult = await rp(OBJECT_ANALYSIS_ENDPOINT, {\n    qs: { imageUrl: imageUrl.url },\n    json: true,\n  });\n\n  const reply = Array.isArray(iaResult)\n    ? `Me parece que es un o una ... ${iaResult[0].class} o ${\n        iaResult[1].class\n      }, o ${iaResult[2].class}`\n    : 'No, no, la verdad no doy ... intenta con otra imagen';\n\n  return basicTextReply(reply);\n};\n"
      ]
    },
    "mtime": 1524377758967
  },
  "{\"filename\":\"/app/bot/resolveReaction.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/resolveReaction.js",
      "filenameRelative": "/app/bot/resolveReaction.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "resolveReaction.js",
      "sourceFileName": "resolveReaction.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "resolveReaction"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = async _ctx => {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx.getReaction();\n  console.warn('WARN >>> no middleware resolved the request');\n  const { reaction } = ctx;\n  return reaction;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVSZWFjdGlvbi5qcyJdLCJuYW1lcyI6WyJfY3R4IiwiY3R4IiwicmVzb2x2ZWQiLCJnZXRSZWFjdGlvbiIsImNvbnNvbGUiLCJ3YXJuIiwicmVhY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFBZSxNQUFNQSxJQUFOLElBQWM7QUFDM0IsUUFBTUMsTUFBTSxNQUFNRCxJQUFsQjtBQUNBLE1BQUlDLElBQUlDLFFBQUosRUFBSixFQUFvQixPQUFPRCxJQUFJRSxXQUFKLEVBQVA7QUFDcEJDLFVBQVFDLElBQVIsQ0FBYSw2Q0FBYjtBQUNBLFFBQU0sRUFBRUMsUUFBRixLQUFlTCxHQUFyQjtBQUNBLFNBQU9LLFFBQVA7QUFDRCxDIiwiZmlsZSI6InJlc29sdmVSZWFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGFzeW5jIF9jdHggPT4ge1xuICBjb25zdCBjdHggPSBhd2FpdCBfY3R4O1xuICBpZiAoY3R4LnJlc29sdmVkKCkpIHJldHVybiBjdHguZ2V0UmVhY3Rpb24oKTtcbiAgY29uc29sZS53YXJuKCdXQVJOID4+PiBubyBtaWRkbGV3YXJlIHJlc29sdmVkIHRoZSByZXF1ZXN0JylcbiAgY29uc3QgeyByZWFjdGlvbiB9ID0gY3R4O1xuICByZXR1cm4gcmVhY3Rpb247XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "resolveReaction.js"
      ],
      "names": [
        "_ctx",
        "ctx",
        "resolved",
        "getReaction",
        "console",
        "warn",
        "reaction"
      ],
      "mappings": ";;;;;;kBAAe,MAAMA,IAAN,IAAc;AAC3B,QAAMC,MAAM,MAAMD,IAAlB;AACA,MAAIC,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,IAAIE,WAAJ,EAAP;AACpBC,UAAQC,IAAR,CAAa,6CAAb;AACA,QAAM,EAAEC,QAAF,KAAeL,GAArB;AACA,SAAOK,QAAP;AACD,C",
      "file": "resolveReaction.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "export default async _ctx => {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx.getReaction();\n  console.warn('WARN >>> no middleware resolved the request')\n  const { reaction } = ctx;\n  return reaction;\n}"
      ]
    },
    "mtime": 1524101501951
  },
  "{\"filename\":\"/app/bot/nlpBasedResponse.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./actions",
            "imported": [
              "basicTextReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/nlpBasedResponse.js",
      "filenameRelative": "/app/bot/nlpBasedResponse.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "nlpBasedResponse.js",
      "sourceFileName": "nlpBasedResponse.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "nlpBasedResponse"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _actions = require('./actions');\n\nexports.default = async _ctx => {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx;\n\n  const nlp = ctx.get('nlp');\n  if (typeof nlp !== 'object') {\n    console.error('No NLP response recieved');\n    return ctx;\n  };\n  if (!nlp.nlpFulfilled) {\n    console.error('No fulfillment was provided by NLP');\n    return ctx;\n  }\n  ctx.resolve((0, _actions.basicTextReply)(nlp.fulfillment));\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5scEJhc2VkUmVzcG9uc2UuanMiXSwibmFtZXMiOlsiX2N0eCIsImN0eCIsInJlc29sdmVkIiwibmxwIiwiZ2V0IiwiY29uc29sZSIsImVycm9yIiwibmxwRnVsZmlsbGVkIiwicmVzb2x2ZSIsImZ1bGZpbGxtZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7a0JBRWUsTUFBT0EsSUFBUCxJQUFnQjtBQUM3QixRQUFNQyxNQUFNLE1BQU1ELElBQWxCO0FBQ0EsTUFBSUMsSUFBSUMsUUFBSixFQUFKLEVBQW9CLE9BQU9ELEdBQVA7O0FBRXBCLFFBQU1FLE1BQU1GLElBQUlHLEdBQUosQ0FBUSxLQUFSLENBQVo7QUFDQSxNQUFJLE9BQU9ELEdBQVAsS0FBZSxRQUFuQixFQUE2QjtBQUMzQkUsWUFBUUMsS0FBUixDQUFjLDBCQUFkO0FBQ0EsV0FBT0wsR0FBUDtBQUNEO0FBQ0QsTUFBSSxDQUFDRSxJQUFJSSxZQUFULEVBQXVCO0FBQ3JCRixZQUFRQyxLQUFSLENBQWMsb0NBQWQ7QUFDQSxXQUFPTCxHQUFQO0FBQ0Q7QUFDREEsTUFBSU8sT0FBSixDQUFZLDZCQUFlTCxJQUFJTSxXQUFuQixDQUFaO0FBQ0EsU0FBT1IsR0FBUDtBQUNELEMiLCJmaWxlIjoibmxwQmFzZWRSZXNwb25zZS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2ljVGV4dFJlcGx5IH0gZnJvbSAnLi9hY3Rpb25zJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKF9jdHgpID0+IHtcbiAgY29uc3QgY3R4ID0gYXdhaXQgX2N0eDtcbiAgaWYgKGN0eC5yZXNvbHZlZCgpKSByZXR1cm4gY3R4O1xuICBcbiAgY29uc3QgbmxwID0gY3R4LmdldCgnbmxwJyk7XG4gIGlmICh0eXBlb2YgbmxwICE9PSAnb2JqZWN0Jykge1xuICAgIGNvbnNvbGUuZXJyb3IoJ05vIE5MUCByZXNwb25zZSByZWNpZXZlZCcpO1xuICAgIHJldHVybiBjdHg7XG4gIH07XG4gIGlmICghbmxwLm5scEZ1bGZpbGxlZCkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ05vIGZ1bGZpbGxtZW50IHdhcyBwcm92aWRlZCBieSBOTFAnKTtcbiAgICByZXR1cm4gY3R4O1xuICB9XG4gIGN0eC5yZXNvbHZlKGJhc2ljVGV4dFJlcGx5KG5scC5mdWxmaWxsbWVudCkpO1xuICByZXR1cm4gY3R4O1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "nlpBasedResponse.js"
      ],
      "names": [
        "_ctx",
        "ctx",
        "resolved",
        "nlp",
        "get",
        "console",
        "error",
        "nlpFulfilled",
        "resolve",
        "fulfillment"
      ],
      "mappings": ";;;;;;AAAA;;kBAEe,MAAOA,IAAP,IAAgB;AAC7B,QAAMC,MAAM,MAAMD,IAAlB;AACA,MAAIC,IAAIC,QAAJ,EAAJ,EAAoB,OAAOD,GAAP;;AAEpB,QAAME,MAAMF,IAAIG,GAAJ,CAAQ,KAAR,CAAZ;AACA,MAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3BE,YAAQC,KAAR,CAAc,0BAAd;AACA,WAAOL,GAAP;AACD;AACD,MAAI,CAACE,IAAII,YAAT,EAAuB;AACrBF,YAAQC,KAAR,CAAc,oCAAd;AACA,WAAOL,GAAP;AACD;AACDA,MAAIO,OAAJ,CAAY,6BAAeL,IAAIM,WAAnB,CAAZ;AACA,SAAOR,GAAP;AACD,C",
      "file": "nlpBasedResponse.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "import { basicTextReply } from './actions';\n\nexport default async (_ctx) => {\n  const ctx = await _ctx;\n  if (ctx.resolved()) return ctx;\n  \n  const nlp = ctx.get('nlp');\n  if (typeof nlp !== 'object') {\n    console.error('No NLP response recieved');\n    return ctx;\n  };\n  if (!nlp.nlpFulfilled) {\n    console.error('No fulfillment was provided by NLP');\n    return ctx;\n  }\n  ctx.resolve(basicTextReply(nlp.fulfillment));\n  return ctx;\n};\n"
      ]
    },
    "mtime": 1525186746135
  },
  "{\"filename\":\"/app/servers/helpers/socketLogger.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers/helpers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "socketLogMiddleware"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "socketLogMiddleware",
              "exported": "socketLogMiddleware"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/helpers/socketLogger.js",
      "filenameRelative": "/app/servers/helpers/socketLogger.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "socketLogger.js",
      "sourceFileName": "socketLogger.js",
      "sourceRoot": "/app/servers/helpers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers/helpers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "socketLogger"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = ctx => message => ctx.services.wss.sockets.emit('log', message);\n\nconst socketLogMiddleware = exports.socketLogMiddleware = ctx => {\n  ctx.services.wss.sockets.emit('log', ctx.getMessage());\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvY2tldExvZ2dlci5qcyJdLCJuYW1lcyI6WyJjdHgiLCJtZXNzYWdlIiwic2VydmljZXMiLCJ3c3MiLCJzb2NrZXRzIiwiZW1pdCIsInNvY2tldExvZ01pZGRsZXdhcmUiLCJnZXRNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWVBLE9BQU9DLFdBQVdELElBQUlFLFFBQUosQ0FBYUMsR0FBYixDQUFpQkMsT0FBakIsQ0FBeUJDLElBQXpCLENBQThCLEtBQTlCLEVBQXFDSixPQUFyQyxDOztBQUUxQixNQUFNSyxvREFBc0JOLE9BQU87QUFDeENBLE1BQUlFLFFBQUosQ0FBYUMsR0FBYixDQUFpQkMsT0FBakIsQ0FBeUJDLElBQXpCLENBQThCLEtBQTlCLEVBQXFDTCxJQUFJTyxVQUFKLEVBQXJDO0FBQ0EsU0FBT1AsR0FBUDtBQUNELENBSE0iLCJmaWxlIjoic29ja2V0TG9nZ2VyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVycy9oZWxwZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY3R4ID0+IG1lc3NhZ2UgPT4gY3R4LnNlcnZpY2VzLndzcy5zb2NrZXRzLmVtaXQoJ2xvZycsIG1lc3NhZ2UpO1xuXG5leHBvcnQgY29uc3Qgc29ja2V0TG9nTWlkZGxld2FyZSA9IGN0eCA9PiB7XG4gIGN0eC5zZXJ2aWNlcy53c3Muc29ja2V0cy5lbWl0KCdsb2cnLCBjdHguZ2V0TWVzc2FnZSgpKTtcbiAgcmV0dXJuIGN0eDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "socketLogger.js"
      ],
      "names": [
        "ctx",
        "message",
        "services",
        "wss",
        "sockets",
        "emit",
        "socketLogMiddleware",
        "getMessage"
      ],
      "mappings": ";;;;;;kBAAeA,OAAOC,WAAWD,IAAIE,QAAJ,CAAaC,GAAb,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,KAA9B,EAAqCJ,OAArC,C;;AAE1B,MAAMK,oDAAsBN,OAAO;AACxCA,MAAIE,QAAJ,CAAaC,GAAb,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,KAA9B,EAAqCL,IAAIO,UAAJ,EAArC;AACA,SAAOP,GAAP;AACD,CAHM",
      "file": "socketLogger.js",
      "sourceRoot": "/app/servers/helpers",
      "sourcesContent": [
        "export default ctx => message => ctx.services.wss.sockets.emit('log', message);\n\nexport const socketLogMiddleware = ctx => {\n  ctx.services.wss.sockets.emit('log', ctx.getMessage());\n  return ctx;\n};\n"
      ]
    },
    "mtime": 1523085118040
  },
  "{\"filename\":\"/app/servers/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./web",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWebServer"
              }
            ]
          },
          {
            "source": "./sockets",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getSocketsServer"
              }
            ]
          },
          {
            "source": "./database",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getDatabaseConnection"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/servers/index.js",
      "filenameRelative": "/app/servers/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _web = require('./web');\n\nvar _web2 = _interopRequireDefault(_web);\n\nvar _sockets = require('./sockets');\n\nvar _sockets2 = _interopRequireDefault(_sockets);\n\nvar _database = require('./database');\n\nvar _database2 = _interopRequireDefault(_database);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async () => {\n  const webServer = await (0, _web2.default)();\n  const webSocketServer = await (0, _sockets2.default)(webServer);\n  const databaseConnection = await (0, _database2.default)();\n\n  return {\n    ws: webServer,\n    wss: webSocketServer,\n    db: databaseConnection\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndlYlNlcnZlciIsIndlYlNvY2tldFNlcnZlciIsImRhdGFiYXNlQ29ubmVjdGlvbiIsIndzIiwid3NzIiwiZGIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O2tCQUVlLFlBQVk7QUFDekIsUUFBTUEsWUFBWSxNQUFNLG9CQUF4QjtBQUNBLFFBQU1DLGtCQUFrQixNQUFNLHVCQUFpQkQsU0FBakIsQ0FBOUI7QUFDQSxRQUFNRSxxQkFBcUIsTUFBTSx5QkFBakM7O0FBRUEsU0FBTztBQUNMQyxRQUFJSCxTQURDO0FBRUxJLFNBQUtILGVBRkE7QUFHTEksUUFBSUg7QUFIQyxHQUFQO0FBS0QsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0V2ViU2VydmVyIGZyb20gJy4vd2ViJztcbmltcG9ydCBnZXRTb2NrZXRzU2VydmVyIGZyb20gJy4vc29ja2V0cyc7XG5pbXBvcnQgZ2V0RGF0YWJhc2VDb25uZWN0aW9uIGZyb20gJy4vZGF0YWJhc2UnO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHdlYlNlcnZlciA9IGF3YWl0IGdldFdlYlNlcnZlcigpO1xuICBjb25zdCB3ZWJTb2NrZXRTZXJ2ZXIgPSBhd2FpdCBnZXRTb2NrZXRzU2VydmVyKHdlYlNlcnZlcik7XG4gIGNvbnN0IGRhdGFiYXNlQ29ubmVjdGlvbiA9IGF3YWl0IGdldERhdGFiYXNlQ29ubmVjdGlvbigpO1xuXG4gIHJldHVybiB7XG4gICAgd3M6IHdlYlNlcnZlcixcbiAgICB3c3M6IHdlYlNvY2tldFNlcnZlcixcbiAgICBkYjogZGF0YWJhc2VDb25uZWN0aW9uLFxuICB9O1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "webServer",
        "webSocketServer",
        "databaseConnection",
        "ws",
        "wss",
        "db"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,YAAY;AACzB,QAAMA,YAAY,MAAM,oBAAxB;AACA,QAAMC,kBAAkB,MAAM,uBAAiBD,SAAjB,CAA9B;AACA,QAAME,qBAAqB,MAAM,yBAAjC;;AAEA,SAAO;AACLC,QAAIH,SADC;AAELI,SAAKH,eAFA;AAGLI,QAAIH;AAHC,GAAP;AAKD,C",
      "file": "index.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "import getWebServer from './web';\nimport getSocketsServer from './sockets';\nimport getDatabaseConnection from './database';\n\nexport default async () => {\n  const webServer = await getWebServer();\n  const webSocketServer = await getSocketsServer(webServer);\n  const databaseConnection = await getDatabaseConnection();\n\n  return {\n    ws: webServer,\n    wss: webSocketServer,\n    db: databaseConnection,\n  };\n};\n"
      ]
    },
    "mtime": 1524128060605
  },
  "{\"filename\":\"/app/servers/web.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "http",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "http"
              }
            ]
          },
          {
            "source": "morgan",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "morgan"
              }
            ]
          },
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "./utils/glitchKeepalive",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "keepAlive"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getApp",
            "getServer",
            "runServer",
            "startServer"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getApp",
              "exported": "getApp"
            },
            {
              "kind": "local",
              "local": "getServer",
              "exported": "getServer"
            },
            {
              "kind": "local",
              "local": "runServer",
              "exported": "runServer"
            },
            {
              "kind": "local",
              "local": "startServer",
              "exported": "startServer"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/web.js",
      "filenameRelative": "/app/servers/web.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "web.js",
      "sourceFileName": "web.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "web"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startServer = exports.runServer = exports.getServer = exports.getApp = undefined;\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _morgan = require('morgan');\n\nvar _morgan2 = _interopRequireDefault(_morgan);\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _glitchKeepalive = require('./utils/glitchKeepalive');\n\nvar _glitchKeepalive2 = _interopRequireDefault(_glitchKeepalive);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst dialogFlowCredentials = 1;\n\n// Esta primera funcion configura la aplicacion de express que va a\n// correr en el servidor http\n\n\n// Esto es para mantener vivo el proceso cuando usamos Glitch\n// Importamos la libreria con la implementacion de HTTP de Node\n// para poder servir contenido web y express para armar el servidor web\n// morgan es para hacer logs a la consola cuando el servidor procesa una peticion\nconst getApp = exports.getApp = () => new Promise((resolve, reject) => {\n  try {\n    const app = (0, _express2.default)();\n\n    // esta ruta esta aqui para mantener vivo el server con un keepalive\n    app.get('/its-alive', (req, res) => res.json({ isAlive: true }));\n\n    app.use(_bodyParser2.default.json());\n    app.use(_bodyParser2.default.urlencoded({ extended: true }));\n    // Aqui va la configuracion del servidor\n\n    // Esto habilita el log a la consola cuando estamos en modo development.\n    // if (process.env.NODE_ENV === 'development') app.use(morgan('tiny'))\n\n    // Aqui se pueden agregar mas rutas\n    app.get('/*', _express2.default.static('static'));\n\n    resolve(app);\n  } catch (err) {\n    reject(err);\n  }\n});\n\n// Esta function crea un servidor http\nconst getServer = exports.getServer = app => Promise.resolve(_http2.default.createServer(app));\n\n// Esta funcion corre el servidor web\nconst runServer = exports.runServer = ({ PORT }) => server => {\n  server.listen(PORT, () => console.log(`HTTP server running on port ${PORT}`));\n  (0, _glitchKeepalive2.default)();\n  return server;\n};\n\nconst startServer = exports.startServer = port => app => {\n  const server = app.listen(port, () => console.log(`Express server running on port ${port}`));\n  (0, _glitchKeepalive2.default)();\n  return { server, app };\n};\n\n// Esta es la funcion que vamos a exportar y que se encarga de\n// correr las otras tres funciones en orden.\n\nexports.default = () => getApp().then(startServer(process.env.PORT));\n// .then(getServer)\n// .then(runServer(process.env));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYi5qcyJdLCJuYW1lcyI6WyJkaWFsb2dGbG93Q3JlZGVudGlhbHMiLCJnZXRBcHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImFwcCIsImdldCIsInJlcSIsInJlcyIsImpzb24iLCJpc0FsaXZlIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwic3RhdGljIiwiZXJyIiwiZ2V0U2VydmVyIiwiY3JlYXRlU2VydmVyIiwicnVuU2VydmVyIiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJzdGFydFNlcnZlciIsInBvcnQiLCJ0aGVuIiwicHJvY2VzcyIsImVudiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBR0E7Ozs7OztBQUVBLE1BQU1BLHdCQUF3QixDQUE5Qjs7QUFFQTtBQUNBOzs7QUFOQTtBQVJBO0FBQ0E7QUFDQTtBQWFPLE1BQU1DLDBCQUFTLE1BQ3BCLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDL0IsTUFBSTtBQUNGLFVBQU1DLE1BQU0sd0JBQVo7O0FBRUE7QUFDQUEsUUFBSUMsR0FBSixDQUFRLFlBQVIsRUFBc0IsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLElBQUlDLElBQUosQ0FBUyxFQUFFQyxTQUFTLElBQVgsRUFBVCxDQUFwQzs7QUFFQUwsUUFBSU0sR0FBSixDQUFRLHFCQUFXRixJQUFYLEVBQVI7QUFDQUosUUFBSU0sR0FBSixDQUFRLHFCQUFXQyxVQUFYLENBQXNCLEVBQUVDLFVBQVUsSUFBWixFQUF0QixDQUFSO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBUixRQUFJQyxHQUFKLENBQVEsSUFBUixFQUFjLGtCQUFRUSxNQUFSLENBQWUsUUFBZixDQUFkOztBQUVBWCxZQUFRRSxHQUFSO0FBQ0QsR0FqQkQsQ0FpQkUsT0FBT1UsR0FBUCxFQUFZO0FBQ1pYLFdBQU9XLEdBQVA7QUFDRDtBQUNGLENBckJELENBREs7O0FBd0JQO0FBQ08sTUFBTUMsZ0NBQVlYLE9BQU9ILFFBQVFDLE9BQVIsQ0FBZ0IsZUFBS2MsWUFBTCxDQUFrQlosR0FBbEIsQ0FBaEIsQ0FBekI7O0FBRVA7QUFDTyxNQUFNYSxnQ0FBWSxDQUFDLEVBQUVDLElBQUYsRUFBRCxLQUFjQyxVQUFVO0FBQy9DQSxTQUFPQyxNQUFQLENBQWNGLElBQWQsRUFBb0IsTUFDbEJHLFFBQVFDLEdBQVIsQ0FBYSwrQkFBOEJKLElBQUssRUFBaEQsQ0FERjtBQUdBO0FBQ0EsU0FBT0MsTUFBUDtBQUNELENBTk07O0FBUUEsTUFBTUksb0NBQWNDLFFBQVFwQixPQUFPO0FBQ3hDLFFBQU1lLFNBQVNmLElBQUlnQixNQUFKLENBQVdJLElBQVgsRUFBaUIsTUFDOUJILFFBQVFDLEdBQVIsQ0FBYSxrQ0FBaUNFLElBQUssRUFBbkQsQ0FEYSxDQUFmO0FBR0E7QUFDQSxTQUFPLEVBQUVMLE1BQUYsRUFBVWYsR0FBVixFQUFQO0FBQ0QsQ0FOTTs7QUFRUDtBQUNBOztrQkFDZSxNQUNiSixTQUFTeUIsSUFBVCxDQUFjRixZQUFZRyxRQUFRQyxHQUFSLENBQVlULElBQXhCLENBQWQsQztBQUNFO0FBQ0EiLCJmaWxlIjoid2ViLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVycyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydGFtb3MgbGEgbGlicmVyaWEgY29uIGxhIGltcGxlbWVudGFjaW9uIGRlIEhUVFAgZGUgTm9kZVxuLy8gcGFyYSBwb2RlciBzZXJ2aXIgY29udGVuaWRvIHdlYiB5IGV4cHJlc3MgcGFyYSBhcm1hciBlbCBzZXJ2aWRvciB3ZWJcbi8vIG1vcmdhbiBlcyBwYXJhIGhhY2VyIGxvZ3MgYSBsYSBjb25zb2xhIGN1YW5kbyBlbCBzZXJ2aWRvciBwcm9jZXNhIHVuYSBwZXRpY2lvblxuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCc7XG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcblxuLy8gRXN0byBlcyBwYXJhIG1hbnRlbmVyIHZpdm8gZWwgcHJvY2VzbyBjdWFuZG8gdXNhbW9zIEdsaXRjaFxuaW1wb3J0IGtlZXBBbGl2ZSBmcm9tICcuL3V0aWxzL2dsaXRjaEtlZXBhbGl2ZSc7XG5cbmNvbnN0IGRpYWxvZ0Zsb3dDcmVkZW50aWFscyA9IDE7XG5cbi8vIEVzdGEgcHJpbWVyYSBmdW5jaW9uIGNvbmZpZ3VyYSBsYSBhcGxpY2FjaW9uIGRlIGV4cHJlc3MgcXVlIHZhIGFcbi8vIGNvcnJlciBlbiBlbCBzZXJ2aWRvciBodHRwXG5leHBvcnQgY29uc3QgZ2V0QXBwID0gKCkgPT5cbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbiAgICAgIC8vIGVzdGEgcnV0YSBlc3RhIGFxdWkgcGFyYSBtYW50ZW5lciB2aXZvIGVsIHNlcnZlciBjb24gdW4ga2VlcGFsaXZlXG4gICAgICBhcHAuZ2V0KCcvaXRzLWFsaXZlJywgKHJlcSwgcmVzKSA9PiByZXMuanNvbih7IGlzQWxpdmU6IHRydWUgfSkpO1xuICAgICAgXG4gICAgICBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbiAgICAgIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuICAgICAgLy8gQXF1aSB2YSBsYSBjb25maWd1cmFjaW9uIGRlbCBzZXJ2aWRvclxuXG4gICAgICAvLyBFc3RvIGhhYmlsaXRhIGVsIGxvZyBhIGxhIGNvbnNvbGEgY3VhbmRvIGVzdGFtb3MgZW4gbW9kbyBkZXZlbG9wbWVudC5cbiAgICAgIC8vIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgYXBwLnVzZShtb3JnYW4oJ3RpbnknKSlcblxuICAgICAgLy8gQXF1aSBzZSBwdWVkZW4gYWdyZWdhciBtYXMgcnV0YXNcbiAgICAgIGFwcC5nZXQoJy8qJywgZXhwcmVzcy5zdGF0aWMoJ3N0YXRpYycpKTtcblxuICAgICAgcmVzb2x2ZShhcHApO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmVqZWN0KGVycik7XG4gICAgfVxuICB9KTtcblxuLy8gRXN0YSBmdW5jdGlvbiBjcmVhIHVuIHNlcnZpZG9yIGh0dHBcbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXIgPSBhcHAgPT4gUHJvbWlzZS5yZXNvbHZlKGh0dHAuY3JlYXRlU2VydmVyKGFwcCkpO1xuXG4vLyBFc3RhIGZ1bmNpb24gY29ycmUgZWwgc2Vydmlkb3Igd2ViXG5leHBvcnQgY29uc3QgcnVuU2VydmVyID0gKHsgUE9SVCB9KSA9PiBzZXJ2ZXIgPT4ge1xuICBzZXJ2ZXIubGlzdGVuKFBPUlQsICgpID0+XG4gICAgY29uc29sZS5sb2coYEhUVFAgc2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCksXG4gICk7XG4gIGtlZXBBbGl2ZSgpO1xuICByZXR1cm4gc2VydmVyO1xufTtcblxuZXhwb3J0IGNvbnN0IHN0YXJ0U2VydmVyID0gcG9ydCA9PiBhcHAgPT4ge1xuICBjb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHBvcnQsICgpID0+XG4gICAgY29uc29sZS5sb2coYEV4cHJlc3Mgc2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCksXG4gICk7XG4gIGtlZXBBbGl2ZSgpO1xuICByZXR1cm4geyBzZXJ2ZXIsIGFwcCB9O1xufVxuXG4vLyBFc3RhIGVzIGxhIGZ1bmNpb24gcXVlIHZhbW9zIGEgZXhwb3J0YXIgeSBxdWUgc2UgZW5jYXJnYSBkZVxuLy8gY29ycmVyIGxhcyBvdHJhcyB0cmVzIGZ1bmNpb25lcyBlbiBvcmRlbi5cbmV4cG9ydCBkZWZhdWx0ICgpID0+XG4gIGdldEFwcCgpLnRoZW4oc3RhcnRTZXJ2ZXIocHJvY2Vzcy5lbnYuUE9SVCkpXG4gICAgLy8gLnRoZW4oZ2V0U2VydmVyKVxuICAgIC8vIC50aGVuKHJ1blNlcnZlcihwcm9jZXNzLmVudikpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "web.js"
      ],
      "names": [
        "dialogFlowCredentials",
        "getApp",
        "Promise",
        "resolve",
        "reject",
        "app",
        "get",
        "req",
        "res",
        "json",
        "isAlive",
        "use",
        "urlencoded",
        "extended",
        "static",
        "err",
        "getServer",
        "createServer",
        "runServer",
        "PORT",
        "server",
        "listen",
        "console",
        "log",
        "startServer",
        "port",
        "then",
        "process",
        "env"
      ],
      "mappings": ";;;;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA,MAAMA,wBAAwB,CAA9B;;AAEA;AACA;;;AANA;AARA;AACA;AACA;AAaO,MAAMC,0BAAS,MACpB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,MAAI;AACF,UAAMC,MAAM,wBAAZ;;AAEA;AACAA,QAAIC,GAAJ,CAAQ,YAAR,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAcA,IAAIC,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAT,CAApC;;AAEAL,QAAIM,GAAJ,CAAQ,qBAAWF,IAAX,EAAR;AACAJ,QAAIM,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACA;;AAEA;AACA;;AAEA;AACAR,QAAIC,GAAJ,CAAQ,IAAR,EAAc,kBAAQQ,MAAR,CAAe,QAAf,CAAd;;AAEAX,YAAQE,GAAR;AACD,GAjBD,CAiBE,OAAOU,GAAP,EAAY;AACZX,WAAOW,GAAP;AACD;AACF,CArBD,CADK;;AAwBP;AACO,MAAMC,gCAAYX,OAAOH,QAAQC,OAAR,CAAgB,eAAKc,YAAL,CAAkBZ,GAAlB,CAAhB,CAAzB;;AAEP;AACO,MAAMa,gCAAY,CAAC,EAAEC,IAAF,EAAD,KAAcC,UAAU;AAC/CA,SAAOC,MAAP,CAAcF,IAAd,EAAoB,MAClBG,QAAQC,GAAR,CAAa,+BAA8BJ,IAAK,EAAhD,CADF;AAGA;AACA,SAAOC,MAAP;AACD,CANM;;AAQA,MAAMI,oCAAcC,QAAQpB,OAAO;AACxC,QAAMe,SAASf,IAAIgB,MAAJ,CAAWI,IAAX,EAAiB,MAC9BH,QAAQC,GAAR,CAAa,kCAAiCE,IAAK,EAAnD,CADa,CAAf;AAGA;AACA,SAAO,EAAEL,MAAF,EAAUf,GAAV,EAAP;AACD,CANM;;AAQP;AACA;;kBACe,MACbJ,SAASyB,IAAT,CAAcF,YAAYG,QAAQC,GAAR,CAAYT,IAAxB,CAAd,C;AACE;AACA",
      "file": "web.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "// Importamos la libreria con la implementacion de HTTP de Node\n// para poder servir contenido web y express para armar el servidor web\n// morgan es para hacer logs a la consola cuando el servidor procesa una peticion\nimport http from 'http';\nimport morgan from 'morgan';\nimport express from 'express';\nimport bodyParser from 'body-parser';\n\n// Esto es para mantener vivo el proceso cuando usamos Glitch\nimport keepAlive from './utils/glitchKeepalive';\n\nconst dialogFlowCredentials = 1;\n\n// Esta primera funcion configura la aplicacion de express que va a\n// correr en el servidor http\nexport const getApp = () =>\n  new Promise((resolve, reject) => {\n    try {\n      const app = express();\n\n      // esta ruta esta aqui para mantener vivo el server con un keepalive\n      app.get('/its-alive', (req, res) => res.json({ isAlive: true }));\n      \n      app.use(bodyParser.json());\n      app.use(bodyParser.urlencoded({ extended: true }));\n      // Aqui va la configuracion del servidor\n\n      // Esto habilita el log a la consola cuando estamos en modo development.\n      // if (process.env.NODE_ENV === 'development') app.use(morgan('tiny'))\n\n      // Aqui se pueden agregar mas rutas\n      app.get('/*', express.static('static'));\n\n      resolve(app);\n    } catch (err) {\n      reject(err);\n    }\n  });\n\n// Esta function crea un servidor http\nexport const getServer = app => Promise.resolve(http.createServer(app));\n\n// Esta funcion corre el servidor web\nexport const runServer = ({ PORT }) => server => {\n  server.listen(PORT, () =>\n    console.log(`HTTP server running on port ${PORT}`),\n  );\n  keepAlive();\n  return server;\n};\n\nexport const startServer = port => app => {\n  const server = app.listen(port, () =>\n    console.log(`Express server running on port ${port}`),\n  );\n  keepAlive();\n  return { server, app };\n}\n\n// Esta es la funcion que vamos a exportar y que se encarga de\n// correr las otras tres funciones en orden.\nexport default () =>\n  getApp().then(startServer(process.env.PORT))\n    // .then(getServer)\n    // .then(runServer(process.env));\n"
      ]
    },
    "mtime": 1524385933586
  },
  "{\"filename\":\"/app/servers/utils/glitchKeepalive.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers/utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/servers/utils/glitchKeepalive.js",
      "filenameRelative": "/app/servers/utils/glitchKeepalive.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "glitchKeepalive.js",
      "sourceFileName": "glitchKeepalive.js",
      "sourceRoot": "/app/servers/utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers/utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "glitchKeepalive"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = () => {\n  const reqOpts = {\n    url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me/its-alive'\n  };\n  const keepalive = () => (0, _request2.default)(reqOpts, () => setTimeout(() => keepalive(), 55000));\n  // if this is running on Glitch, call self every 55 secs\n  if (process.env.PROJECT_DOMAIN) keepalive();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsaXRjaEtlZXBhbGl2ZS5qcyJdLCJuYW1lcyI6WyJyZXFPcHRzIiwidXJsIiwicHJvY2VzcyIsImVudiIsIlBST0pFQ1RfRE9NQUlOIiwia2VlcGFsaXZlIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztrQkFFZSxNQUFNO0FBQ25CLFFBQU1BLFVBQVU7QUFDZEMsU0FBSyxZQUFZQyxRQUFRQyxHQUFSLENBQVlDLGNBQXhCLEdBQXlDO0FBRGhDLEdBQWhCO0FBR0EsUUFBTUMsWUFBWSxNQUNoQix1QkFBUUwsT0FBUixFQUFpQixNQUFNTSxXQUFXLE1BQU1ELFdBQWpCLEVBQThCLEtBQTlCLENBQXZCLENBREY7QUFFQTtBQUNBLE1BQUlILFFBQVFDLEdBQVIsQ0FBWUMsY0FBaEIsRUFBZ0NDO0FBQ2pDLEMiLCJmaWxlIjoiZ2xpdGNoS2VlcGFsaXZlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVycy91dGlscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0IGZyb20gJ3JlcXVlc3QnO1xuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gIGNvbnN0IHJlcU9wdHMgPSB7XG4gICAgdXJsOiAnaHR0cDovLycgKyBwcm9jZXNzLmVudi5QUk9KRUNUX0RPTUFJTiArICcuZ2xpdGNoLm1lL2l0cy1hbGl2ZScsXG4gIH07XG4gIGNvbnN0IGtlZXBhbGl2ZSA9ICgpID0+XG4gICAgcmVxdWVzdChyZXFPcHRzLCAoKSA9PiBzZXRUaW1lb3V0KCgpID0+IGtlZXBhbGl2ZSgpLCA1NTAwMCkpO1xuICAvLyBpZiB0aGlzIGlzIHJ1bm5pbmcgb24gR2xpdGNoLCBjYWxsIHNlbGYgZXZlcnkgNTUgc2Vjc1xuICBpZiAocHJvY2Vzcy5lbnYuUFJPSkVDVF9ET01BSU4pIGtlZXBhbGl2ZSgpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "glitchKeepalive.js"
      ],
      "names": [
        "reqOpts",
        "url",
        "process",
        "env",
        "PROJECT_DOMAIN",
        "keepalive",
        "setTimeout"
      ],
      "mappings": ";;;;;;AAAA;;;;;;kBAEe,MAAM;AACnB,QAAMA,UAAU;AACdC,SAAK,YAAYC,QAAQC,GAAR,CAAYC,cAAxB,GAAyC;AADhC,GAAhB;AAGA,QAAMC,YAAY,MAChB,uBAAQL,OAAR,EAAiB,MAAMM,WAAW,MAAMD,WAAjB,EAA8B,KAA9B,CAAvB,CADF;AAEA;AACA,MAAIH,QAAQC,GAAR,CAAYC,cAAhB,EAAgCC;AACjC,C",
      "file": "glitchKeepalive.js",
      "sourceRoot": "/app/servers/utils",
      "sourcesContent": [
        "import request from 'request';\n\nexport default () => {\n  const reqOpts = {\n    url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me/its-alive',\n  };\n  const keepalive = () =>\n    request(reqOpts, () => setTimeout(() => keepalive(), 55000));\n  // if this is running on Glitch, call self every 55 secs\n  if (process.env.PROJECT_DOMAIN) keepalive();\n};\n"
      ]
    },
    "mtime": 1523986826459
  },
  "{\"filename\":\"/app/servers/sockets.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "socket.io",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "SocketIo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "server"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "server",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/sockets.js",
      "filenameRelative": "/app/servers/sockets.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sockets.js",
      "sourceFileName": "sockets.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sockets"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function ({ server }) {\n  const io = new _socket2.default(server);\n\n  let totalConnections = 0;\n  let liveConnections = 0;\n\n  io.on('connection', socket => {\n    console.log(`new connection: ${socket.id}`);\n    totalConnections += 1;\n    liveConnections += 1;\n    io.sockets.emit('count', {\n      total: totalConnections,\n      live: liveConnections\n    });\n    socket.on('disconnect', reason => {\n      console.log(`${socket.id} disconnected because: ${reason}`);\n      liveConnections -= 1;\n      io.sockets.emit('count', {\n        total: totalConnections,\n        live: liveConnections\n      });\n    });\n  });\n\n  return io;\n};\n\nvar _socket = require('socket.io');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvY2tldHMuanMiXSwibmFtZXMiOlsic2VydmVyIiwiaW8iLCJ0b3RhbENvbm5lY3Rpb25zIiwibGl2ZUNvbm5lY3Rpb25zIiwib24iLCJzb2NrZXQiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJzb2NrZXRzIiwiZW1pdCIsInRvdGFsIiwibGl2ZSIsInJlYXNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2tCQUNlLFVBQVMsRUFBRUEsTUFBRixFQUFULEVBQXFCO0FBQ2xDLFFBQU1DLEtBQUsscUJBQWFELE1BQWIsQ0FBWDs7QUFFQSxNQUFJRSxtQkFBbUIsQ0FBdkI7QUFDQSxNQUFJQyxrQkFBa0IsQ0FBdEI7O0FBRUFGLEtBQUdHLEVBQUgsQ0FBTSxZQUFOLEVBQW9CQyxVQUFVO0FBQzVCQyxZQUFRQyxHQUFSLENBQWEsbUJBQWtCRixPQUFPRyxFQUFHLEVBQXpDO0FBQ0FOLHdCQUFvQixDQUFwQjtBQUNBQyx1QkFBbUIsQ0FBbkI7QUFDQUYsT0FBR1EsT0FBSCxDQUFXQyxJQUFYLENBQWdCLE9BQWhCLEVBQXlCO0FBQ3ZCQyxhQUFPVCxnQkFEZ0I7QUFFdkJVLFlBQU1UO0FBRmlCLEtBQXpCO0FBSUFFLFdBQU9ELEVBQVAsQ0FBVSxZQUFWLEVBQXdCUyxVQUFVO0FBQ2hDUCxjQUFRQyxHQUFSLENBQWEsR0FBRUYsT0FBT0csRUFBRywwQkFBeUJLLE1BQU8sRUFBekQ7QUFDQVYseUJBQW1CLENBQW5CO0FBQ0FGLFNBQUdRLE9BQUgsQ0FBV0MsSUFBWCxDQUFnQixPQUFoQixFQUF5QjtBQUN2QkMsZUFBT1QsZ0JBRGdCO0FBRXZCVSxjQUFNVDtBQUZpQixPQUF6QjtBQUlELEtBUEQ7QUFRRCxHQWhCRDs7QUFrQkEsU0FBT0YsRUFBUDtBQUNELEM7O0FBMUJEIiwiZmlsZSI6InNvY2tldHMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNvY2tldElvIGZyb20gJ3NvY2tldC5pbyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IHNlcnZlciB9KSB7XG4gIGNvbnN0IGlvID0gbmV3IFNvY2tldElvKHNlcnZlcik7XG5cbiAgbGV0IHRvdGFsQ29ubmVjdGlvbnMgPSAwO1xuICBsZXQgbGl2ZUNvbm5lY3Rpb25zID0gMDtcblxuICBpby5vbignY29ubmVjdGlvbicsIHNvY2tldCA9PiB7XG4gICAgY29uc29sZS5sb2coYG5ldyBjb25uZWN0aW9uOiAke3NvY2tldC5pZH1gKTtcbiAgICB0b3RhbENvbm5lY3Rpb25zICs9IDE7XG4gICAgbGl2ZUNvbm5lY3Rpb25zICs9IDE7XG4gICAgaW8uc29ja2V0cy5lbWl0KCdjb3VudCcsIHtcbiAgICAgIHRvdGFsOiB0b3RhbENvbm5lY3Rpb25zLFxuICAgICAgbGl2ZTogbGl2ZUNvbm5lY3Rpb25zLFxuICAgIH0pO1xuICAgIHNvY2tldC5vbignZGlzY29ubmVjdCcsIHJlYXNvbiA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgJHtzb2NrZXQuaWR9IGRpc2Nvbm5lY3RlZCBiZWNhdXNlOiAke3JlYXNvbn1gKTtcbiAgICAgIGxpdmVDb25uZWN0aW9ucyAtPSAxO1xuICAgICAgaW8uc29ja2V0cy5lbWl0KCdjb3VudCcsIHtcbiAgICAgICAgdG90YWw6IHRvdGFsQ29ubmVjdGlvbnMsXG4gICAgICAgIGxpdmU6IGxpdmVDb25uZWN0aW9ucyxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcblxuICByZXR1cm4gaW87XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sockets.js"
      ],
      "names": [
        "server",
        "io",
        "totalConnections",
        "liveConnections",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "sockets",
        "emit",
        "total",
        "live",
        "reason"
      ],
      "mappings": ";;;;;;kBACe,UAAS,EAAEA,MAAF,EAAT,EAAqB;AAClC,QAAMC,KAAK,qBAAaD,MAAb,CAAX;;AAEA,MAAIE,mBAAmB,CAAvB;AACA,MAAIC,kBAAkB,CAAtB;;AAEAF,KAAGG,EAAH,CAAM,YAAN,EAAoBC,UAAU;AAC5BC,YAAQC,GAAR,CAAa,mBAAkBF,OAAOG,EAAG,EAAzC;AACAN,wBAAoB,CAApB;AACAC,uBAAmB,CAAnB;AACAF,OAAGQ,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyB;AACvBC,aAAOT,gBADgB;AAEvBU,YAAMT;AAFiB,KAAzB;AAIAE,WAAOD,EAAP,CAAU,YAAV,EAAwBS,UAAU;AAChCP,cAAQC,GAAR,CAAa,GAAEF,OAAOG,EAAG,0BAAyBK,MAAO,EAAzD;AACAV,yBAAmB,CAAnB;AACAF,SAAGQ,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyB;AACvBC,eAAOT,gBADgB;AAEvBU,cAAMT;AAFiB,OAAzB;AAID,KAPD;AAQD,GAhBD;;AAkBA,SAAOF,EAAP;AACD,C;;AA1BD",
      "file": "sockets.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "import SocketIo from 'socket.io';\nexport default function({ server }) {\n  const io = new SocketIo(server);\n\n  let totalConnections = 0;\n  let liveConnections = 0;\n\n  io.on('connection', socket => {\n    console.log(`new connection: ${socket.id}`);\n    totalConnections += 1;\n    liveConnections += 1;\n    io.sockets.emit('count', {\n      total: totalConnections,\n      live: liveConnections,\n    });\n    socket.on('disconnect', reason => {\n      console.log(`${socket.id} disconnected because: ${reason}`);\n      liveConnections -= 1;\n      io.sockets.emit('count', {\n        total: totalConnections,\n        live: liveConnections,\n      });\n    });\n  });\n\n  return io;\n}\n"
      ]
    },
    "mtime": 1524379101580
  },
  "{\"filename\":\"/app/servers/database.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "mongoose"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/servers/database.js",
      "filenameRelative": "/app/servers/database.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "database.js",
      "sourceFileName": "database.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "database"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar _mongoose2 = _interopRequireDefault(_mongoose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { MONGO_URI } = process.env;\n\nexports.default = () => new Promise((resolve, reject) => {\n  const db = _mongoose2.default.connection;\n  _mongoose2.default.connect(MONGO_URI);\n\n  db.on('error', err => reject(err));\n  db.once('open', () => {\n    console.log('Mongo Database connected');\n    resolve(db);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbIk1PTkdPX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImRiIiwiY29ubmVjdGlvbiIsImNvbm5lY3QiLCJvbiIsImVyciIsIm9uY2UiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUEsTUFBTSxFQUFFQSxTQUFGLEtBQWdCQyxRQUFRQyxHQUE5Qjs7a0JBRWUsTUFDYixJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQy9CLFFBQU1DLEtBQUssbUJBQVNDLFVBQXBCO0FBQ0EscUJBQVNDLE9BQVQsQ0FBaUJSLFNBQWpCOztBQUVBTSxLQUFHRyxFQUFILENBQU0sT0FBTixFQUFlQyxPQUFPTCxPQUFPSyxHQUFQLENBQXRCO0FBQ0FKLEtBQUdLLElBQUgsQ0FBUSxNQUFSLEVBQWdCLE1BQU07QUFDcEJDLFlBQVFDLEdBQVIsQ0FBWSwwQkFBWjtBQUNBVCxZQUFRRSxFQUFSO0FBQ0QsR0FIRDtBQUlELENBVEQsQyIsImZpbGUiOiJkYXRhYmFzZS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zdCB7IE1PTkdPX1VSSSB9ID0gcHJvY2Vzcy5lbnY7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+XG4gIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG4gICAgbW9uZ29vc2UuY29ubmVjdChNT05HT19VUkkpO1xuXG4gICAgZGIub24oJ2Vycm9yJywgZXJyID0+IHJlamVjdChlcnIpKTtcbiAgICBkYi5vbmNlKCdvcGVuJywgKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ01vbmdvIERhdGFiYXNlIGNvbm5lY3RlZCcpO1xuICAgICAgcmVzb2x2ZShkYik7XG4gICAgfSk7XG4gIH0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "MONGO_URI",
        "process",
        "env",
        "Promise",
        "resolve",
        "reject",
        "db",
        "connection",
        "connect",
        "on",
        "err",
        "once",
        "console",
        "log"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAM,EAAEA,SAAF,KAAgBC,QAAQC,GAA9B;;kBAEe,MACb,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,KAAK,mBAASC,UAApB;AACA,qBAASC,OAAT,CAAiBR,SAAjB;;AAEAM,KAAGG,EAAH,CAAM,OAAN,EAAeC,OAAOL,OAAOK,GAAP,CAAtB;AACAJ,KAAGK,IAAH,CAAQ,MAAR,EAAgB,MAAM;AACpBC,YAAQC,GAAR,CAAY,0BAAZ;AACAT,YAAQE,EAAR;AACD,GAHD;AAID,CATD,C",
      "file": "database.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "import mongoose from 'mongoose';\n\nconst { MONGO_URI } = process.env;\n\nexport default () =>\n  new Promise((resolve, reject) => {\n    const db = mongoose.connection;\n    mongoose.connect(MONGO_URI);\n\n    db.on('error', err => reject(err));\n    db.once('open', () => {\n      console.log('Mongo Database connected');\n      resolve(db);\n    });\n  });\n"
      ]
    },
    "mtime": 1524128425082
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/handlers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./api",
            "imported": [
              "sendTextMessage",
              "sendTypingStatus"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "sendTextMessage",
                "local": "sendTextMessage"
              },
              {
                "kind": "named",
                "imported": "sendTypingStatus",
                "local": "sendTypingStatus"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/handlers.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/handlers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "handlers.js",
      "sourceFileName": "handlers.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "handlers"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _api = require('./api');\n\nconst logPrefix = 'Adapter[fbMessenger]:';\n\nconst wait = t => new Promise(r => setTimeout(r, t));\n\nconst platformActions = {\n  'default-action'(reaction) {\n    console.warn(`${logPrefix} I don't know what to do with reaction type: ${reaction.type}`);\n  },\n  ignore() {\n    return;\n  },\n  error(reaction) {\n    console.log('errored Reaction', reaction);\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`);\n  },\n  'message-reply'(reaction) {\n    const { message, input } = reaction;\n    (0, _api.sendTypingStatus)(input, true);\n    wait(1000).then(() => (0, _api.sendTextMessage)(message, input) && (0, _api.sendTypingStatus)(input, false));\n  }\n};\n\nconst getAction = actionType => actionType in platformActions ? platformActions[actionType] : platformActions['default-action'];\n\nexports.default = reaction => getAction(reaction.type)(reaction);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXJzLmpzIl0sIm5hbWVzIjpbImxvZ1ByZWZpeCIsIndhaXQiLCJ0IiwiUHJvbWlzZSIsInIiLCJzZXRUaW1lb3V0IiwicGxhdGZvcm1BY3Rpb25zIiwicmVhY3Rpb24iLCJjb25zb2xlIiwid2FybiIsInR5cGUiLCJpZ25vcmUiLCJlcnJvciIsImxvZyIsIm1lc3NhZ2UiLCJpbnB1dCIsInRoZW4iLCJnZXRBY3Rpb24iLCJhY3Rpb25UeXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQSxNQUFNQSxZQUFZLHVCQUFsQjs7QUFFQSxNQUFNQyxPQUFPQyxLQUFLLElBQUlDLE9BQUosQ0FBWUMsS0FBS0MsV0FBV0QsQ0FBWCxFQUFjRixDQUFkLENBQWpCLENBQWxCOztBQUVBLE1BQU1JLGtCQUFrQjtBQUN0QixtQkFBaUJDLFFBQWpCLEVBQTJCO0FBQ3pCQyxZQUFRQyxJQUFSLENBQ0csR0FBRVQsU0FBVSxnREFDWE8sU0FBU0csSUFDVixFQUhIO0FBS0QsR0FQcUI7QUFRdEJDLFdBQVM7QUFDUDtBQUNELEdBVnFCO0FBV3RCQyxRQUFNTCxRQUFOLEVBQWdCO0FBQ2RDLFlBQVFLLEdBQVIsQ0FBWSxrQkFBWixFQUFnQ04sUUFBaEM7QUFDQSxXQUFPQyxRQUFRSSxLQUFSLENBQWUsR0FBRVosU0FBVSxxQkFBb0JPLFNBQVNLLEtBQU0sRUFBOUQsQ0FBUDtBQUNELEdBZHFCO0FBZXRCLGtCQUFnQkwsUUFBaEIsRUFBMEI7QUFDeEIsVUFBTSxFQUFFTyxPQUFGLEVBQVdDLEtBQVgsS0FBcUJSLFFBQTNCO0FBQ0EsK0JBQWlCUSxLQUFqQixFQUF3QixJQUF4QjtBQUNBZCxTQUFLLElBQUwsRUFBV2UsSUFBWCxDQUFnQixNQUFNLDBCQUFnQkYsT0FBaEIsRUFBeUJDLEtBQXpCLEtBQW1DLDJCQUFpQkEsS0FBakIsRUFBd0IsS0FBeEIsQ0FBekQ7QUFDRDtBQW5CcUIsQ0FBeEI7O0FBc0JBLE1BQU1FLFlBQVlDLGNBQ2hCQSxjQUFjWixlQUFkLEdBQ0lBLGdCQUFnQlksVUFBaEIsQ0FESixHQUVJWixnQkFBZ0IsZ0JBQWhCLENBSE47O2tCQUtlQyxZQUFZVSxVQUFVVixTQUFTRyxJQUFuQixFQUF5QkgsUUFBekIsQyIsImZpbGUiOiJoYW5kbGVycy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9hZGFwdGVycy9mYk1lc3NlbmdlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRUZXh0TWVzc2FnZSwgc2VuZFR5cGluZ1N0YXR1cyB9IGZyb20gJy4vYXBpJztcbmNvbnN0IGxvZ1ByZWZpeCA9ICdBZGFwdGVyW2ZiTWVzc2VuZ2VyXTonO1xuXG5jb25zdCB3YWl0ID0gdCA9PiBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgdCkpO1xuXG5jb25zdCBwbGF0Zm9ybUFjdGlvbnMgPSB7XG4gICdkZWZhdWx0LWFjdGlvbicocmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBgJHtsb2dQcmVmaXh9IEkgZG9uJ3Qga25vdyB3aGF0IHRvIGRvIHdpdGggcmVhY3Rpb24gdHlwZTogJHtcbiAgICAgICAgcmVhY3Rpb24udHlwZVxuICAgICAgfWAsXG4gICAgKTtcbiAgfSxcbiAgaWdub3JlKCkge1xuICAgIHJldHVybjtcbiAgfSxcbiAgZXJyb3IocmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLmxvZygnZXJyb3JlZCBSZWFjdGlvbicsIHJlYWN0aW9uKVxuICAgIHJldHVybiBjb25zb2xlLmVycm9yKGAke2xvZ1ByZWZpeH0gSSBoYXZlIGFuIGVycm9yOiAke3JlYWN0aW9uLmVycm9yfWApO1xuICB9LFxuICAnbWVzc2FnZS1yZXBseScocmVhY3Rpb24pIHtcbiAgICBjb25zdCB7IG1lc3NhZ2UsIGlucHV0IH0gPSByZWFjdGlvbjtcbiAgICBzZW5kVHlwaW5nU3RhdHVzKGlucHV0LCB0cnVlKTtcbiAgICB3YWl0KDEwMDApLnRoZW4oKCkgPT4gc2VuZFRleHRNZXNzYWdlKG1lc3NhZ2UsIGlucHV0KSAmJiBzZW5kVHlwaW5nU3RhdHVzKGlucHV0LCBmYWxzZSkpO1xuICB9LFxufTtcblxuY29uc3QgZ2V0QWN0aW9uID0gYWN0aW9uVHlwZSA9PlxuICBhY3Rpb25UeXBlIGluIHBsYXRmb3JtQWN0aW9uc1xuICAgID8gcGxhdGZvcm1BY3Rpb25zW2FjdGlvblR5cGVdXG4gICAgOiBwbGF0Zm9ybUFjdGlvbnNbJ2RlZmF1bHQtYWN0aW9uJ107XG5cbmV4cG9ydCBkZWZhdWx0IHJlYWN0aW9uID0+IGdldEFjdGlvbihyZWFjdGlvbi50eXBlKShyZWFjdGlvbik7XG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "handlers.js"
      ],
      "names": [
        "logPrefix",
        "wait",
        "t",
        "Promise",
        "r",
        "setTimeout",
        "platformActions",
        "reaction",
        "console",
        "warn",
        "type",
        "ignore",
        "error",
        "log",
        "message",
        "input",
        "then",
        "getAction",
        "actionType"
      ],
      "mappings": ";;;;;;AAAA;;AACA,MAAMA,YAAY,uBAAlB;;AAEA,MAAMC,OAAOC,KAAK,IAAIC,OAAJ,CAAYC,KAAKC,WAAWD,CAAX,EAAcF,CAAd,CAAjB,CAAlB;;AAEA,MAAMI,kBAAkB;AACtB,mBAAiBC,QAAjB,EAA2B;AACzBC,YAAQC,IAAR,CACG,GAAET,SAAU,gDACXO,SAASG,IACV,EAHH;AAKD,GAPqB;AAQtBC,WAAS;AACP;AACD,GAVqB;AAWtBC,QAAML,QAAN,EAAgB;AACdC,YAAQK,GAAR,CAAY,kBAAZ,EAAgCN,QAAhC;AACA,WAAOC,QAAQI,KAAR,CAAe,GAAEZ,SAAU,qBAAoBO,SAASK,KAAM,EAA9D,CAAP;AACD,GAdqB;AAetB,kBAAgBL,QAAhB,EAA0B;AACxB,UAAM,EAAEO,OAAF,EAAWC,KAAX,KAAqBR,QAA3B;AACA,+BAAiBQ,KAAjB,EAAwB,IAAxB;AACAd,SAAK,IAAL,EAAWe,IAAX,CAAgB,MAAM,0BAAgBF,OAAhB,EAAyBC,KAAzB,KAAmC,2BAAiBA,KAAjB,EAAwB,KAAxB,CAAzD;AACD;AAnBqB,CAAxB;;AAsBA,MAAME,YAAYC,cAChBA,cAAcZ,eAAd,GACIA,gBAAgBY,UAAhB,CADJ,GAEIZ,gBAAgB,gBAAhB,CAHN;;kBAKeC,YAAYU,UAAUV,SAASG,IAAnB,EAAyBH,QAAzB,C",
      "file": "handlers.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "import { sendTextMessage, sendTypingStatus } from './api';\nconst logPrefix = 'Adapter[fbMessenger]:';\n\nconst wait = t => new Promise(r => setTimeout(r, t));\n\nconst platformActions = {\n  'default-action'(reaction) {\n    console.warn(\n      `${logPrefix} I don't know what to do with reaction type: ${\n        reaction.type\n      }`,\n    );\n  },\n  ignore() {\n    return;\n  },\n  error(reaction) {\n    console.log('errored Reaction', reaction)\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`);\n  },\n  'message-reply'(reaction) {\n    const { message, input } = reaction;\n    sendTypingStatus(input, true);\n    wait(1000).then(() => sendTextMessage(message, input) && sendTypingStatus(input, false));\n  },\n};\n\nconst getAction = actionType =>\n  actionType in platformActions\n    ? platformActions[actionType]\n    : platformActions['default-action'];\n\nexport default reaction => getAction(reaction.type)(reaction);\n\n"
      ]
    },
    "mtime": 1524989657833
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/actions.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./messageHelpers",
            "imported": [
              "marshallMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "marshallMessage",
                "local": "marshallMessage"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "publishMessage",
            "platformMessage"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "publishMessage",
              "exported": "publishMessage"
            },
            {
              "kind": "local",
              "local": "platformMessage",
              "exported": "platformMessage"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/actions.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/actions.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "actions.js",
      "sourceFileName": "actions.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "actions"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.platformMessage = exports.publishMessage = undefined;\n\nvar _messageHelpers = require('./messageHelpers');\n\nconst publishMessage = exports.publishMessage = message => ({\n  type: 'incoming-message',\n  message: (0, _messageHelpers.marshallMessage)(message)\n});\n\nconst platformMessage = exports.platformMessage = message => ({\n  type: 'platform-message',\n  message\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsicHVibGlzaE1lc3NhZ2UiLCJtZXNzYWdlIiwidHlwZSIsInBsYXRmb3JtTWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVPLE1BQU1BLDBDQUFpQkMsWUFBWTtBQUN4Q0MsUUFBTSxrQkFEa0M7QUFFeENELFdBQVMscUNBQWdCQSxPQUFoQjtBQUYrQixDQUFaLENBQXZCOztBQUtBLE1BQU1FLDRDQUFrQkYsWUFBWTtBQUN6Q0MsUUFBTSxrQkFEbUM7QUFFekNEO0FBRnlDLENBQVosQ0FBeEIiLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9hZGFwdGVycy9mYk1lc3NlbmdlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcnNoYWxsTWVzc2FnZSB9IGZyb20gJy4vbWVzc2FnZUhlbHBlcnMnO1xuXG5leHBvcnQgY29uc3QgcHVibGlzaE1lc3NhZ2UgPSBtZXNzYWdlID0+ICh7XG4gIHR5cGU6ICdpbmNvbWluZy1tZXNzYWdlJyxcbiAgbWVzc2FnZTogbWFyc2hhbGxNZXNzYWdlKG1lc3NhZ2UpLFxufSk7XG5cbmV4cG9ydCBjb25zdCBwbGF0Zm9ybU1lc3NhZ2UgPSBtZXNzYWdlID0+ICh7XG4gIHR5cGU6ICdwbGF0Zm9ybS1tZXNzYWdlJyxcbiAgbWVzc2FnZSxcbn0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "actions.js"
      ],
      "names": [
        "publishMessage",
        "message",
        "type",
        "platformMessage"
      ],
      "mappings": ";;;;;;;AAAA;;AAEO,MAAMA,0CAAiBC,YAAY;AACxCC,QAAM,kBADkC;AAExCD,WAAS,qCAAgBA,OAAhB;AAF+B,CAAZ,CAAvB;;AAKA,MAAME,4CAAkBF,YAAY;AACzCC,QAAM,kBADmC;AAEzCD;AAFyC,CAAZ,CAAxB",
      "file": "actions.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "import { marshallMessage } from './messageHelpers';\n\nexport const publishMessage = message => ({\n  type: 'incoming-message',\n  message: marshallMessage(message),\n});\n\nexport const platformMessage = message => ({\n  type: 'platform-message',\n  message,\n});\n"
      ]
    },
    "mtime": 1524988837264
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/messageHelpers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "marshallMessage"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "marshallMessage",
              "exported": "marshallMessage"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/messageHelpers.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/messageHelpers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "messageHelpers.js",
      "sourceFileName": "messageHelpers.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "messageHelpers"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst marshallMessage = exports.marshallMessage = ({ message }) => ({\n  msgId: message.message.mid,\n  content: message.message.text,\n  authorId: message.sender.id,\n  // authorName: message.author.username,\n  channel: message.pageId,\n  attachments: message.attachments\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VIZWxwZXJzLmpzIl0sIm5hbWVzIjpbIm1hcnNoYWxsTWVzc2FnZSIsIm1lc3NhZ2UiLCJtc2dJZCIsIm1pZCIsImNvbnRlbnQiLCJ0ZXh0IiwiYXV0aG9ySWQiLCJzZW5kZXIiLCJpZCIsImNoYW5uZWwiLCJwYWdlSWQiLCJhdHRhY2htZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSw0Q0FBa0IsQ0FBQyxFQUFFQyxPQUFGLEVBQUQsTUFBa0I7QUFDL0NDLFNBQU9ELFFBQVFBLE9BQVIsQ0FBZ0JFLEdBRHdCO0FBRS9DQyxXQUFTSCxRQUFRQSxPQUFSLENBQWdCSSxJQUZzQjtBQUcvQ0MsWUFBVUwsUUFBUU0sTUFBUixDQUFlQyxFQUhzQjtBQUkvQztBQUNBQyxXQUFTUixRQUFRUyxNQUw4QjtBQU0vQ0MsZUFBYVYsUUFBUVU7QUFOMEIsQ0FBbEIsQ0FBeEIiLCJmaWxlIjoibWVzc2FnZUhlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvYWRhcHRlcnMvZmJNZXNzZW5nZXIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWFyc2hhbGxNZXNzYWdlID0gKHsgbWVzc2FnZSB9KSA9PiAoe1xuICBtc2dJZDogbWVzc2FnZS5tZXNzYWdlLm1pZCxcbiAgY29udGVudDogbWVzc2FnZS5tZXNzYWdlLnRleHQsXG4gIGF1dGhvcklkOiBtZXNzYWdlLnNlbmRlci5pZCxcbiAgLy8gYXV0aG9yTmFtZTogbWVzc2FnZS5hdXRob3IudXNlcm5hbWUsXG4gIGNoYW5uZWw6IG1lc3NhZ2UucGFnZUlkLFxuICBhdHRhY2htZW50czogbWVzc2FnZS5hdHRhY2htZW50cyxcbn0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "messageHelpers.js"
      ],
      "names": [
        "marshallMessage",
        "message",
        "msgId",
        "mid",
        "content",
        "text",
        "authorId",
        "sender",
        "id",
        "channel",
        "pageId",
        "attachments"
      ],
      "mappings": ";;;;;AAAO,MAAMA,4CAAkB,CAAC,EAAEC,OAAF,EAAD,MAAkB;AAC/CC,SAAOD,QAAQA,OAAR,CAAgBE,GADwB;AAE/CC,WAASH,QAAQA,OAAR,CAAgBI,IAFsB;AAG/CC,YAAUL,QAAQM,MAAR,CAAeC,EAHsB;AAI/C;AACAC,WAASR,QAAQS,MAL8B;AAM/CC,eAAaV,QAAQU;AAN0B,CAAlB,CAAxB",
      "file": "messageHelpers.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "export const marshallMessage = ({ message }) => ({\n  msgId: message.message.mid,\n  content: message.message.text,\n  authorId: message.sender.id,\n  // authorName: message.author.username,\n  channel: message.pageId,\n  attachments: message.attachments,\n});\n"
      ]
    },
    "mtime": 1524662266003
  },
  "{\"filename\":\"/app/bot/adapters/fbMessenger/api.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/fbMessenger\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request-promise-native",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rp"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "callSendAPI",
            "messageData",
            "getPsidData",
            "psid",
            "sendTextMessage",
            "response",
            "input",
            "sendTypingStatus",
            "status",
            "sender"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "callSendAPI",
              "exported": "callSendAPI"
            },
            {
              "kind": "local",
              "local": "messageData",
              "exported": "messageData"
            },
            {
              "kind": "local",
              "local": "getPsidData",
              "exported": "getPsidData"
            },
            {
              "kind": "local",
              "local": "psid",
              "exported": "psid"
            },
            {
              "kind": "local",
              "local": "sendTextMessage",
              "exported": "sendTextMessage"
            },
            {
              "kind": "local",
              "local": "response",
              "exported": "response"
            },
            {
              "kind": "local",
              "local": "input",
              "exported": "input"
            },
            {
              "kind": "local",
              "local": "sendTypingStatus",
              "exported": "sendTypingStatus"
            },
            {
              "kind": "local",
              "local": "status",
              "exported": "status"
            },
            {
              "kind": "local",
              "local": "sender",
              "exported": "sender"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/fbMessenger/api.js",
      "filenameRelative": "/app/bot/adapters/fbMessenger/api.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.js",
      "sourceFileName": "api.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/fbMessenger",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callSendAPI = callSendAPI;\nexports.getPsidData = getPsidData;\nexports.sendTextMessage = sendTextMessage;\nexports.sendTypingStatus = sendTypingStatus;\n\nvar _requestPromiseNative = require('request-promise-native');\n\nvar _requestPromiseNative2 = _interopRequireDefault(_requestPromiseNative);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { FB_MESSENGER_PAGE_ACCESS_TOKEN } = process.env;\n\nfunction callSendAPI(messageData) {\n  return (0, _requestPromiseNative2.default)({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n  }).catch(err => console.error(err));\n}\n\nfunction getPsidData(psid) {\n  return (0, _requestPromiseNative2.default)({\n    uri: `https://graph.facebook.com/v2.6/${psid}`,\n    qs: {\n      fields: 'first_name,last_name,profile_pic',\n      access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN\n    },\n    method: 'GET'\n  }).catch(err => console.error(err));\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nfunction sendTextMessage(response, input) {\n  return callSendAPI({\n    recipient: input.message.sender,\n    message: {\n      text: response.content,\n      metadata: 'DEVELOPER_DEFINED_METADATA'\n    }\n  });\n}\n\nfunction sendTypingStatus({ message: { sender } }, status) {\n  return callSendAPI({\n    recipient: sender,\n    sender_action: `typing_${status ? 'on' : 'off'}`\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJjYWxsU2VuZEFQSSIsImdldFBzaWREYXRhIiwic2VuZFRleHRNZXNzYWdlIiwic2VuZFR5cGluZ1N0YXR1cyIsIkZCX01FU1NFTkdFUl9QQUdFX0FDQ0VTU19UT0tFTiIsInByb2Nlc3MiLCJlbnYiLCJtZXNzYWdlRGF0YSIsInVyaSIsInFzIiwiYWNjZXNzX3Rva2VuIiwibWV0aG9kIiwianNvbiIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwicHNpZCIsImZpZWxkcyIsInJlc3BvbnNlIiwiaW5wdXQiLCJyZWNpcGllbnQiLCJtZXNzYWdlIiwic2VuZGVyIiwidGV4dCIsImNvbnRlbnQiLCJtZXRhZGF0YSIsInN0YXR1cyIsInNlbmRlcl9hY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7O1FBSWdCQSxXLEdBQUFBLFc7UUFVQUMsVyxHQUFBQSxXO1FBZ0JBQyxlLEdBQUFBLGU7UUFVQUMsZ0IsR0FBQUEsZ0I7O0FBeENoQjs7Ozs7O0FBRUEsTUFBTSxFQUFFQyw4QkFBRixLQUFxQ0MsUUFBUUMsR0FBbkQ7O0FBRU8sU0FBU04sV0FBVCxDQUFxQk8sV0FBckIsRUFBa0M7QUFDdkMsU0FBTyxvQ0FBRztBQUNSQyxTQUFLLDZDQURHO0FBRVJDLFFBQUksRUFBRUMsY0FBY04sOEJBQWhCLEVBRkk7QUFHUk8sWUFBUSxNQUhBO0FBSVJDLFVBQU1MO0FBSkUsR0FBSCxFQU1KTSxLQU5JLENBTUVDLE9BQU9DLFFBQVFDLEtBQVIsQ0FBY0YsR0FBZCxDQU5ULENBQVA7QUFPRDs7QUFFTSxTQUFTYixXQUFULENBQXFCZ0IsSUFBckIsRUFBMkI7QUFDaEMsU0FBTyxvQ0FBRztBQUNSVCxTQUFNLG1DQUFrQ1MsSUFBSyxFQURyQztBQUVSUixRQUFJO0FBQ0ZTLGNBQVEsa0NBRE47QUFFRlIsb0JBQWNOO0FBRlosS0FGSTtBQU1STyxZQUFRO0FBTkEsR0FBSCxFQVFKRSxLQVJJLENBUUVDLE9BQU9DLFFBQVFDLEtBQVIsQ0FBY0YsR0FBZCxDQVJULENBQVA7QUFTRDs7QUFFRDs7OztBQUlPLFNBQVNaLGVBQVQsQ0FBeUJpQixRQUF6QixFQUFtQ0MsS0FBbkMsRUFBMEM7QUFDL0MsU0FBT3BCLFlBQVk7QUFDakJxQixlQUFXRCxNQUFNRSxPQUFOLENBQWNDLE1BRFI7QUFFakJELGFBQVM7QUFDUEUsWUFBTUwsU0FBU00sT0FEUjtBQUVQQyxnQkFBVTtBQUZIO0FBRlEsR0FBWixDQUFQO0FBT0Q7O0FBRU0sU0FBU3ZCLGdCQUFULENBQTBCLEVBQUVtQixTQUFTLEVBQUVDLE1BQUYsRUFBWCxFQUExQixFQUFtREksTUFBbkQsRUFBMkQ7QUFDaEUsU0FBTzNCLFlBQVk7QUFDakJxQixlQUFXRSxNQURNO0FBRWpCSyxtQkFBZ0IsVUFBU0QsU0FBUyxJQUFULEdBQWdCLEtBQU07QUFGOUIsR0FBWixDQUFQO0FBSUQiLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2ZiTWVzc2VuZ2VyIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJwIGZyb20gJ3JlcXVlc3QtcHJvbWlzZS1uYXRpdmUnO1xuXG5jb25zdCB7IEZCX01FU1NFTkdFUl9QQUdFX0FDQ0VTU19UT0tFTiB9ID0gcHJvY2Vzcy5lbnY7XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxsU2VuZEFQSShtZXNzYWdlRGF0YSkge1xuICByZXR1cm4gcnAoe1xuICAgIHVyaTogJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjYvbWUvbWVzc2FnZXMnLFxuICAgIHFzOiB7IGFjY2Vzc190b2tlbjogRkJfTUVTU0VOR0VSX1BBR0VfQUNDRVNTX1RPS0VOIH0sXG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAganNvbjogbWVzc2FnZURhdGFcbiAgfSlcbiAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQc2lkRGF0YShwc2lkKSB7XG4gIHJldHVybiBycCh7XG4gICAgdXJpOiBgaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjIuNi8ke3BzaWR9YCxcbiAgICBxczoge1xuICAgICAgZmllbGRzOiAnZmlyc3RfbmFtZSxsYXN0X25hbWUscHJvZmlsZV9waWMnLFxuICAgICAgYWNjZXNzX3Rva2VuOiBGQl9NRVNTRU5HRVJfUEFHRV9BQ0NFU1NfVE9LRU4gXG4gICAgfSxcbiAgICBtZXRob2Q6ICdHRVQnLFxuICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbn1cblxuLypcbiAqIFNlbmQgYSB0ZXh0IG1lc3NhZ2UgdXNpbmcgdGhlIFNlbmQgQVBJLlxuICpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbmRUZXh0TWVzc2FnZShyZXNwb25zZSwgaW5wdXQpIHtcbiAgcmV0dXJuIGNhbGxTZW5kQVBJKHtcbiAgICByZWNpcGllbnQ6IGlucHV0Lm1lc3NhZ2Uuc2VuZGVyLFxuICAgIG1lc3NhZ2U6IHtcbiAgICAgIHRleHQ6IHJlc3BvbnNlLmNvbnRlbnQsXG4gICAgICBtZXRhZGF0YTogJ0RFVkVMT1BFUl9ERUZJTkVEX01FVEFEQVRBJ1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZW5kVHlwaW5nU3RhdHVzKHsgbWVzc2FnZTogeyBzZW5kZXIgfSB9LCBzdGF0dXMpIHtcbiAgcmV0dXJuIGNhbGxTZW5kQVBJKHtcbiAgICByZWNpcGllbnQ6IHNlbmRlcixcbiAgICBzZW5kZXJfYWN0aW9uOiBgdHlwaW5nXyR7c3RhdHVzID8gJ29uJyA6ICdvZmYnfWBcbiAgfSk7XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "callSendAPI",
        "getPsidData",
        "sendTextMessage",
        "sendTypingStatus",
        "FB_MESSENGER_PAGE_ACCESS_TOKEN",
        "process",
        "env",
        "messageData",
        "uri",
        "qs",
        "access_token",
        "method",
        "json",
        "catch",
        "err",
        "console",
        "error",
        "psid",
        "fields",
        "response",
        "input",
        "recipient",
        "message",
        "sender",
        "text",
        "content",
        "metadata",
        "status",
        "sender_action"
      ],
      "mappings": ";;;;;QAIgBA,W,GAAAA,W;QAUAC,W,GAAAA,W;QAgBAC,e,GAAAA,e;QAUAC,gB,GAAAA,gB;;AAxChB;;;;;;AAEA,MAAM,EAAEC,8BAAF,KAAqCC,QAAQC,GAAnD;;AAEO,SAASN,WAAT,CAAqBO,WAArB,EAAkC;AACvC,SAAO,oCAAG;AACRC,SAAK,6CADG;AAERC,QAAI,EAAEC,cAAcN,8BAAhB,EAFI;AAGRO,YAAQ,MAHA;AAIRC,UAAML;AAJE,GAAH,EAMJM,KANI,CAMEC,OAAOC,QAAQC,KAAR,CAAcF,GAAd,CANT,CAAP;AAOD;;AAEM,SAASb,WAAT,CAAqBgB,IAArB,EAA2B;AAChC,SAAO,oCAAG;AACRT,SAAM,mCAAkCS,IAAK,EADrC;AAERR,QAAI;AACFS,cAAQ,kCADN;AAEFR,oBAAcN;AAFZ,KAFI;AAMRO,YAAQ;AANA,GAAH,EAQJE,KARI,CAQEC,OAAOC,QAAQC,KAAR,CAAcF,GAAd,CART,CAAP;AASD;;AAED;;;;AAIO,SAASZ,eAAT,CAAyBiB,QAAzB,EAAmCC,KAAnC,EAA0C;AAC/C,SAAOpB,YAAY;AACjBqB,eAAWD,MAAME,OAAN,CAAcC,MADR;AAEjBD,aAAS;AACPE,YAAML,SAASM,OADR;AAEPC,gBAAU;AAFH;AAFQ,GAAZ,CAAP;AAOD;;AAEM,SAASvB,gBAAT,CAA0B,EAAEmB,SAAS,EAAEC,MAAF,EAAX,EAA1B,EAAmDI,MAAnD,EAA2D;AAChE,SAAO3B,YAAY;AACjBqB,eAAWE,MADM;AAEjBK,mBAAgB,UAASD,SAAS,IAAT,GAAgB,KAAM;AAF9B,GAAZ,CAAP;AAID",
      "file": "api.js",
      "sourceRoot": "/app/bot/adapters/fbMessenger",
      "sourcesContent": [
        "import rp from 'request-promise-native';\n\nconst { FB_MESSENGER_PAGE_ACCESS_TOKEN } = process.env;\n\nexport function callSendAPI(messageData) {\n  return rp({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n  })\n    .catch(err => console.error(err));\n}\n\nexport function getPsidData(psid) {\n  return rp({\n    uri: `https://graph.facebook.com/v2.6/${psid}`,\n    qs: {\n      fields: 'first_name,last_name,profile_pic',\n      access_token: FB_MESSENGER_PAGE_ACCESS_TOKEN \n    },\n    method: 'GET',\n  })\n    .catch(err => console.error(err));\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nexport function sendTextMessage(response, input) {\n  return callSendAPI({\n    recipient: input.message.sender,\n    message: {\n      text: response.content,\n      metadata: 'DEVELOPER_DEFINED_METADATA'\n    }\n  });\n}\n\nexport function sendTypingStatus({ message: { sender } }, status) {\n  return callSendAPI({\n    recipient: sender,\n    sender_action: `typing_${status ? 'on' : 'off'}`\n  });\n}"
      ]
    },
    "mtime": 1524989951303
  }
}