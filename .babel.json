{
  "{\"filename\":\"/app/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./bot",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "wakeUpBot"
              }
            ]
          },
          {
            "source": "./servers",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getServers"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/app.js",
      "filenameRelative": "/app/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _bot = require('./bot');\n\nvar _bot2 = _interopRequireDefault(_bot);\n\nvar _servers = require('./servers');\n\nvar _servers2 = _interopRequireDefault(_servers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _servers2.default)().then(_bot2.default);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJ0aGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLHlCQUFhQSxJQUFiIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdha2VVcEJvdCBmcm9tICcuL2JvdCdcbmltcG9ydCBnZXRTZXJ2ZXJzIGZyb20gJy4vc2VydmVycydcblxuZ2V0U2VydmVycygpLnRoZW4od2FrZVVwQm90KVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "then"
      ],
      "mappings": ";;AAAA;;;;AACA;;;;;;AAEA,yBAAaA,IAAb",
      "file": "app.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import wakeUpBot from './bot'\nimport getServers from './servers'\n\ngetServers().then(wakeUpBot)\n"
      ]
    },
    "mtime": 1521132414248
  },
  "{\"filename\":\"/app/bot/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "rxjs/Rx",
            "imported": [
              "pipe"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "pipe",
                "local": "pipe"
              }
            ]
          },
          {
            "source": "rxjs/observable/of",
            "imported": [
              "of"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "of",
                "local": "of"
              }
            ]
          },
          {
            "source": "rxjs/observable/merge",
            "imported": [
              "merge"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "merge",
                "local": "merge"
              }
            ]
          },
          {
            "source": "rxjs/operators",
            "imported": [
              "filter",
              "map",
              "mergeAll",
              "catchError"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "filter",
                "local": "filter"
              },
              {
                "kind": "named",
                "imported": "map",
                "local": "map"
              },
              {
                "kind": "named",
                "imported": "mergeAll",
                "local": "mergeAll"
              },
              {
                "kind": "named",
                "imported": "catchError",
                "local": "catchError"
              }
            ]
          },
          {
            "source": "./filterMessages",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "filterMessages"
              }
            ]
          },
          {
            "source": "./impulses",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "attemptToTrigerImpulse"
              }
            ]
          },
          {
            "source": "./skills",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncAttemptSkillHAndling"
              }
            ]
          },
          {
            "source": "./nlp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "asyncProcessWithNlp"
              }
            ]
          },
          {
            "source": "./adapters/discordJs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getDiscordAdapter"
              }
            ]
          },
          {
            "source": "./skills/conversation",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "conversationToContext"
              }
            ]
          },
          {
            "source": "./contexts",
            "imported": [
              "contextFactory",
              "asyncUnwrapContext"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "contextFactory",
                "local": "contextFactory"
              },
              {
                "kind": "named",
                "imported": "asyncUnwrapContext",
                "local": "asyncUnwrapContext"
              }
            ]
          },
          {
            "source": "../servers/helpers/socketLogger",
            "imported": [
              "socketLogMiddleware"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "socketLogMiddleware",
                "local": "socketLogMiddleware"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/index.js",
      "filenameRelative": "/app/bot/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Rx = require('rxjs/Rx');\n\nvar _of = require('rxjs/observable/of');\n\nvar _merge = require('rxjs/observable/merge');\n\nvar _operators = require('rxjs/operators');\n\nvar _filterMessages = require('./filterMessages');\n\nvar _filterMessages2 = _interopRequireDefault(_filterMessages);\n\nvar _impulses = require('./impulses');\n\nvar _impulses2 = _interopRequireDefault(_impulses);\n\nvar _skills = require('./skills');\n\nvar _skills2 = _interopRequireDefault(_skills);\n\nvar _nlp = require('./nlp');\n\nvar _nlp2 = _interopRequireDefault(_nlp);\n\nvar _discordJs = require('./adapters/discordJs');\n\nvar _discordJs2 = _interopRequireDefault(_discordJs);\n\nvar _conversation = require('./skills/conversation');\n\nvar _conversation2 = _interopRequireDefault(_conversation);\n\nvar _contexts = require('./contexts');\n\nvar _socketLogger = require('../servers/helpers/socketLogger');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst token = process.env.DISCORD_BOT_TOKEN;\nconst game = {\n  type: 'PLAYING',\n  name: 'with your mind'\n};\n\nexports.default = async function (servers) {\n  const adapter = (0, _discordJs2.default)();\n  const { inputs$, reactions$, commands$ } = adapter;\n  const createMessageContext = (0, _contexts.contextFactory)((await servers), adapter);\n  const messagesPipeline = (0, _Rx.pipe)((0, _operators.filter)(i => i.type === 'incoming-message'), (0, _operators.map)(i => i.message), (0, _operators.map)(createMessageContext), (0, _operators.map)(_socketLogger.socketLogMiddleware), (0, _operators.map)(_impulses2.default),\n  // map(filterMessages),\n  (0, _operators.map)(_conversation2.default), (0, _operators.map)(_filterMessages2.default),\n  // Go async\n  (0, _operators.map)(_nlp2.default), (0, _operators.map)(_skills2.default), (0, _operators.map)(_contexts.asyncUnwrapContext),\n  // Now flatten\n  (0, _operators.mergeAll)(), (0, _operators.catchError)(error => (0, _of.of)({ type: 'error', error })));\n  const eventsPipeline = (0, _Rx.pipe)((0, _operators.filter)(i => i.type !== 'incoming-message'), (0, _operators.catchError)(error => (0, _of.of)({ type: 'error', error })));\n\n  (0, _merge.merge)(inputs$.let(messagesPipeline), inputs$.let(eventsPipeline)).subscribe(reactions$);\n\n  commands$.next({ type: 'connect', token });\n\n  return { inputs$, reactions$ };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRva2VuIiwicHJvY2VzcyIsImVudiIsIkRJU0NPUkRfQk9UX1RPS0VOIiwiZ2FtZSIsInR5cGUiLCJuYW1lIiwic2VydmVycyIsImFkYXB0ZXIiLCJpbnB1dHMkIiwicmVhY3Rpb25zJCIsImNvbW1hbmRzJCIsImNyZWF0ZU1lc3NhZ2VDb250ZXh0IiwibWVzc2FnZXNQaXBlbGluZSIsImkiLCJtZXNzYWdlIiwiZXJyb3IiLCJldmVudHNQaXBlbGluZSIsImxldCIsInN1YnNjcmliZSIsIm5leHQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOztBQUVBOzs7O0FBRUEsTUFBTUEsUUFBUUMsUUFBUUMsR0FBUixDQUFZQyxpQkFBMUI7QUFDQSxNQUFNQyxPQUFPO0FBQ1hDLFFBQU0sU0FESztBQUVYQyxRQUFNO0FBRkssQ0FBYjs7a0JBS2UsZ0JBQWVDLE9BQWYsRUFBd0I7QUFDckMsUUFBTUMsVUFBVSwwQkFBaEI7QUFDQSxRQUFNLEVBQUVDLE9BQUYsRUFBV0MsVUFBWCxFQUF1QkMsU0FBdkIsS0FBcUNILE9BQTNDO0FBQ0EsUUFBTUksdUJBQXVCLCtCQUFlLE1BQU1MLE9BQXJCLEdBQThCQyxPQUE5QixDQUE3QjtBQUNBLFFBQU1LLG1CQUFtQixjQUN2Qix1QkFBT0MsS0FBS0EsRUFBRVQsSUFBRixLQUFXLGtCQUF2QixDQUR1QixFQUV2QixvQkFBSVMsS0FBS0EsRUFBRUMsT0FBWCxDQUZ1QixFQUl2QixvQkFBSUgsb0JBQUosQ0FKdUIsRUFLdkIsc0RBTHVCLEVBTXZCLHVDQU51QjtBQU92QjtBQUNBLDZDQVJ1QixFQVN2Qiw2Q0FUdUI7QUFVdkI7QUFDQSxvQ0FYdUIsRUFZdkIscUNBWnVCLEVBYXZCLGlEQWJ1QjtBQWN2QjtBQUNBLDRCQWZ1QixFQWlCdkIsMkJBQVdJLFNBQVMsWUFBRyxFQUFFWCxNQUFNLE9BQVIsRUFBaUJXLEtBQWpCLEVBQUgsQ0FBcEIsQ0FqQnVCLENBQXpCO0FBbUJBLFFBQU1DLGlCQUFpQixjQUNyQix1QkFBT0gsS0FBS0EsRUFBRVQsSUFBRixLQUFXLGtCQUF2QixDQURxQixFQUVyQiwyQkFBV1csU0FBUyxZQUFHLEVBQUVYLE1BQU0sT0FBUixFQUFpQlcsS0FBakIsRUFBSCxDQUFwQixDQUZxQixDQUF2Qjs7QUFLQSxvQkFBTVAsUUFBUVMsR0FBUixDQUFZTCxnQkFBWixDQUFOLEVBQXFDSixRQUFRUyxHQUFSLENBQVlELGNBQVosQ0FBckMsRUFBa0VFLFNBQWxFLENBQ0VULFVBREY7O0FBSUFDLFlBQVVTLElBQVYsQ0FBZSxFQUFFZixNQUFNLFNBQVIsRUFBbUJMLEtBQW5CLEVBQWY7O0FBRUEsU0FBTyxFQUFFUyxPQUFGLEVBQVdDLFVBQVgsRUFBUDtBQUNELEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwaXBlIH0gZnJvbSAncnhqcy9SeCdcbmltcG9ydCB7IG9mIH0gZnJvbSAncnhqcy9vYnNlcnZhYmxlL29mJ1xuaW1wb3J0IHsgbWVyZ2UgfSBmcm9tICdyeGpzL29ic2VydmFibGUvbWVyZ2UnXG5pbXBvcnQgeyBmaWx0ZXIsIG1hcCwgbWVyZ2VBbGwsIGNhdGNoRXJyb3IgfSBmcm9tICdyeGpzL29wZXJhdG9ycydcblxuaW1wb3J0IGZpbHRlck1lc3NhZ2VzIGZyb20gJy4vZmlsdGVyTWVzc2FnZXMnXG5pbXBvcnQgYXR0ZW1wdFRvVHJpZ2VySW1wdWxzZSBmcm9tICcuL2ltcHVsc2VzJ1xuaW1wb3J0IGFzeW5jQXR0ZW1wdFNraWxsSEFuZGxpbmcgZnJvbSAnLi9za2lsbHMnXG5pbXBvcnQgYXN5bmNQcm9jZXNzV2l0aE5scCBmcm9tICcuL25scCdcbmltcG9ydCBnZXREaXNjb3JkQWRhcHRlciBmcm9tICcuL2FkYXB0ZXJzL2Rpc2NvcmRKcydcbmltcG9ydCBjb252ZXJzYXRpb25Ub0NvbnRleHQgZnJvbSAnLi9za2lsbHMvY29udmVyc2F0aW9uJ1xuaW1wb3J0IHsgY29udGV4dEZhY3RvcnksIGFzeW5jVW53cmFwQ29udGV4dCB9IGZyb20gJy4vY29udGV4dHMnXG5cbmltcG9ydCB7IHNvY2tldExvZ01pZGRsZXdhcmUgfSBmcm9tICcuLi9zZXJ2ZXJzL2hlbHBlcnMvc29ja2V0TG9nZ2VyJ1xuXG5jb25zdCB0b2tlbiA9IHByb2Nlc3MuZW52LkRJU0NPUkRfQk9UX1RPS0VOXG5jb25zdCBnYW1lID0ge1xuICB0eXBlOiAnUExBWUlORycsXG4gIG5hbWU6ICd3aXRoIHlvdXIgbWluZCcsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uKHNlcnZlcnMpIHtcbiAgY29uc3QgYWRhcHRlciA9IGdldERpc2NvcmRBZGFwdGVyKClcbiAgY29uc3QgeyBpbnB1dHMkLCByZWFjdGlvbnMkLCBjb21tYW5kcyQgfSA9IGFkYXB0ZXJcbiAgY29uc3QgY3JlYXRlTWVzc2FnZUNvbnRleHQgPSBjb250ZXh0RmFjdG9yeShhd2FpdCBzZXJ2ZXJzLCBhZGFwdGVyKVxuICBjb25zdCBtZXNzYWdlc1BpcGVsaW5lID0gcGlwZShcbiAgICBmaWx0ZXIoaSA9PiBpLnR5cGUgPT09ICdpbmNvbWluZy1tZXNzYWdlJyksXG4gICAgbWFwKGkgPT4gaS5tZXNzYWdlKSxcbiAgICBcbiAgICBtYXAoY3JlYXRlTWVzc2FnZUNvbnRleHQpLFxuICAgIG1hcChzb2NrZXRMb2dNaWRkbGV3YXJlKSxcbiAgICBtYXAoYXR0ZW1wdFRvVHJpZ2VySW1wdWxzZSksXG4gICAgLy8gbWFwKGZpbHRlck1lc3NhZ2VzKSxcbiAgICBtYXAoY29udmVyc2F0aW9uVG9Db250ZXh0KSxcbiAgICBtYXAoZmlsdGVyTWVzc2FnZXMpLFxuICAgIC8vIEdvIGFzeW5jXG4gICAgbWFwKGFzeW5jUHJvY2Vzc1dpdGhObHApLFxuICAgIG1hcChhc3luY0F0dGVtcHRTa2lsbEhBbmRsaW5nKSxcbiAgICBtYXAoYXN5bmNVbndyYXBDb250ZXh0KSxcbiAgICAvLyBOb3cgZmxhdHRlblxuICAgIG1lcmdlQWxsKCksXG4gICAgXG4gICAgY2F0Y2hFcnJvcihlcnJvciA9PiBvZih7IHR5cGU6ICdlcnJvcicsIGVycm9yIH0pKSxcbiAgKVxuICBjb25zdCBldmVudHNQaXBlbGluZSA9IHBpcGUoXG4gICAgZmlsdGVyKGkgPT4gaS50eXBlICE9PSAnaW5jb21pbmctbWVzc2FnZScpLFxuICAgIGNhdGNoRXJyb3IoZXJyb3IgPT4gb2YoeyB0eXBlOiAnZXJyb3InLCBlcnJvciB9KSksXG4gIClcblxuICBtZXJnZShpbnB1dHMkLmxldChtZXNzYWdlc1BpcGVsaW5lKSwgaW5wdXRzJC5sZXQoZXZlbnRzUGlwZWxpbmUpKS5zdWJzY3JpYmUoXG4gICAgcmVhY3Rpb25zJCxcbiAgKVxuXG4gIGNvbW1hbmRzJC5uZXh0KHsgdHlwZTogJ2Nvbm5lY3QnLCB0b2tlbiB9KVxuXG4gIHJldHVybiB7IGlucHV0cyQsIHJlYWN0aW9ucyQgfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "token",
        "process",
        "env",
        "DISCORD_BOT_TOKEN",
        "game",
        "type",
        "name",
        "servers",
        "adapter",
        "inputs$",
        "reactions$",
        "commands$",
        "createMessageContext",
        "messagesPipeline",
        "i",
        "message",
        "error",
        "eventsPipeline",
        "let",
        "subscribe",
        "next"
      ],
      "mappings": ";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AAEA,MAAMA,QAAQC,QAAQC,GAAR,CAAYC,iBAA1B;AACA,MAAMC,OAAO;AACXC,QAAM,SADK;AAEXC,QAAM;AAFK,CAAb;;kBAKe,gBAAeC,OAAf,EAAwB;AACrC,QAAMC,UAAU,0BAAhB;AACA,QAAM,EAAEC,OAAF,EAAWC,UAAX,EAAuBC,SAAvB,KAAqCH,OAA3C;AACA,QAAMI,uBAAuB,+BAAe,MAAML,OAArB,GAA8BC,OAA9B,CAA7B;AACA,QAAMK,mBAAmB,cACvB,uBAAOC,KAAKA,EAAET,IAAF,KAAW,kBAAvB,CADuB,EAEvB,oBAAIS,KAAKA,EAAEC,OAAX,CAFuB,EAIvB,oBAAIH,oBAAJ,CAJuB,EAKvB,sDALuB,EAMvB,uCANuB;AAOvB;AACA,6CARuB,EASvB,6CATuB;AAUvB;AACA,oCAXuB,EAYvB,qCAZuB,EAavB,iDAbuB;AAcvB;AACA,4BAfuB,EAiBvB,2BAAWI,SAAS,YAAG,EAAEX,MAAM,OAAR,EAAiBW,KAAjB,EAAH,CAApB,CAjBuB,CAAzB;AAmBA,QAAMC,iBAAiB,cACrB,uBAAOH,KAAKA,EAAET,IAAF,KAAW,kBAAvB,CADqB,EAErB,2BAAWW,SAAS,YAAG,EAAEX,MAAM,OAAR,EAAiBW,KAAjB,EAAH,CAApB,CAFqB,CAAvB;;AAKA,oBAAMP,QAAQS,GAAR,CAAYL,gBAAZ,CAAN,EAAqCJ,QAAQS,GAAR,CAAYD,cAAZ,CAArC,EAAkEE,SAAlE,CACET,UADF;;AAIAC,YAAUS,IAAV,CAAe,EAAEf,MAAM,SAAR,EAAmBL,KAAnB,EAAf;;AAEA,SAAO,EAAES,OAAF,EAAWC,UAAX,EAAP;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "import { pipe } from 'rxjs/Rx'\nimport { of } from 'rxjs/observable/of'\nimport { merge } from 'rxjs/observable/merge'\nimport { filter, map, mergeAll, catchError } from 'rxjs/operators'\n\nimport filterMessages from './filterMessages'\nimport attemptToTrigerImpulse from './impulses'\nimport asyncAttemptSkillHAndling from './skills'\nimport asyncProcessWithNlp from './nlp'\nimport getDiscordAdapter from './adapters/discordJs'\nimport conversationToContext from './skills/conversation'\nimport { contextFactory, asyncUnwrapContext } from './contexts'\n\nimport { socketLogMiddleware } from '../servers/helpers/socketLogger'\n\nconst token = process.env.DISCORD_BOT_TOKEN\nconst game = {\n  type: 'PLAYING',\n  name: 'with your mind',\n}\n\nexport default async function(servers) {\n  const adapter = getDiscordAdapter()\n  const { inputs$, reactions$, commands$ } = adapter\n  const createMessageContext = contextFactory(await servers, adapter)\n  const messagesPipeline = pipe(\n    filter(i => i.type === 'incoming-message'),\n    map(i => i.message),\n    \n    map(createMessageContext),\n    map(socketLogMiddleware),\n    map(attemptToTrigerImpulse),\n    // map(filterMessages),\n    map(conversationToContext),\n    map(filterMessages),\n    // Go async\n    map(asyncProcessWithNlp),\n    map(asyncAttemptSkillHAndling),\n    map(asyncUnwrapContext),\n    // Now flatten\n    mergeAll(),\n    \n    catchError(error => of({ type: 'error', error })),\n  )\n  const eventsPipeline = pipe(\n    filter(i => i.type !== 'incoming-message'),\n    catchError(error => of({ type: 'error', error })),\n  )\n\n  merge(inputs$.let(messagesPipeline), inputs$.let(eventsPipeline)).subscribe(\n    reactions$,\n  )\n\n  commands$.next({ type: 'connect', token })\n\n  return { inputs$, reactions$ }\n}\n"
      ]
    },
    "mtime": 1522487463201
  },
  "{\"filename\":\"/app/bot/filterMessages.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/filterMessages.js",
      "filenameRelative": "/app/bot/filterMessages.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "filterMessages.js",
      "sourceFileName": "filterMessages.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "filterMessages"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  if (ctx.handled) return ctx;\n  const { input, conversation } = ctx;\n\n  const activeConversation = Boolean(conversation && conversation.isActive);\n  const iWasMentioned = botNameRegExp.test(String(input.content).toLowerCase());\n\n  const shouldAttend = iWasMentioned || activeConversation;\n\n  const type = shouldAttend ? 'process-message' : 'ignore';\n\n  return _extends({}, ctx, { type, handled: !shouldAttend });\n};\n\nconst botNameRegExp = new RegExp(process.env.BOT_NAME_REGEXP || 'bot', 'i');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlck1lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbImN0eCIsImhhbmRsZWQiLCJpbnB1dCIsImNvbnZlcnNhdGlvbiIsImFjdGl2ZUNvbnZlcnNhdGlvbiIsIkJvb2xlYW4iLCJpc0FjdGl2ZSIsImlXYXNNZW50aW9uZWQiLCJib3ROYW1lUmVnRXhwIiwidGVzdCIsIlN0cmluZyIsImNvbnRlbnQiLCJ0b0xvd2VyQ2FzZSIsInNob3VsZEF0dGVuZCIsInR5cGUiLCJSZWdFeHAiLCJwcm9jZXNzIiwiZW52IiwiQk9UX05BTUVfUkVHRVhQIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztrQkFFZSxVQUFTQSxHQUFULEVBQWM7QUFDM0IsTUFBSUEsSUFBSUMsT0FBUixFQUFpQixPQUFPRCxHQUFQO0FBQ2pCLFFBQU0sRUFBRUUsS0FBRixFQUFTQyxZQUFULEtBQTBCSCxHQUFoQzs7QUFFQSxRQUFNSSxxQkFBcUJDLFFBQVFGLGdCQUFnQkEsYUFBYUcsUUFBckMsQ0FBM0I7QUFDQSxRQUFNQyxnQkFBZ0JDLGNBQWNDLElBQWQsQ0FBbUJDLE9BQU9SLE1BQU1TLE9BQWIsRUFBc0JDLFdBQXRCLEVBQW5CLENBQXRCOztBQUVBLFFBQU1DLGVBQWVOLGlCQUFpQkgsa0JBQXRDOztBQUVBLFFBQU1VLE9BQU9ELGVBQWUsaUJBQWYsR0FBbUMsUUFBaEQ7O0FBRUEsc0JBQVliLEdBQVosSUFBaUJjLElBQWpCLEVBQXVCYixTQUFTLENBQUNZLFlBQWpDO0FBQ0QsQzs7QUFkRCxNQUFNTCxnQkFBZ0IsSUFBSU8sTUFBSixDQUFXQyxRQUFRQyxHQUFSLENBQVlDLGVBQVosSUFBK0IsS0FBMUMsRUFBaUQsR0FBakQsQ0FBdEIiLCJmaWxlIjoiZmlsdGVyTWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBib3ROYW1lUmVnRXhwID0gbmV3IFJlZ0V4cChwcm9jZXNzLmVudi5CT1RfTkFNRV9SRUdFWFAgfHwgJ2JvdCcsICdpJylcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY3R4KSB7XG4gIGlmIChjdHguaGFuZGxlZCkgcmV0dXJuIGN0eFxuICBjb25zdCB7IGlucHV0LCBjb252ZXJzYXRpb24gfSA9IGN0eFxuXG4gIGNvbnN0IGFjdGl2ZUNvbnZlcnNhdGlvbiA9IEJvb2xlYW4oY29udmVyc2F0aW9uICYmIGNvbnZlcnNhdGlvbi5pc0FjdGl2ZSlcbiAgY29uc3QgaVdhc01lbnRpb25lZCA9IGJvdE5hbWVSZWdFeHAudGVzdChTdHJpbmcoaW5wdXQuY29udGVudCkudG9Mb3dlckNhc2UoKSlcbiAgXG4gIGNvbnN0IHNob3VsZEF0dGVuZCA9IGlXYXNNZW50aW9uZWQgfHwgYWN0aXZlQ29udmVyc2F0aW9uXG5cbiAgY29uc3QgdHlwZSA9IHNob3VsZEF0dGVuZCA/ICdwcm9jZXNzLW1lc3NhZ2UnIDogJ2lnbm9yZSdcblxuICByZXR1cm4geyAuLi5jdHgsIHR5cGUsIGhhbmRsZWQ6ICFzaG91bGRBdHRlbmQgfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "filterMessages.js"
      ],
      "names": [
        "ctx",
        "handled",
        "input",
        "conversation",
        "activeConversation",
        "Boolean",
        "isActive",
        "iWasMentioned",
        "botNameRegExp",
        "test",
        "String",
        "content",
        "toLowerCase",
        "shouldAttend",
        "type",
        "RegExp",
        "process",
        "env",
        "BOT_NAME_REGEXP"
      ],
      "mappings": ";;;;;;;;kBAEe,UAASA,GAAT,EAAc;AAC3B,MAAIA,IAAIC,OAAR,EAAiB,OAAOD,GAAP;AACjB,QAAM,EAAEE,KAAF,EAASC,YAAT,KAA0BH,GAAhC;;AAEA,QAAMI,qBAAqBC,QAAQF,gBAAgBA,aAAaG,QAArC,CAA3B;AACA,QAAMC,gBAAgBC,cAAcC,IAAd,CAAmBC,OAAOR,MAAMS,OAAb,EAAsBC,WAAtB,EAAnB,CAAtB;;AAEA,QAAMC,eAAeN,iBAAiBH,kBAAtC;;AAEA,QAAMU,OAAOD,eAAe,iBAAf,GAAmC,QAAhD;;AAEA,sBAAYb,GAAZ,IAAiBc,IAAjB,EAAuBb,SAAS,CAACY,YAAjC;AACD,C;;AAdD,MAAML,gBAAgB,IAAIO,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,eAAZ,IAA+B,KAA1C,EAAiD,GAAjD,CAAtB",
      "file": "filterMessages.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "const botNameRegExp = new RegExp(process.env.BOT_NAME_REGEXP || 'bot', 'i')\n\nexport default function(ctx) {\n  if (ctx.handled) return ctx\n  const { input, conversation } = ctx\n\n  const activeConversation = Boolean(conversation && conversation.isActive)\n  const iWasMentioned = botNameRegExp.test(String(input.content).toLowerCase())\n  \n  const shouldAttend = iWasMentioned || activeConversation\n\n  const type = shouldAttend ? 'process-message' : 'ignore'\n\n  return { ...ctx, type, handled: !shouldAttend }\n}\n"
      ]
    },
    "mtime": 1522470067870
  },
  "{\"filename\":\"/app/bot/impulses/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/impulses\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./staticReplies",
            "imported": [
              "checkForStaticReply",
              "getStaticReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "checkForStaticReply",
                "local": "checkForStaticReply"
              },
              {
                "kind": "named",
                "imported": "getStaticReply",
                "local": "getStaticReply"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/impulses/index.js",
      "filenameRelative": "/app/bot/impulses/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/impulses",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/impulses",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  if (ctx.handled) return ctx;\n  const { content } = ctx.message;\n  const iHaveAnImpulseReply = (0, _staticReplies.checkForStaticReply)(content);\n  const reaction = iHaveAnImpulseReply ? (0, _staticReplies.getStaticReply)(content) : ctx.reaction;\n  return _extends({}, ctx, { handled: iHaveAnImpulseReply, reaction });\n};\n\nvar _staticReplies = require('./staticReplies');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsImhhbmRsZWQiLCJjb250ZW50IiwibWVzc2FnZSIsImlIYXZlQW5JbXB1bHNlUmVwbHkiLCJyZWFjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBRWUsVUFBU0EsR0FBVCxFQUFjO0FBQzNCLE1BQUlBLElBQUlDLE9BQVIsRUFBaUIsT0FBT0QsR0FBUDtBQUNqQixRQUFNLEVBQUVFLE9BQUYsS0FBY0YsSUFBSUcsT0FBeEI7QUFDQSxRQUFNQyxzQkFBc0Isd0NBQW9CRixPQUFwQixDQUE1QjtBQUNBLFFBQU1HLFdBQVdELHNCQUFzQixtQ0FBZUYsT0FBZixDQUF0QixHQUFnREYsSUFBSUssUUFBckU7QUFDQSxzQkFBWUwsR0FBWixJQUFpQkMsU0FBU0csbUJBQTFCLEVBQStDQyxRQUEvQztBQUNELEM7O0FBUkQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3QvaW1wdWxzZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGVja0ZvclN0YXRpY1JlcGx5LCBnZXRTdGF0aWNSZXBseSB9IGZyb20gJy4vc3RhdGljUmVwbGllcydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY3R4KSB7XG4gIGlmIChjdHguaGFuZGxlZCkgcmV0dXJuIGN0eFxuICBjb25zdCB7IGNvbnRlbnQgfSA9IGN0eC5tZXNzYWdlXG4gIGNvbnN0IGlIYXZlQW5JbXB1bHNlUmVwbHkgPSBjaGVja0ZvclN0YXRpY1JlcGx5KGNvbnRlbnQpXG4gIGNvbnN0IHJlYWN0aW9uID0gaUhhdmVBbkltcHVsc2VSZXBseSA/IGdldFN0YXRpY1JlcGx5KGNvbnRlbnQpIDogY3R4LnJlYWN0aW9uXG4gIHJldHVybiB7IC4uLmN0eCwgaGFuZGxlZDogaUhhdmVBbkltcHVsc2VSZXBseSwgcmVhY3Rpb24gfVxufVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "handled",
        "content",
        "message",
        "iHaveAnImpulseReply",
        "reaction"
      ],
      "mappings": ";;;;;;;;kBAEe,UAASA,GAAT,EAAc;AAC3B,MAAIA,IAAIC,OAAR,EAAiB,OAAOD,GAAP;AACjB,QAAM,EAAEE,OAAF,KAAcF,IAAIG,OAAxB;AACA,QAAMC,sBAAsB,wCAAoBF,OAApB,CAA5B;AACA,QAAMG,WAAWD,sBAAsB,mCAAeF,OAAf,CAAtB,GAAgDF,IAAIK,QAArE;AACA,sBAAYL,GAAZ,IAAiBC,SAASG,mBAA1B,EAA+CC,QAA/C;AACD,C;;AARD",
      "file": "index.js",
      "sourceRoot": "/app/bot/impulses",
      "sourcesContent": [
        "import { checkForStaticReply, getStaticReply } from './staticReplies'\n\nexport default function(ctx) {\n  if (ctx.handled) return ctx\n  const { content } = ctx.message\n  const iHaveAnImpulseReply = checkForStaticReply(content)\n  const reaction = iHaveAnImpulseReply ? getStaticReply(content) : ctx.reaction\n  return { ...ctx, handled: iHaveAnImpulseReply, reaction }\n}\n"
      ]
    },
    "mtime": 1522458958357
  },
  "{\"filename\":\"/app/bot/impulses/staticReplies.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/impulses\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault",
        "interopRequireWildcard"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../actions",
            "imported": [
              "basicTextReply",
              "basicEmbedReply",
              "randomBasicFromArray"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              },
              {
                "kind": "named",
                "imported": "basicEmbedReply",
                "local": "basicEmbedReply"
              },
              {
                "kind": "named",
                "imported": "randomBasicFromArray",
                "local": "pickFrom"
              }
            ]
          },
          {
            "source": "./data/replyDb.json",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "replyStock"
              }
            ]
          },
          {
            "source": "./data/embedBase.json",
            "imported": [
              "*"
            ],
            "specifiers": [
              {
                "kind": "namespace",
                "local": "embed"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "checkForStaticReply",
            "getStaticReply"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "checkForStaticReply",
              "exported": "checkForStaticReply"
            },
            {
              "kind": "local",
              "local": "getStaticReply",
              "exported": "getStaticReply"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/impulses/staticReplies.js",
      "filenameRelative": "/app/bot/impulses/staticReplies.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "staticReplies.js",
      "sourceFileName": "staticReplies.js",
      "sourceRoot": "/app/bot/impulses",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/impulses",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "staticReplies"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStaticReply = exports.checkForStaticReply = undefined;\n\nvar _actions = require('../actions');\n\nvar _replyDb = require('./data/replyDb.json');\n\nvar _replyDb2 = _interopRequireDefault(_replyDb);\n\nvar _embedBase = require('./data/embedBase.json');\n\nvar embed = _interopRequireWildcard(_embedBase);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst xToLower = x => String(x).toLowerCase(); // Esta funcion convierte nuestro texto en un objeto con nuestra respuesta y otros\n// datos utiles\n\nconst replies = new Map(_replyDb2.default);\n\nconst replyThis = _actions.basicTextReply;\n\nconst checkForStaticReply = exports.checkForStaticReply = content => replies.has(xToLower(content));\n\n// Esta es la funcion que exportamos y se lee mas o menos asi:\n// Si el 'content' es igual a 'ping' entonces respondeEsto('pong')\n// fijate que solo la primera linea despues del 'export' no tiene\n// los dos puntos ' : ', cuando agregues mas lineas no olvides respetar esto.\nconst getStaticReply = exports.getStaticReply = content => {\n  const reply = replies.get(xToLower(content));\n  return reply && Array.isArray(reply) ? (0, _actions.randomBasicFromArray)(reply) : replyThis(reply);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpY1JlcGxpZXMuanMiXSwibmFtZXMiOlsiZW1iZWQiLCJ4VG9Mb3dlciIsIngiLCJTdHJpbmciLCJ0b0xvd2VyQ2FzZSIsInJlcGxpZXMiLCJNYXAiLCJyZXBseVRoaXMiLCJjaGVja0ZvclN0YXRpY1JlcGx5IiwiY29udGVudCIsImhhcyIsImdldFN0YXRpY1JlcGx5IiwicmVwbHkiLCJnZXQiLCJBcnJheSIsImlzQXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTs7QUFNQTs7OztBQUNBOztJQUFZQSxLOzs7Ozs7QUFFWixNQUFNQyxXQUFXQyxLQUFLQyxPQUFPRCxDQUFQLEVBQVVFLFdBQVYsRUFBdEIsQyxDQVhBO0FBQ0E7O0FBV0EsTUFBTUMsVUFBVSxJQUFJQyxHQUFKLG1CQUFoQjs7QUFFQSxNQUFNQyxtQ0FBTjs7QUFFTyxNQUFNQyxvREFBc0JDLFdBQVdKLFFBQVFLLEdBQVIsQ0FBWVQsU0FBU1EsT0FBVCxDQUFaLENBQXZDOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sTUFBTUUsMENBQWlCRixXQUFXO0FBQ3ZDLFFBQU1HLFFBQVFQLFFBQVFRLEdBQVIsQ0FBWVosU0FBU1EsT0FBVCxDQUFaLENBQWQ7QUFDQSxTQUFPRyxTQUFTRSxNQUFNQyxPQUFOLENBQWNILEtBQWQsQ0FBVCxHQUFnQyxtQ0FBU0EsS0FBVCxDQUFoQyxHQUFrREwsVUFBVUssS0FBVixDQUF6RDtBQUNELENBSE0iLCJmaWxlIjoic3RhdGljUmVwbGllcy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9pbXB1bHNlcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEVzdGEgZnVuY2lvbiBjb252aWVydGUgbnVlc3RybyB0ZXh0byBlbiB1biBvYmpldG8gY29uIG51ZXN0cmEgcmVzcHVlc3RhIHkgb3Ryb3Ncbi8vIGRhdG9zIHV0aWxlc1xuaW1wb3J0IHtcbiAgYmFzaWNUZXh0UmVwbHksXG4gIGJhc2ljRW1iZWRSZXBseSxcbiAgcmFuZG9tQmFzaWNGcm9tQXJyYXkgYXMgcGlja0Zyb20sXG59IGZyb20gJy4uL2FjdGlvbnMnXG5cbmltcG9ydCByZXBseVN0b2NrIGZyb20gJy4vZGF0YS9yZXBseURiLmpzb24nXG5pbXBvcnQgKiBhcyBlbWJlZCBmcm9tICcuL2RhdGEvZW1iZWRCYXNlLmpzb24nXG5cbmNvbnN0IHhUb0xvd2VyID0geCA9PiBTdHJpbmcoeCkudG9Mb3dlckNhc2UoKVxuY29uc3QgcmVwbGllcyA9IG5ldyBNYXAocmVwbHlTdG9jaylcblxuY29uc3QgcmVwbHlUaGlzID0gYmFzaWNUZXh0UmVwbHlcblxuZXhwb3J0IGNvbnN0IGNoZWNrRm9yU3RhdGljUmVwbHkgPSBjb250ZW50ID0+IHJlcGxpZXMuaGFzKHhUb0xvd2VyKGNvbnRlbnQpKVxuXG4vLyBFc3RhIGVzIGxhIGZ1bmNpb24gcXVlIGV4cG9ydGFtb3MgeSBzZSBsZWUgbWFzIG8gbWVub3MgYXNpOlxuLy8gU2kgZWwgJ2NvbnRlbnQnIGVzIGlndWFsIGEgJ3BpbmcnIGVudG9uY2VzIHJlc3BvbmRlRXN0bygncG9uZycpXG4vLyBmaWphdGUgcXVlIHNvbG8gbGEgcHJpbWVyYSBsaW5lYSBkZXNwdWVzIGRlbCAnZXhwb3J0JyBubyB0aWVuZVxuLy8gbG9zIGRvcyBwdW50b3MgJyA6ICcsIGN1YW5kbyBhZ3JlZ3VlcyBtYXMgbGluZWFzIG5vIG9sdmlkZXMgcmVzcGV0YXIgZXN0by5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNSZXBseSA9IGNvbnRlbnQgPT4ge1xuICBjb25zdCByZXBseSA9IHJlcGxpZXMuZ2V0KHhUb0xvd2VyKGNvbnRlbnQpKVxuICByZXR1cm4gcmVwbHkgJiYgQXJyYXkuaXNBcnJheShyZXBseSkgPyBwaWNrRnJvbShyZXBseSkgOiByZXBseVRoaXMocmVwbHkpXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "staticReplies.js"
      ],
      "names": [
        "embed",
        "xToLower",
        "x",
        "String",
        "toLowerCase",
        "replies",
        "Map",
        "replyThis",
        "checkForStaticReply",
        "content",
        "has",
        "getStaticReply",
        "reply",
        "get",
        "Array",
        "isArray"
      ],
      "mappings": ";;;;;;;AAEA;;AAMA;;;;AACA;;IAAYA,K;;;;;;AAEZ,MAAMC,WAAWC,KAAKC,OAAOD,CAAP,EAAUE,WAAV,EAAtB,C,CAXA;AACA;;AAWA,MAAMC,UAAU,IAAIC,GAAJ,mBAAhB;;AAEA,MAAMC,mCAAN;;AAEO,MAAMC,oDAAsBC,WAAWJ,QAAQK,GAAR,CAAYT,SAASQ,OAAT,CAAZ,CAAvC;;AAEP;AACA;AACA;AACA;AACO,MAAME,0CAAiBF,WAAW;AACvC,QAAMG,QAAQP,QAAQQ,GAAR,CAAYZ,SAASQ,OAAT,CAAZ,CAAd;AACA,SAAOG,SAASE,MAAMC,OAAN,CAAcH,KAAd,CAAT,GAAgC,mCAASA,KAAT,CAAhC,GAAkDL,UAAUK,KAAV,CAAzD;AACD,CAHM",
      "file": "staticReplies.js",
      "sourceRoot": "/app/bot/impulses",
      "sourcesContent": [
        "// Esta funcion convierte nuestro texto en un objeto con nuestra respuesta y otros\n// datos utiles\nimport {\n  basicTextReply,\n  basicEmbedReply,\n  randomBasicFromArray as pickFrom,\n} from '../actions'\n\nimport replyStock from './data/replyDb.json'\nimport * as embed from './data/embedBase.json'\n\nconst xToLower = x => String(x).toLowerCase()\nconst replies = new Map(replyStock)\n\nconst replyThis = basicTextReply\n\nexport const checkForStaticReply = content => replies.has(xToLower(content))\n\n// Esta es la funcion que exportamos y se lee mas o menos asi:\n// Si el 'content' es igual a 'ping' entonces respondeEsto('pong')\n// fijate que solo la primera linea despues del 'export' no tiene\n// los dos puntos ' : ', cuando agregues mas lineas no olvides respetar esto.\nexport const getStaticReply = content => {\n  const reply = replies.get(xToLower(content))\n  return reply && Array.isArray(reply) ? pickFrom(reply) : replyThis(reply)\n}\n"
      ]
    },
    "mtime": 1522460644139
  },
  "{\"filename\":\"/app/bot/actions.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "basicTextReply",
            "basicEmbedReply",
            "basicRichContentReply",
            "randomBasicFromArray"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "basicTextReply",
              "exported": "basicTextReply"
            },
            {
              "kind": "local",
              "local": "basicEmbedReply",
              "exported": "basicEmbedReply"
            },
            {
              "kind": "local",
              "local": "basicRichContentReply",
              "exported": "basicRichContentReply"
            },
            {
              "kind": "local",
              "local": "randomBasicFromArray",
              "exported": "randomBasicFromArray"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/actions.js",
      "filenameRelative": "/app/bot/actions.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "actions.js",
      "sourceFileName": "actions.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "actions"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst basicTextReply = exports.basicTextReply = text => ({\n  type: text && text !== '' ? 'message-reply' : 'ignore',\n  message: { contentType: 'text', content: text }\n});\n\nconst basicEmbedReply = exports.basicEmbedReply = embed => ({\n  type: embed ? 'message-reply' : 'ignore',\n  message: { contentType: 'embed', content: embed }\n});\n\nconst basicRichContentReply = exports.basicRichContentReply = content => ({\n  type: content ? 'message-reply' : 'ignore',\n  message: { contentType: 'rich-content', content }\n});\n\nconst randomBasicFromArray = exports.randomBasicFromArray = replies => basicTextReply(replies[Math.floor(Math.random() * replies.length)]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsiYmFzaWNUZXh0UmVwbHkiLCJ0ZXh0IiwidHlwZSIsIm1lc3NhZ2UiLCJjb250ZW50VHlwZSIsImNvbnRlbnQiLCJiYXNpY0VtYmVkUmVwbHkiLCJlbWJlZCIsImJhc2ljUmljaENvbnRlbnRSZXBseSIsInJhbmRvbUJhc2ljRnJvbUFycmF5IiwicmVwbGllcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSwwQ0FBaUJDLFNBQVM7QUFDckNDLFFBQU1ELFFBQVFBLFNBQVMsRUFBakIsR0FBc0IsZUFBdEIsR0FBd0MsUUFEVDtBQUVyQ0UsV0FBUyxFQUFFQyxhQUFhLE1BQWYsRUFBdUJDLFNBQVNKLElBQWhDO0FBRjRCLENBQVQsQ0FBdkI7O0FBS0EsTUFBTUssNENBQWtCQyxVQUFVO0FBQ3ZDTCxRQUFNSyxRQUFRLGVBQVIsR0FBMEIsUUFETztBQUV2Q0osV0FBUyxFQUFFQyxhQUFhLE9BQWYsRUFBd0JDLFNBQVNFLEtBQWpDO0FBRjhCLENBQVYsQ0FBeEI7O0FBS0EsTUFBTUMsd0RBQXdCSCxZQUFZO0FBQy9DSCxRQUFNRyxVQUFVLGVBQVYsR0FBNEIsUUFEYTtBQUUvQ0YsV0FBUyxFQUFFQyxhQUFhLGNBQWYsRUFBK0JDLE9BQS9CO0FBRnNDLENBQVosQ0FBOUI7O0FBS0EsTUFBTUksc0RBQXVCQyxXQUNsQ1YsZUFBZVUsUUFBUUMsS0FBS0MsS0FBTCxDQUFXRCxLQUFLRSxNQUFMLEtBQWdCSCxRQUFRSSxNQUFuQyxDQUFSLENBQWYsQ0FESyIsImZpbGUiOiJhY3Rpb25zLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90Iiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGJhc2ljVGV4dFJlcGx5ID0gdGV4dCA9PiAoe1xuICB0eXBlOiB0ZXh0ICYmIHRleHQgIT09ICcnID8gJ21lc3NhZ2UtcmVwbHknIDogJ2lnbm9yZScsXG4gIG1lc3NhZ2U6IHsgY29udGVudFR5cGU6ICd0ZXh0JywgY29udGVudDogdGV4dCB9LFxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2ljRW1iZWRSZXBseSA9IGVtYmVkID0+ICh7XG4gIHR5cGU6IGVtYmVkID8gJ21lc3NhZ2UtcmVwbHknIDogJ2lnbm9yZScsXG4gIG1lc3NhZ2U6IHsgY29udGVudFR5cGU6ICdlbWJlZCcsIGNvbnRlbnQ6IGVtYmVkIH0sXG59KVxuXG5leHBvcnQgY29uc3QgYmFzaWNSaWNoQ29udGVudFJlcGx5ID0gY29udGVudCA9PiAoe1xuICB0eXBlOiBjb250ZW50ID8gJ21lc3NhZ2UtcmVwbHknIDogJ2lnbm9yZScsXG4gIG1lc3NhZ2U6IHsgY29udGVudFR5cGU6ICdyaWNoLWNvbnRlbnQnLCBjb250ZW50IH0sXG59KVxuXG5leHBvcnQgY29uc3QgcmFuZG9tQmFzaWNGcm9tQXJyYXkgPSByZXBsaWVzID0+XG4gIGJhc2ljVGV4dFJlcGx5KHJlcGxpZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmVwbGllcy5sZW5ndGgpXSlcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "actions.js"
      ],
      "names": [
        "basicTextReply",
        "text",
        "type",
        "message",
        "contentType",
        "content",
        "basicEmbedReply",
        "embed",
        "basicRichContentReply",
        "randomBasicFromArray",
        "replies",
        "Math",
        "floor",
        "random",
        "length"
      ],
      "mappings": ";;;;;AAAO,MAAMA,0CAAiBC,SAAS;AACrCC,QAAMD,QAAQA,SAAS,EAAjB,GAAsB,eAAtB,GAAwC,QADT;AAErCE,WAAS,EAAEC,aAAa,MAAf,EAAuBC,SAASJ,IAAhC;AAF4B,CAAT,CAAvB;;AAKA,MAAMK,4CAAkBC,UAAU;AACvCL,QAAMK,QAAQ,eAAR,GAA0B,QADO;AAEvCJ,WAAS,EAAEC,aAAa,OAAf,EAAwBC,SAASE,KAAjC;AAF8B,CAAV,CAAxB;;AAKA,MAAMC,wDAAwBH,YAAY;AAC/CH,QAAMG,UAAU,eAAV,GAA4B,QADa;AAE/CF,WAAS,EAAEC,aAAa,cAAf,EAA+BC,OAA/B;AAFsC,CAAZ,CAA9B;;AAKA,MAAMI,sDAAuBC,WAClCV,eAAeU,QAAQC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,QAAQI,MAAnC,CAAR,CAAf,CADK",
      "file": "actions.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "export const basicTextReply = text => ({\n  type: text && text !== '' ? 'message-reply' : 'ignore',\n  message: { contentType: 'text', content: text },\n})\n\nexport const basicEmbedReply = embed => ({\n  type: embed ? 'message-reply' : 'ignore',\n  message: { contentType: 'embed', content: embed },\n})\n\nexport const basicRichContentReply = content => ({\n  type: content ? 'message-reply' : 'ignore',\n  message: { contentType: 'rich-content', content },\n})\n\nexport const randomBasicFromArray = replies =>\n  basicTextReply(replies[Math.floor(Math.random() * replies.length)])\n"
      ]
    },
    "mtime": 1522487317899
  },
  "{\"filename\":\"/app/bot/skills/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./lolstats",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "lolstats"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/index.js",
      "filenameRelative": "/app/bot/skills/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _lolstats = require('./lolstats');\n\nvar _lolstats2 = _interopRequireDefault(_lolstats);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst skillset = {\n  lolstats: _lolstats2.default\n};\n\nconst skillFinder = intent => {\n  const [namespace, skill] = intent.split('.');\n  const domain = skillset[namespace];\n  return typeof domain === 'object' ? domain[skill] : void 0;\n};\n\nexports.default = async function (ctx) {\n  const { nlp, handled } = await ctx;\n  if (handled) return ctx;\n  console.log(ctx);\n  const { intent } = nlp;\n  const skill = intent && intent !== '' && skillFinder(intent);\n\n  return skill ? _extends({}, ctx, { reaction: await skill(ctx) }) : ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNraWxsc2V0IiwibG9sc3RhdHMiLCJza2lsbEZpbmRlciIsImludGVudCIsIm5hbWVzcGFjZSIsInNraWxsIiwic3BsaXQiLCJkb21haW4iLCJjdHgiLCJubHAiLCJoYW5kbGVkIiwiY29uc29sZSIsImxvZyIsInJlYWN0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7QUFFQSxNQUFNQSxXQUFXO0FBQ2ZDO0FBRGUsQ0FBakI7O0FBSUEsTUFBTUMsY0FBY0MsVUFBVTtBQUM1QixRQUFNLENBQUNDLFNBQUQsRUFBWUMsS0FBWixJQUFxQkYsT0FBT0csS0FBUCxDQUFhLEdBQWIsQ0FBM0I7QUFDQSxRQUFNQyxTQUFTUCxTQUFTSSxTQUFULENBQWY7QUFDQSxTQUFPLE9BQU9HLE1BQVAsS0FBa0IsUUFBbEIsR0FBNkJBLE9BQU9GLEtBQVAsQ0FBN0IsR0FBNkMsS0FBSyxDQUF6RDtBQUNELENBSkQ7O2tCQU1lLGdCQUFlRyxHQUFmLEVBQW9CO0FBQ2pDLFFBQU0sRUFBRUMsR0FBRixFQUFPQyxPQUFQLEtBQW1CLE1BQU1GLEdBQS9CO0FBQ0EsTUFBSUUsT0FBSixFQUFhLE9BQU9GLEdBQVA7QUFDYkcsVUFBUUMsR0FBUixDQUFZSixHQUFaO0FBQ0EsUUFBTSxFQUFFTCxNQUFGLEtBQWFNLEdBQW5CO0FBQ0EsUUFBTUosUUFBUUYsVUFBVUEsV0FBVyxFQUFyQixJQUEyQkQsWUFBWUMsTUFBWixDQUF6Qzs7QUFFQSxTQUFPRSxxQkFBYUcsR0FBYixJQUFrQkssVUFBVSxNQUFNUixNQUFNRyxHQUFOLENBQWxDLE1BQWlEQSxHQUF4RDtBQUNELEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxvbHN0YXRzIGZyb20gJy4vbG9sc3RhdHMnXG5cbmNvbnN0IHNraWxsc2V0ID0ge1xuICBsb2xzdGF0cyxcbn1cblxuY29uc3Qgc2tpbGxGaW5kZXIgPSBpbnRlbnQgPT4ge1xuICBjb25zdCBbbmFtZXNwYWNlLCBza2lsbF0gPSBpbnRlbnQuc3BsaXQoJy4nKVxuICBjb25zdCBkb21haW4gPSBza2lsbHNldFtuYW1lc3BhY2VdXG4gIHJldHVybiB0eXBlb2YgZG9tYWluID09PSAnb2JqZWN0JyA/IGRvbWFpbltza2lsbF0gOiB2b2lkIDBcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24oY3R4KSB7XG4gIGNvbnN0IHsgbmxwLCBoYW5kbGVkIH0gPSBhd2FpdCBjdHhcbiAgaWYgKGhhbmRsZWQpIHJldHVybiBjdHhcbiAgY29uc29sZS5sb2coY3R4KVxuICBjb25zdCB7IGludGVudCB9ID0gbmxwXG4gIGNvbnN0IHNraWxsID0gaW50ZW50ICYmIGludGVudCAhPT0gJycgJiYgc2tpbGxGaW5kZXIoaW50ZW50KVxuXG4gIHJldHVybiBza2lsbCA/IHsgLi4uY3R4LCByZWFjdGlvbjogYXdhaXQgc2tpbGwoY3R4KSB9IDogY3R4XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "skillset",
        "lolstats",
        "skillFinder",
        "intent",
        "namespace",
        "skill",
        "split",
        "domain",
        "ctx",
        "nlp",
        "handled",
        "console",
        "log",
        "reaction"
      ],
      "mappings": ";;;;;;;;AAAA;;;;;;AAEA,MAAMA,WAAW;AACfC;AADe,CAAjB;;AAIA,MAAMC,cAAcC,UAAU;AAC5B,QAAM,CAACC,SAAD,EAAYC,KAAZ,IAAqBF,OAAOG,KAAP,CAAa,GAAb,CAA3B;AACA,QAAMC,SAASP,SAASI,SAAT,CAAf;AACA,SAAO,OAAOG,MAAP,KAAkB,QAAlB,GAA6BA,OAAOF,KAAP,CAA7B,GAA6C,KAAK,CAAzD;AACD,CAJD;;kBAMe,gBAAeG,GAAf,EAAoB;AACjC,QAAM,EAAEC,GAAF,EAAOC,OAAP,KAAmB,MAAMF,GAA/B;AACA,MAAIE,OAAJ,EAAa,OAAOF,GAAP;AACbG,UAAQC,GAAR,CAAYJ,GAAZ;AACA,QAAM,EAAEL,MAAF,KAAaM,GAAnB;AACA,QAAMJ,QAAQF,UAAUA,WAAW,EAArB,IAA2BD,YAAYC,MAAZ,CAAzC;;AAEA,SAAOE,qBAAaG,GAAb,IAAkBK,UAAU,MAAMR,MAAMG,GAAN,CAAlC,MAAiDA,GAAxD;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills",
      "sourcesContent": [
        "import lolstats from './lolstats'\n\nconst skillset = {\n  lolstats,\n}\n\nconst skillFinder = intent => {\n  const [namespace, skill] = intent.split('.')\n  const domain = skillset[namespace]\n  return typeof domain === 'object' ? domain[skill] : void 0\n}\n\nexport default async function(ctx) {\n  const { nlp, handled } = await ctx\n  if (handled) return ctx\n  console.log(ctx)\n  const { intent } = nlp\n  const skill = intent && intent !== '' && skillFinder(intent)\n\n  return skill ? { ...ctx, reaction: await skill(ctx) } : ctx\n}\n"
      ]
    },
    "mtime": 1522461902904
  },
  "{\"filename\":\"/app/bot/skills/lolstats/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./buildHelp",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "buildHelp"
              }
            ]
          },
          {
            "source": "./rememberMySummoner",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "rememberMySummoner"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/index.js",
      "filenameRelative": "/app/bot/skills/lolstats/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _buildHelp = require('./buildHelp');\n\nvar _buildHelp2 = _interopRequireDefault(_buildHelp);\n\nvar _rememberMySummoner = require('./rememberMySummoner');\n\nvar _rememberMySummoner2 = _interopRequireDefault(_rememberMySummoner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  buildHelp: _buildHelp2.default,\n  rememberMySummoner: _rememberMySummoner2.default\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJ1aWxkSGVscCIsInJlbWVtYmVyTXlTdW1tb25lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O2tCQUVlO0FBQ2JBLGdDQURhO0FBRWJDO0FBRmEsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9za2lsbHMvbG9sc3RhdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnVpbGRIZWxwIGZyb20gJy4vYnVpbGRIZWxwJ1xuaW1wb3J0IHJlbWVtYmVyTXlTdW1tb25lciBmcm9tICcuL3JlbWVtYmVyTXlTdW1tb25lcidcblxuZXhwb3J0IGRlZmF1bHQge1xuICBidWlsZEhlbHAsXG4gIHJlbWVtYmVyTXlTdW1tb25lcixcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "buildHelp",
        "rememberMySummoner"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACbA,gCADa;AAEbC;AAFa,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "import buildHelp from './buildHelp'\nimport rememberMySummoner from './rememberMySummoner'\n\nexport default {\n  buildHelp,\n  rememberMySummoner,\n}\n"
      ]
    },
    "mtime": 1521131661206
  },
  "{\"filename\":\"/app/bot/skills/lolstats/buildHelp.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/buildHelp.js",
      "filenameRelative": "/app/bot/skills/lolstats/buildHelp.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "buildHelp.js",
      "sourceFileName": "buildHelp.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "buildHelp"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = async () => ({\n  type: 'response',\n  contentType: 'text',\n  content: 'Te hare ganar algo de manos en LoL'\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkSGVscC5qcyJdLCJuYW1lcyI6WyJ0eXBlIiwiY29udGVudFR5cGUiLCJjb250ZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWUsYUFBYTtBQUMxQkEsUUFBTSxVQURvQjtBQUUxQkMsZUFBYSxNQUZhO0FBRzFCQyxXQUFTO0FBSGlCLENBQWIsQyIsImZpbGUiOiJidWlsZEhlbHAuanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzL2xvbHN0YXRzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYXN5bmMgKCkgPT4gKHtcbiAgdHlwZTogJ3Jlc3BvbnNlJyxcbiAgY29udGVudFR5cGU6ICd0ZXh0JyxcbiAgY29udGVudDogJ1RlIGhhcmUgZ2FuYXIgYWxnbyBkZSBtYW5vcyBlbiBMb0wnLFxufSlcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "buildHelp.js"
      ],
      "names": [
        "type",
        "contentType",
        "content"
      ],
      "mappings": ";;;;;;kBAAe,aAAa;AAC1BA,QAAM,UADoB;AAE1BC,eAAa,MAFa;AAG1BC,WAAS;AAHiB,CAAb,C",
      "file": "buildHelp.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "export default async () => ({\n  type: 'response',\n  contentType: 'text',\n  content: 'Te hare ganar algo de manos en LoL',\n})\n"
      ]
    },
    "mtime": 1522386714651
  },
  "{\"filename\":\"/app/bot/skills/lolstats/rememberMySummoner.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/lolstats\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongoose",
            "imported": [
              "Schema"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Schema",
                "local": "Schema"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/lolstats/rememberMySummoner.js",
      "filenameRelative": "/app/bot/skills/lolstats/rememberMySummoner.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "rememberMySummoner.js",
      "sourceFileName": "rememberMySummoner.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/lolstats",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "rememberMySummoner"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mongoose = require('mongoose');\n\nvar chatter = new _mongoose.Schema({\n  id: Number,\n  accountId: Number,\n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number\n});\n\nvar summoner = new _mongoose.Schema({\n  id: Number,\n  accountId: Number,\n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number\n});\n\nexports.default = async ctx => {\n  console.log('yolotzin');\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbWVtYmVyTXlTdW1tb25lci5qcyJdLCJuYW1lcyI6WyJjaGF0dGVyIiwiaWQiLCJOdW1iZXIiLCJhY2NvdW50SWQiLCJuYW1lIiwiU3RyaW5nIiwicHJvZmlsZUljb25JZCIsInJldmlzaW9uRGF0ZSIsInN1bW1vbmVyTGV2ZWwiLCJzdW1tb25lciIsImN0eCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBLElBQUlBLFVBQVUscUJBQVc7QUFDdkJDLE1BQUlDLE1BRG1CO0FBRXZCQyxhQUFXRCxNQUZZO0FBR3ZCRSxRQUFNQyxNQUhpQjtBQUl2QkMsaUJBQWVKLE1BSlE7QUFLdkJLLGdCQUFjTCxNQUxTO0FBTXZCTSxpQkFBZU47QUFOUSxDQUFYLENBQWQ7O0FBU0EsSUFBSU8sV0FBVyxxQkFBVztBQUN4QlIsTUFBSUMsTUFEb0I7QUFFeEJDLGFBQVdELE1BRmE7QUFHeEJFLFFBQU1DLE1BSGtCO0FBSXhCQyxpQkFBZUosTUFKUztBQUt4QkssZ0JBQWNMLE1BTFU7QUFNeEJNLGlCQUFlTjtBQU5TLENBQVgsQ0FBZjs7a0JBU2UsTUFBTVEsR0FBTixJQUFhO0FBQzFCQyxVQUFRQyxHQUFSLENBQVksVUFBWjtBQUNBLFNBQU9GLEdBQVA7QUFDRCxDIiwiZmlsZSI6InJlbWVtYmVyTXlTdW1tb25lci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9za2lsbHMvbG9sc3RhdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEgfSBmcm9tICdtb25nb29zZSdcblxudmFyIGNoYXR0ZXIgPSBuZXcgU2NoZW1hKHtcbiAgaWQ6IE51bWJlcixcbiAgYWNjb3VudElkOiBOdW1iZXIsXG4gIG5hbWU6IFN0cmluZyxcbiAgcHJvZmlsZUljb25JZDogTnVtYmVyLFxuICByZXZpc2lvbkRhdGU6IE51bWJlcixcbiAgc3VtbW9uZXJMZXZlbDogTnVtYmVyLFxufSlcblxudmFyIHN1bW1vbmVyID0gbmV3IFNjaGVtYSh7XG4gIGlkOiBOdW1iZXIsXG4gIGFjY291bnRJZDogTnVtYmVyLFxuICBuYW1lOiBTdHJpbmcsXG4gIHByb2ZpbGVJY29uSWQ6IE51bWJlcixcbiAgcmV2aXNpb25EYXRlOiBOdW1iZXIsXG4gIHN1bW1vbmVyTGV2ZWw6IE51bWJlcixcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGN0eCA9PiB7XG4gIGNvbnNvbGUubG9nKCd5b2xvdHppbicpXG4gIHJldHVybiBjdHhcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "rememberMySummoner.js"
      ],
      "names": [
        "chatter",
        "id",
        "Number",
        "accountId",
        "name",
        "String",
        "profileIconId",
        "revisionDate",
        "summonerLevel",
        "summoner",
        "ctx",
        "console",
        "log"
      ],
      "mappings": ";;;;;;AAAA;;AAEA,IAAIA,UAAU,qBAAW;AACvBC,MAAIC,MADmB;AAEvBC,aAAWD,MAFY;AAGvBE,QAAMC,MAHiB;AAIvBC,iBAAeJ,MAJQ;AAKvBK,gBAAcL,MALS;AAMvBM,iBAAeN;AANQ,CAAX,CAAd;;AASA,IAAIO,WAAW,qBAAW;AACxBR,MAAIC,MADoB;AAExBC,aAAWD,MAFa;AAGxBE,QAAMC,MAHkB;AAIxBC,iBAAeJ,MAJS;AAKxBK,gBAAcL,MALU;AAMxBM,iBAAeN;AANS,CAAX,CAAf;;kBASe,MAAMQ,GAAN,IAAa;AAC1BC,UAAQC,GAAR,CAAY,UAAZ;AACA,SAAOF,GAAP;AACD,C",
      "file": "rememberMySummoner.js",
      "sourceRoot": "/app/bot/skills/lolstats",
      "sourcesContent": [
        "import { Schema } from 'mongoose'\n\nvar chatter = new Schema({\n  id: Number,\n  accountId: Number,\n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number,\n})\n\nvar summoner = new Schema({\n  id: Number,\n  accountId: Number,\n  name: String,\n  profileIconId: Number,\n  revisionDate: Number,\n  summonerLevel: Number,\n})\n\nexport default async ctx => {\n  console.log('yolotzin')\n  return ctx\n}\n"
      ]
    },
    "mtime": 1521131672329
  },
  "{\"filename\":\"/app/bot/nlp/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/nlp\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./dialogflow",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "askDf"
              }
            ]
          },
          {
            "source": "../actions",
            "imported": [
              "basicTextReply"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "basicTextReply",
                "local": "basicTextReply"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/nlp/index.js",
      "filenameRelative": "/app/bot/nlp/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/nlp",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/nlp",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _dialogflow = require('./dialogflow');\n\nvar _dialogflow2 = _interopRequireDefault(_dialogflow);\n\nvar _actions = require('../actions');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = async function (ctx) {\n  const { handled, message } = await ctx;\n  if (handled) return ctx;\n  const nlp = await (0, _dialogflow2.default)(ctx.message.content, {\n    sessionId: ctx.message.authorId\n  });\n  const ctxOut = _extends({}, ctx, {\n    nlp,\n    handled: nlp.nlpFulfilled\n  });\n  if (nlp.nlpFulfilled) ctxOut.reaction = (0, _actions.basicTextReply)(nlp.fulfillment);\n  return ctxOut;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsImhhbmRsZWQiLCJtZXNzYWdlIiwibmxwIiwiY29udGVudCIsInNlc3Npb25JZCIsImF1dGhvcklkIiwiY3R4T3V0IiwibmxwRnVsZmlsbGVkIiwicmVhY3Rpb24iLCJmdWxmaWxsbWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O2tCQUVlLGdCQUFlQSxHQUFmLEVBQW9CO0FBQ2pDLFFBQU0sRUFBRUMsT0FBRixFQUFXQyxPQUFYLEtBQXVCLE1BQU1GLEdBQW5DO0FBQ0EsTUFBSUMsT0FBSixFQUFhLE9BQU9ELEdBQVA7QUFDYixRQUFNRyxNQUFNLE1BQU0sMEJBQU1ILElBQUlFLE9BQUosQ0FBWUUsT0FBbEIsRUFBMkI7QUFDM0NDLGVBQVdMLElBQUlFLE9BQUosQ0FBWUk7QUFEb0IsR0FBM0IsQ0FBbEI7QUFHQSxRQUFNQyxzQkFDRFAsR0FEQztBQUVKRyxPQUZJO0FBR0pGLGFBQVNFLElBQUlLO0FBSFQsSUFBTjtBQUtBLE1BQUlMLElBQUlLLFlBQVIsRUFBc0JELE9BQU9FLFFBQVAsR0FBa0IsNkJBQWVOLElBQUlPLFdBQW5CLENBQWxCO0FBQ3RCLFNBQU9ILE1BQVA7QUFDRCxDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L25scCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc2tEZiBmcm9tICcuL2RpYWxvZ2Zsb3cnXG5pbXBvcnQgeyBiYXNpY1RleHRSZXBseSB9IGZyb20gJy4uL2FjdGlvbnMnXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uKGN0eCkge1xuICBjb25zdCB7IGhhbmRsZWQsIG1lc3NhZ2UgfSA9IGF3YWl0IGN0eFxuICBpZiAoaGFuZGxlZCkgcmV0dXJuIGN0eFxuICBjb25zdCBubHAgPSBhd2FpdCBhc2tEZihjdHgubWVzc2FnZS5jb250ZW50LCB7XG4gICAgc2Vzc2lvbklkOiBjdHgubWVzc2FnZS5hdXRob3JJZCxcbiAgfSlcbiAgY29uc3QgY3R4T3V0ID0ge1xuICAgIC4uLmN0eCxcbiAgICBubHAsXG4gICAgaGFuZGxlZDogbmxwLm5scEZ1bGZpbGxlZCxcbiAgfVxuICBpZiAobmxwLm5scEZ1bGZpbGxlZCkgY3R4T3V0LnJlYWN0aW9uID0gYmFzaWNUZXh0UmVwbHkobmxwLmZ1bGZpbGxtZW50KVxuICByZXR1cm4gY3R4T3V0XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "handled",
        "message",
        "nlp",
        "content",
        "sessionId",
        "authorId",
        "ctxOut",
        "nlpFulfilled",
        "reaction",
        "fulfillment"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AACA;;;;kBAEe,gBAAeA,GAAf,EAAoB;AACjC,QAAM,EAAEC,OAAF,EAAWC,OAAX,KAAuB,MAAMF,GAAnC;AACA,MAAIC,OAAJ,EAAa,OAAOD,GAAP;AACb,QAAMG,MAAM,MAAM,0BAAMH,IAAIE,OAAJ,CAAYE,OAAlB,EAA2B;AAC3CC,eAAWL,IAAIE,OAAJ,CAAYI;AADoB,GAA3B,CAAlB;AAGA,QAAMC,sBACDP,GADC;AAEJG,OAFI;AAGJF,aAASE,IAAIK;AAHT,IAAN;AAKA,MAAIL,IAAIK,YAAR,EAAsBD,OAAOE,QAAP,GAAkB,6BAAeN,IAAIO,WAAnB,CAAlB;AACtB,SAAOH,MAAP;AACD,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/nlp",
      "sourcesContent": [
        "import askDf from './dialogflow'\nimport { basicTextReply } from '../actions'\n\nexport default async function(ctx) {\n  const { handled, message } = await ctx\n  if (handled) return ctx\n  const nlp = await askDf(ctx.message.content, {\n    sessionId: ctx.message.authorId,\n  })\n  const ctxOut = {\n    ...ctx,\n    nlp,\n    handled: nlp.nlpFulfilled,\n  }\n  if (nlp.nlpFulfilled) ctxOut.reaction = basicTextReply(nlp.fulfillment)\n  return ctxOut\n}\n"
      ]
    },
    "mtime": 1522460604243
  },
  "{\"filename\":\"/app/bot/nlp/dialogflow.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/nlp\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "apiai",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "apiai"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/nlp/dialogflow.js",
      "filenameRelative": "/app/bot/nlp/dialogflow.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dialogflow.js",
      "sourceFileName": "dialogflow.js",
      "sourceRoot": "/app/bot/nlp",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/nlp",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dialogflow"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _apiai = require('apiai');\n\nvar _apiai2 = _interopRequireDefault(_apiai);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst { DF_CLIENT_ACCESS_TOKEN } = process.env;\nconst agent = (0, _apiai2.default)(DF_CLIENT_ACCESS_TOKEN);\n\nconst checkFulfilled = fulfillment => Boolean(fulfillment.messages) && Array.isArray(fulfillment.messages) && Boolean(fulfillment.messages.length > 0);\nconst getFulfillment = fl => fl.messages[0].speech;\n\nconst marshallResponse = response => {\n  const { result, lang, status } = response;\n  const { action, parameters, fulfillment } = result || {};\n  const reaction = {\n    type: 'nlp-response',\n    lang,\n    action,\n    parameters,\n    nlpFulfilled: checkFulfilled(fulfillment),\n    query: result.resolvedQuery\n  };\n  if (action && action !== '' && reaction.nlpFulfilled) reaction.fulfillment = getFulfillment(fulfillment);\n  return reaction;\n};\n\nexports.default = (content, options = {}) => new Promise((resolve, reject) => {\n  const request = agent.textRequest(content, options);\n  request.on('response', resolve);\n  request.on('error', reject);\n  request.end();\n}).then(marshallResponse);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiREZfQ0xJRU5UX0FDQ0VTU19UT0tFTiIsInByb2Nlc3MiLCJlbnYiLCJhZ2VudCIsImNoZWNrRnVsZmlsbGVkIiwiZnVsZmlsbG1lbnQiLCJCb29sZWFuIiwibWVzc2FnZXMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJnZXRGdWxmaWxsbWVudCIsImZsIiwic3BlZWNoIiwibWFyc2hhbGxSZXNwb25zZSIsInJlc3BvbnNlIiwicmVzdWx0IiwibGFuZyIsInN0YXR1cyIsImFjdGlvbiIsInBhcmFtZXRlcnMiLCJyZWFjdGlvbiIsInR5cGUiLCJubHBGdWxmaWxsZWQiLCJxdWVyeSIsInJlc29sdmVkUXVlcnkiLCJjb250ZW50Iiwib3B0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVxdWVzdCIsInRleHRSZXF1ZXN0Iiwib24iLCJlbmQiLCJ0aGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7O0FBRUEsTUFBTSxFQUFFQSxzQkFBRixLQUE2QkMsUUFBUUMsR0FBM0M7QUFDQSxNQUFNQyxRQUFRLHFCQUFNSCxzQkFBTixDQUFkOztBQUVBLE1BQU1JLGlCQUFpQkMsZUFDckJDLFFBQVFELFlBQVlFLFFBQXBCLEtBQ0FDLE1BQU1DLE9BQU4sQ0FBY0osWUFBWUUsUUFBMUIsQ0FEQSxJQUVBRCxRQUFRRCxZQUFZRSxRQUFaLENBQXFCRyxNQUFyQixHQUE4QixDQUF0QyxDQUhGO0FBSUEsTUFBTUMsaUJBQWlCQyxNQUFNQSxHQUFHTCxRQUFILENBQVksQ0FBWixFQUFlTSxNQUE1Qzs7QUFFQSxNQUFNQyxtQkFBbUJDLFlBQVk7QUFDbkMsUUFBTSxFQUFFQyxNQUFGLEVBQVVDLElBQVYsRUFBZ0JDLE1BQWhCLEtBQTJCSCxRQUFqQztBQUNBLFFBQU0sRUFBRUksTUFBRixFQUFVQyxVQUFWLEVBQXNCZixXQUF0QixLQUFzQ1csVUFBVSxFQUF0RDtBQUNBLFFBQU1LLFdBQVc7QUFDZkMsVUFBTSxjQURTO0FBRWZMLFFBRmU7QUFHZkUsVUFIZTtBQUlmQyxjQUplO0FBS2ZHLGtCQUFjbkIsZUFBZUMsV0FBZixDQUxDO0FBTWZtQixXQUFPUixPQUFPUztBQU5DLEdBQWpCO0FBUUEsTUFBSU4sVUFBVUEsV0FBVyxFQUFyQixJQUEyQkUsU0FBU0UsWUFBeEMsRUFDRUYsU0FBU2hCLFdBQVQsR0FBdUJNLGVBQWVOLFdBQWYsQ0FBdkI7QUFDRixTQUFPZ0IsUUFBUDtBQUNELENBZEQ7O2tCQWdCZSxDQUFDSyxPQUFELEVBQVVDLFVBQVUsRUFBcEIsS0FDYixJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQy9CLFFBQU1DLFVBQVU1QixNQUFNNkIsV0FBTixDQUFrQk4sT0FBbEIsRUFBMkJDLE9BQTNCLENBQWhCO0FBQ0FJLFVBQVFFLEVBQVIsQ0FBVyxVQUFYLEVBQXVCSixPQUF2QjtBQUNBRSxVQUFRRSxFQUFSLENBQVcsT0FBWCxFQUFvQkgsTUFBcEI7QUFDQUMsVUFBUUcsR0FBUjtBQUNELENBTEQsRUFLR0MsSUFMSCxDQUtRckIsZ0JBTFIsQyIsImZpbGUiOiJkaWFsb2dmbG93LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L25scCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcGlhaSBmcm9tICdhcGlhaSdcblxuY29uc3QgeyBERl9DTElFTlRfQUNDRVNTX1RPS0VOIH0gPSBwcm9jZXNzLmVudlxuY29uc3QgYWdlbnQgPSBhcGlhaShERl9DTElFTlRfQUNDRVNTX1RPS0VOKVxuXG5jb25zdCBjaGVja0Z1bGZpbGxlZCA9IGZ1bGZpbGxtZW50ID0+XG4gIEJvb2xlYW4oZnVsZmlsbG1lbnQubWVzc2FnZXMpICYmXG4gIEFycmF5LmlzQXJyYXkoZnVsZmlsbG1lbnQubWVzc2FnZXMpICYmXG4gIEJvb2xlYW4oZnVsZmlsbG1lbnQubWVzc2FnZXMubGVuZ3RoID4gMClcbmNvbnN0IGdldEZ1bGZpbGxtZW50ID0gZmwgPT4gZmwubWVzc2FnZXNbMF0uc3BlZWNoXG5cbmNvbnN0IG1hcnNoYWxsUmVzcG9uc2UgPSByZXNwb25zZSA9PiB7XG4gIGNvbnN0IHsgcmVzdWx0LCBsYW5nLCBzdGF0dXMgfSA9IHJlc3BvbnNlXG4gIGNvbnN0IHsgYWN0aW9uLCBwYXJhbWV0ZXJzLCBmdWxmaWxsbWVudCB9ID0gcmVzdWx0IHx8IHt9XG4gIGNvbnN0IHJlYWN0aW9uID0ge1xuICAgIHR5cGU6ICdubHAtcmVzcG9uc2UnLFxuICAgIGxhbmcsXG4gICAgYWN0aW9uLFxuICAgIHBhcmFtZXRlcnMsXG4gICAgbmxwRnVsZmlsbGVkOiBjaGVja0Z1bGZpbGxlZChmdWxmaWxsbWVudCksXG4gICAgcXVlcnk6IHJlc3VsdC5yZXNvbHZlZFF1ZXJ5LFxuICB9XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uICE9PSAnJyAmJiByZWFjdGlvbi5ubHBGdWxmaWxsZWQpIFxuICAgIHJlYWN0aW9uLmZ1bGZpbGxtZW50ID0gZ2V0RnVsZmlsbG1lbnQoZnVsZmlsbG1lbnQpXG4gIHJldHVybiByZWFjdGlvblxufVxuXG5leHBvcnQgZGVmYXVsdCAoY29udGVudCwgb3B0aW9ucyA9IHt9KSA9PlxuICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVxdWVzdCA9IGFnZW50LnRleHRSZXF1ZXN0KGNvbnRlbnQsIG9wdGlvbnMpXG4gICAgcmVxdWVzdC5vbigncmVzcG9uc2UnLCByZXNvbHZlKVxuICAgIHJlcXVlc3Qub24oJ2Vycm9yJywgcmVqZWN0KVxuICAgIHJlcXVlc3QuZW5kKClcbiAgfSkudGhlbihtYXJzaGFsbFJlc3BvbnNlKVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "DF_CLIENT_ACCESS_TOKEN",
        "process",
        "env",
        "agent",
        "checkFulfilled",
        "fulfillment",
        "Boolean",
        "messages",
        "Array",
        "isArray",
        "length",
        "getFulfillment",
        "fl",
        "speech",
        "marshallResponse",
        "response",
        "result",
        "lang",
        "status",
        "action",
        "parameters",
        "reaction",
        "type",
        "nlpFulfilled",
        "query",
        "resolvedQuery",
        "content",
        "options",
        "Promise",
        "resolve",
        "reject",
        "request",
        "textRequest",
        "on",
        "end",
        "then"
      ],
      "mappings": ";;;;;;AAAA;;;;;;AAEA,MAAM,EAAEA,sBAAF,KAA6BC,QAAQC,GAA3C;AACA,MAAMC,QAAQ,qBAAMH,sBAAN,CAAd;;AAEA,MAAMI,iBAAiBC,eACrBC,QAAQD,YAAYE,QAApB,KACAC,MAAMC,OAAN,CAAcJ,YAAYE,QAA1B,CADA,IAEAD,QAAQD,YAAYE,QAAZ,CAAqBG,MAArB,GAA8B,CAAtC,CAHF;AAIA,MAAMC,iBAAiBC,MAAMA,GAAGL,QAAH,CAAY,CAAZ,EAAeM,MAA5C;;AAEA,MAAMC,mBAAmBC,YAAY;AACnC,QAAM,EAAEC,MAAF,EAAUC,IAAV,EAAgBC,MAAhB,KAA2BH,QAAjC;AACA,QAAM,EAAEI,MAAF,EAAUC,UAAV,EAAsBf,WAAtB,KAAsCW,UAAU,EAAtD;AACA,QAAMK,WAAW;AACfC,UAAM,cADS;AAEfL,QAFe;AAGfE,UAHe;AAIfC,cAJe;AAKfG,kBAAcnB,eAAeC,WAAf,CALC;AAMfmB,WAAOR,OAAOS;AANC,GAAjB;AAQA,MAAIN,UAAUA,WAAW,EAArB,IAA2BE,SAASE,YAAxC,EACEF,SAAShB,WAAT,GAAuBM,eAAeN,WAAf,CAAvB;AACF,SAAOgB,QAAP;AACD,CAdD;;kBAgBe,CAACK,OAAD,EAAUC,UAAU,EAApB,KACb,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,QAAMC,UAAU5B,MAAM6B,WAAN,CAAkBN,OAAlB,EAA2BC,OAA3B,CAAhB;AACAI,UAAQE,EAAR,CAAW,UAAX,EAAuBJ,OAAvB;AACAE,UAAQE,EAAR,CAAW,OAAX,EAAoBH,MAApB;AACAC,UAAQG,GAAR;AACD,CALD,EAKGC,IALH,CAKQrB,gBALR,C",
      "file": "dialogflow.js",
      "sourceRoot": "/app/bot/nlp",
      "sourcesContent": [
        "import apiai from 'apiai'\n\nconst { DF_CLIENT_ACCESS_TOKEN } = process.env\nconst agent = apiai(DF_CLIENT_ACCESS_TOKEN)\n\nconst checkFulfilled = fulfillment =>\n  Boolean(fulfillment.messages) &&\n  Array.isArray(fulfillment.messages) &&\n  Boolean(fulfillment.messages.length > 0)\nconst getFulfillment = fl => fl.messages[0].speech\n\nconst marshallResponse = response => {\n  const { result, lang, status } = response\n  const { action, parameters, fulfillment } = result || {}\n  const reaction = {\n    type: 'nlp-response',\n    lang,\n    action,\n    parameters,\n    nlpFulfilled: checkFulfilled(fulfillment),\n    query: result.resolvedQuery,\n  }\n  if (action && action !== '' && reaction.nlpFulfilled) \n    reaction.fulfillment = getFulfillment(fulfillment)\n  return reaction\n}\n\nexport default (content, options = {}) =>\n  new Promise((resolve, reject) => {\n    const request = agent.textRequest(content, options)\n    request.on('response', resolve)\n    request.on('error', reject)\n    request.end()\n  }).then(marshallResponse)\n"
      ]
    },
    "mtime": 1522469464002
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "discord.js",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Discord"
              }
            ]
          },
          {
            "source": "rxjs/Rx",
            "imported": [
              "Subject"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Subject",
                "local": "Subject"
              }
            ]
          },
          {
            "source": "rxjs",
            "imported": [
              "Observable"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Observable",
                "local": "Observable"
              }
            ]
          },
          {
            "source": "rxjs/observable/zip",
            "imported": [
              "zip"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "zip",
                "local": "zip"
              }
            ]
          },
          {
            "source": "rxjs/observable/merge",
            "imported": [
              "merge"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "merge",
                "local": "merge"
              }
            ]
          },
          {
            "source": "rxjs/observable/fromEvent",
            "imported": [
              "fromEvent"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "fromEvent",
                "local": "fromEvent"
              }
            ]
          },
          {
            "source": "./actions",
            "imported": [
              "adapterReady",
              "incomingMessage",
              "platformMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "adapterReady",
                "local": "adapterReady"
              },
              {
                "kind": "named",
                "imported": "incomingMessage",
                "local": "incomingMessage"
              },
              {
                "kind": "named",
                "imported": "platformMessage",
                "local": "platformMessage"
              }
            ]
          },
          {
            "source": "./handlers",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "handleActions"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/index.js",
      "filenameRelative": "/app/bot/adapters/discordJs/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _discord = require('discord.js');\n\nvar _discord2 = _interopRequireDefault(_discord);\n\nvar _Rx = require('rxjs/Rx');\n\nvar _rxjs = require('rxjs');\n\nvar _zip = require('rxjs/observable/zip');\n\nvar _merge = require('rxjs/observable/merge');\n\nvar _fromEvent = require('rxjs/observable/fromEvent');\n\nvar _actions = require('./actions');\n\nvar _handlers = require('./handlers');\n\nvar _handlers2 = _interopRequireDefault(_handlers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst client = new _discord2.default.Client();\n\nconst discardOwnMessages = client => message => Boolean(message.author.id !== client.user.id);\nconst discardBotMessages = message => !message.author.bot;\n\nconst commands$ = new _Rx.Subject();\nconst reactions$ = new _Rx.Subject();\n\nconst platformMessages$ = (0, _fromEvent.fromEvent)(client, 'message').filter(discardOwnMessages(client)).filter(discardBotMessages).map(_actions.platformMessage);\n\nconst platformEvents$ = (0, _merge.merge)((0, _fromEvent.fromEvent)(client, 'ready').mapTo({ type: 'adapter-ready' }));\n\nconst messageLoop$ = (0, _zip.zip)((0, _merge.merge)(platformEvents$, platformMessages$), reactions$, (input, reaction) => _extends({}, reaction, { input }));\n\nconst platformSubscription = (0, _merge.merge)(messageLoop$, commands$).subscribe((0, _handlers2.default)(client));\n\nexports.default = () => ({\n  inputs$: (0, _merge.merge)(platformEvents$, platformMessages$.map(_actions.incomingMessage)),\n  reactions$,\n  commands$\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNsaWVudCIsIkNsaWVudCIsImRpc2NhcmRPd25NZXNzYWdlcyIsIm1lc3NhZ2UiLCJCb29sZWFuIiwiYXV0aG9yIiwiaWQiLCJ1c2VyIiwiZGlzY2FyZEJvdE1lc3NhZ2VzIiwiYm90IiwiY29tbWFuZHMkIiwicmVhY3Rpb25zJCIsInBsYXRmb3JtTWVzc2FnZXMkIiwiZmlsdGVyIiwibWFwIiwicGxhdGZvcm1FdmVudHMkIiwibWFwVG8iLCJ0eXBlIiwibWVzc2FnZUxvb3AkIiwiaW5wdXQiLCJyZWFjdGlvbiIsInBsYXRmb3JtU3Vic2NyaXB0aW9uIiwic3Vic2NyaWJlIiwiaW5wdXRzJCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUVBOzs7Ozs7QUFFQSxNQUFNQSxTQUFTLElBQUksa0JBQVFDLE1BQVosRUFBZjs7QUFFQSxNQUFNQyxxQkFBcUJGLFVBQVVHLFdBQ25DQyxRQUFRRCxRQUFRRSxNQUFSLENBQWVDLEVBQWYsS0FBc0JOLE9BQU9PLElBQVAsQ0FBWUQsRUFBMUMsQ0FERjtBQUVBLE1BQU1FLHFCQUFxQkwsV0FBVyxDQUFDQSxRQUFRRSxNQUFSLENBQWVJLEdBQXREOztBQUVBLE1BQU1DLFlBQVksaUJBQWxCO0FBQ0EsTUFBTUMsYUFBYSxpQkFBbkI7O0FBRUEsTUFBTUMsb0JBQW9CLDBCQUFVWixNQUFWLEVBQWtCLFNBQWxCLEVBQ3ZCYSxNQUR1QixDQUNoQlgsbUJBQW1CRixNQUFuQixDQURnQixFQUV2QmEsTUFGdUIsQ0FFaEJMLGtCQUZnQixFQUd2Qk0sR0FIdUIsMEJBQTFCOztBQUtBLE1BQU1DLGtCQUFrQixrQkFDdEIsMEJBQVVmLE1BQVYsRUFBa0IsT0FBbEIsRUFBMkJnQixLQUEzQixDQUFpQyxFQUFFQyxNQUFNLGVBQVIsRUFBakMsQ0FEc0IsQ0FBeEI7O0FBSUEsTUFBTUMsZUFBZSxjQUNuQixrQkFBTUgsZUFBTixFQUF1QkgsaUJBQXZCLENBRG1CLEVBRW5CRCxVQUZtQixFQUduQixDQUFDUSxLQUFELEVBQVFDLFFBQVIsa0JBQTJCQSxRQUEzQixJQUFxQ0QsS0FBckMsR0FIbUIsQ0FBckI7O0FBTUEsTUFBTUUsdUJBQXVCLGtCQUFNSCxZQUFOLEVBQW9CUixTQUFwQixFQUErQlksU0FBL0IsQ0FDM0Isd0JBQWN0QixNQUFkLENBRDJCLENBQTdCOztrQkFJZSxPQUFPO0FBQ3BCdUIsV0FBUyxrQkFBTVIsZUFBTixFQUF1Qkgsa0JBQWtCRSxHQUFsQiwwQkFBdkIsQ0FEVztBQUVwQkgsWUFGb0I7QUFHcEJEO0FBSG9CLENBQVAsQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9hZGFwdGVycy9kaXNjb3JkSnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlzY29yZCBmcm9tICdkaXNjb3JkLmpzJ1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMvUngnXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcydcbmltcG9ydCB7IHppcCB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS96aXAnXG5pbXBvcnQgeyBtZXJnZSB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9tZXJnZSdcbmltcG9ydCB7IGZyb21FdmVudCB9IGZyb20gJ3J4anMvb2JzZXJ2YWJsZS9mcm9tRXZlbnQnXG5cbmltcG9ydCB7IGFkYXB0ZXJSZWFkeSwgaW5jb21pbmdNZXNzYWdlLCBwbGF0Zm9ybU1lc3NhZ2UgfSBmcm9tICcuL2FjdGlvbnMnXG5cbmltcG9ydCBoYW5kbGVBY3Rpb25zIGZyb20gJy4vaGFuZGxlcnMnXG5cbmNvbnN0IGNsaWVudCA9IG5ldyBEaXNjb3JkLkNsaWVudCgpXG5cbmNvbnN0IGRpc2NhcmRPd25NZXNzYWdlcyA9IGNsaWVudCA9PiBtZXNzYWdlID0+XG4gIEJvb2xlYW4obWVzc2FnZS5hdXRob3IuaWQgIT09IGNsaWVudC51c2VyLmlkKVxuY29uc3QgZGlzY2FyZEJvdE1lc3NhZ2VzID0gbWVzc2FnZSA9PiAhbWVzc2FnZS5hdXRob3IuYm90XG5cbmNvbnN0IGNvbW1hbmRzJCA9IG5ldyBTdWJqZWN0KClcbmNvbnN0IHJlYWN0aW9ucyQgPSBuZXcgU3ViamVjdCgpXG5cbmNvbnN0IHBsYXRmb3JtTWVzc2FnZXMkID0gZnJvbUV2ZW50KGNsaWVudCwgJ21lc3NhZ2UnKVxuICAuZmlsdGVyKGRpc2NhcmRPd25NZXNzYWdlcyhjbGllbnQpKVxuICAuZmlsdGVyKGRpc2NhcmRCb3RNZXNzYWdlcylcbiAgLm1hcChwbGF0Zm9ybU1lc3NhZ2UpXG5cbmNvbnN0IHBsYXRmb3JtRXZlbnRzJCA9IG1lcmdlKFxuICBmcm9tRXZlbnQoY2xpZW50LCAncmVhZHknKS5tYXBUbyh7IHR5cGU6ICdhZGFwdGVyLXJlYWR5JyB9KSxcbilcblxuY29uc3QgbWVzc2FnZUxvb3AkID0gemlwKFxuICBtZXJnZShwbGF0Zm9ybUV2ZW50cyQsIHBsYXRmb3JtTWVzc2FnZXMkKSxcbiAgcmVhY3Rpb25zJCxcbiAgKGlucHV0LCByZWFjdGlvbikgPT4gKHsgLi4ucmVhY3Rpb24sIGlucHV0IH0pLFxuKVxuXG5jb25zdCBwbGF0Zm9ybVN1YnNjcmlwdGlvbiA9IG1lcmdlKG1lc3NhZ2VMb29wJCwgY29tbWFuZHMkKS5zdWJzY3JpYmUoXG4gIGhhbmRsZUFjdGlvbnMoY2xpZW50KSxcbilcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4gKHtcbiAgaW5wdXRzJDogbWVyZ2UocGxhdGZvcm1FdmVudHMkLCBwbGF0Zm9ybU1lc3NhZ2VzJC5tYXAoaW5jb21pbmdNZXNzYWdlKSksXG4gIHJlYWN0aW9ucyQsXG4gIGNvbW1hbmRzJCxcbn0pXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "client",
        "Client",
        "discardOwnMessages",
        "message",
        "Boolean",
        "author",
        "id",
        "user",
        "discardBotMessages",
        "bot",
        "commands$",
        "reactions$",
        "platformMessages$",
        "filter",
        "map",
        "platformEvents$",
        "mapTo",
        "type",
        "messageLoop$",
        "input",
        "reaction",
        "platformSubscription",
        "subscribe",
        "inputs$"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;AAEA,MAAMA,SAAS,IAAI,kBAAQC,MAAZ,EAAf;;AAEA,MAAMC,qBAAqBF,UAAUG,WACnCC,QAAQD,QAAQE,MAAR,CAAeC,EAAf,KAAsBN,OAAOO,IAAP,CAAYD,EAA1C,CADF;AAEA,MAAME,qBAAqBL,WAAW,CAACA,QAAQE,MAAR,CAAeI,GAAtD;;AAEA,MAAMC,YAAY,iBAAlB;AACA,MAAMC,aAAa,iBAAnB;;AAEA,MAAMC,oBAAoB,0BAAUZ,MAAV,EAAkB,SAAlB,EACvBa,MADuB,CAChBX,mBAAmBF,MAAnB,CADgB,EAEvBa,MAFuB,CAEhBL,kBAFgB,EAGvBM,GAHuB,0BAA1B;;AAKA,MAAMC,kBAAkB,kBACtB,0BAAUf,MAAV,EAAkB,OAAlB,EAA2BgB,KAA3B,CAAiC,EAAEC,MAAM,eAAR,EAAjC,CADsB,CAAxB;;AAIA,MAAMC,eAAe,cACnB,kBAAMH,eAAN,EAAuBH,iBAAvB,CADmB,EAEnBD,UAFmB,EAGnB,CAACQ,KAAD,EAAQC,QAAR,kBAA2BA,QAA3B,IAAqCD,KAArC,GAHmB,CAArB;;AAMA,MAAME,uBAAuB,kBAAMH,YAAN,EAAoBR,SAApB,EAA+BY,SAA/B,CAC3B,wBAActB,MAAd,CAD2B,CAA7B;;kBAIe,OAAO;AACpBuB,WAAS,kBAAMR,eAAN,EAAuBH,kBAAkBE,GAAlB,0BAAvB,CADW;AAEpBH,YAFoB;AAGpBD;AAHoB,CAAP,C",
      "file": "index.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "import Discord from 'discord.js'\nimport { Subject } from 'rxjs/Rx'\nimport { Observable } from 'rxjs'\nimport { zip } from 'rxjs/observable/zip'\nimport { merge } from 'rxjs/observable/merge'\nimport { fromEvent } from 'rxjs/observable/fromEvent'\n\nimport { adapterReady, incomingMessage, platformMessage } from './actions'\n\nimport handleActions from './handlers'\n\nconst client = new Discord.Client()\n\nconst discardOwnMessages = client => message =>\n  Boolean(message.author.id !== client.user.id)\nconst discardBotMessages = message => !message.author.bot\n\nconst commands$ = new Subject()\nconst reactions$ = new Subject()\n\nconst platformMessages$ = fromEvent(client, 'message')\n  .filter(discardOwnMessages(client))\n  .filter(discardBotMessages)\n  .map(platformMessage)\n\nconst platformEvents$ = merge(\n  fromEvent(client, 'ready').mapTo({ type: 'adapter-ready' }),\n)\n\nconst messageLoop$ = zip(\n  merge(platformEvents$, platformMessages$),\n  reactions$,\n  (input, reaction) => ({ ...reaction, input }),\n)\n\nconst platformSubscription = merge(messageLoop$, commands$).subscribe(\n  handleActions(client),\n)\n\nexport default () => ({\n  inputs$: merge(platformEvents$, platformMessages$.map(incomingMessage)),\n  reactions$,\n  commands$,\n})\n"
      ]
    },
    "mtime": 1522475070988
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/actions.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "incomingMessage",
            "platformMessage",
            "adapterReady"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "incomingMessage",
              "exported": "incomingMessage"
            },
            {
              "kind": "local",
              "local": "platformMessage",
              "exported": "platformMessage"
            },
            {
              "kind": "local",
              "local": "adapterReady",
              "exported": "adapterReady"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/actions.js",
      "filenameRelative": "/app/bot/adapters/discordJs/actions.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "actions.js",
      "sourceFileName": "actions.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "actions"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst incomingMessage = exports.incomingMessage = ({ message }) => ({\n  type: 'incoming-message',\n  message: {\n    msgId: message.id,\n    content: message.content,\n    authorId: message.author.id,\n    authorName: message.author.username,\n    channel: message.channel.id\n  }\n});\n\nconst platformMessage = exports.platformMessage = message => ({\n  type: 'platform-message',\n  message\n});\n\nconst adapterReady = exports.adapterReady = () => ({ type: 'adapter-ready' });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGlvbnMuanMiXSwibmFtZXMiOlsiaW5jb21pbmdNZXNzYWdlIiwibWVzc2FnZSIsInR5cGUiLCJtc2dJZCIsImlkIiwiY29udGVudCIsImF1dGhvcklkIiwiYXV0aG9yIiwiYXV0aG9yTmFtZSIsInVzZXJuYW1lIiwiY2hhbm5lbCIsInBsYXRmb3JtTWVzc2FnZSIsImFkYXB0ZXJSZWFkeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSw0Q0FBa0IsQ0FBQyxFQUFFQyxPQUFGLEVBQUQsTUFBa0I7QUFDL0NDLFFBQU0sa0JBRHlDO0FBRS9DRCxXQUFTO0FBQ1BFLFdBQU9GLFFBQVFHLEVBRFI7QUFFUEMsYUFBU0osUUFBUUksT0FGVjtBQUdQQyxjQUFVTCxRQUFRTSxNQUFSLENBQWVILEVBSGxCO0FBSVBJLGdCQUFZUCxRQUFRTSxNQUFSLENBQWVFLFFBSnBCO0FBS1BDLGFBQVNULFFBQVFTLE9BQVIsQ0FBZ0JOO0FBTGxCO0FBRnNDLENBQWxCLENBQXhCOztBQVdBLE1BQU1PLDRDQUFrQlYsWUFBWTtBQUN6Q0MsUUFBTSxrQkFEbUM7QUFFekNEO0FBRnlDLENBQVosQ0FBeEI7O0FBS0EsTUFBTVcsc0NBQWUsT0FBTyxFQUFFVixNQUFNLGVBQVIsRUFBUCxDQUFyQiIsImZpbGUiOiJhY3Rpb25zLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2Rpc2NvcmRKcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpbmNvbWluZ01lc3NhZ2UgPSAoeyBtZXNzYWdlIH0pID0+ICh7XG4gIHR5cGU6ICdpbmNvbWluZy1tZXNzYWdlJyxcbiAgbWVzc2FnZToge1xuICAgIG1zZ0lkOiBtZXNzYWdlLmlkLFxuICAgIGNvbnRlbnQ6IG1lc3NhZ2UuY29udGVudCxcbiAgICBhdXRob3JJZDogbWVzc2FnZS5hdXRob3IuaWQsXG4gICAgYXV0aG9yTmFtZTogbWVzc2FnZS5hdXRob3IudXNlcm5hbWUsXG4gICAgY2hhbm5lbDogbWVzc2FnZS5jaGFubmVsLmlkLFxuICB9LFxufSlcblxuZXhwb3J0IGNvbnN0IHBsYXRmb3JtTWVzc2FnZSA9IG1lc3NhZ2UgPT4gKHtcbiAgdHlwZTogJ3BsYXRmb3JtLW1lc3NhZ2UnLFxuICBtZXNzYWdlLFxufSlcblxuZXhwb3J0IGNvbnN0IGFkYXB0ZXJSZWFkeSA9ICgpID0+ICh7IHR5cGU6ICdhZGFwdGVyLXJlYWR5JyB9KVxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "actions.js"
      ],
      "names": [
        "incomingMessage",
        "message",
        "type",
        "msgId",
        "id",
        "content",
        "authorId",
        "author",
        "authorName",
        "username",
        "channel",
        "platformMessage",
        "adapterReady"
      ],
      "mappings": ";;;;;AAAO,MAAMA,4CAAkB,CAAC,EAAEC,OAAF,EAAD,MAAkB;AAC/CC,QAAM,kBADyC;AAE/CD,WAAS;AACPE,WAAOF,QAAQG,EADR;AAEPC,aAASJ,QAAQI,OAFV;AAGPC,cAAUL,QAAQM,MAAR,CAAeH,EAHlB;AAIPI,gBAAYP,QAAQM,MAAR,CAAeE,QAJpB;AAKPC,aAAST,QAAQS,OAAR,CAAgBN;AALlB;AAFsC,CAAlB,CAAxB;;AAWA,MAAMO,4CAAkBV,YAAY;AACzCC,QAAM,kBADmC;AAEzCD;AAFyC,CAAZ,CAAxB;;AAKA,MAAMW,sCAAe,OAAO,EAAEV,MAAM,eAAR,EAAP,CAArB",
      "file": "actions.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "export const incomingMessage = ({ message }) => ({\n  type: 'incoming-message',\n  message: {\n    msgId: message.id,\n    content: message.content,\n    authorId: message.author.id,\n    authorName: message.author.username,\n    channel: message.channel.id,\n  },\n})\n\nexport const platformMessage = message => ({\n  type: 'platform-message',\n  message,\n})\n\nexport const adapterReady = () => ({ type: 'adapter-ready' })\n"
      ]
    },
    "mtime": 1522474973870
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/handlers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/handlers.js",
      "filenameRelative": "/app/bot/adapters/discordJs/handlers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "handlers.js",
      "sourceFileName": "handlers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "handlers"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst logPrefix = 'Adapter[discordJs]:';\n\nconst wait = t => new Promise(r => setTimeout(r, t));\n\nconst makeMessage = reaction => {\n  switch (reaction.contentType) {\n    case 'text':\n    case 'embed':\n      return reaction.content;\n    case 'nlp-response':\n      return reaction.fulfillment;\n    default:\n      return;\n  }\n};\n\nconst platformActions = {\n  // action: {\n  //   input: { message: DiscordJs.Message },\n  //   message: { contentType: String, content: (String|Any) }\n  // }\n  'default-action'(client, reaction) {\n    console.warn(`${logPrefix} I don't know what to do with reaction type: ${reaction.type}`);\n  },\n  ignore() {\n    return;\n  },\n  error(_, reaction) {\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`);\n  },\n  'message-reply'(_, reaction) {\n    const { input, message } = reaction;\n    const { channel } = input.message;\n    channel.startTyping();\n    wait(1000).then(() => channel.send(makeMessage(message)) && channel.stopTyping());\n  },\n  connect(client, reaction) {\n    const { token } = reaction;\n    client.login(token);\n  },\n  'set-presence'(client, reaction) {\n    const { presence } = reaction;\n    client.user.setPresence(presence);\n  },\n  'adapter-ready'(client, reaction) {\n    console.log(`${logPrefix} logged in as ${client.user.tag}`);\n  }\n};\n\nconst getAction = actionType => actionType in platformActions ? platformActions[actionType] : platformActions['default-action'];\n\nexports.default = client => action => {\n  getAction(action.type)(client, action);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRsZXJzLmpzIl0sIm5hbWVzIjpbImxvZ1ByZWZpeCIsIndhaXQiLCJ0IiwiUHJvbWlzZSIsInIiLCJzZXRUaW1lb3V0IiwibWFrZU1lc3NhZ2UiLCJyZWFjdGlvbiIsImNvbnRlbnRUeXBlIiwiY29udGVudCIsImZ1bGZpbGxtZW50IiwicGxhdGZvcm1BY3Rpb25zIiwiY2xpZW50IiwiY29uc29sZSIsIndhcm4iLCJ0eXBlIiwiaWdub3JlIiwiZXJyb3IiLCJfIiwiaW5wdXQiLCJtZXNzYWdlIiwiY2hhbm5lbCIsInN0YXJ0VHlwaW5nIiwidGhlbiIsInNlbmQiLCJzdG9wVHlwaW5nIiwiY29ubmVjdCIsInRva2VuIiwibG9naW4iLCJwcmVzZW5jZSIsInVzZXIiLCJzZXRQcmVzZW5jZSIsImxvZyIsInRhZyIsImdldEFjdGlvbiIsImFjdGlvblR5cGUiLCJhY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsWUFBWSxxQkFBbEI7O0FBRUEsTUFBTUMsT0FBT0MsS0FBSyxJQUFJQyxPQUFKLENBQVlDLEtBQUtDLFdBQVdELENBQVgsRUFBY0YsQ0FBZCxDQUFqQixDQUFsQjs7QUFFQSxNQUFNSSxjQUFjQyxZQUFZO0FBQzlCLFVBQVFBLFNBQVNDLFdBQWpCO0FBQ0UsU0FBSyxNQUFMO0FBQ0EsU0FBSyxPQUFMO0FBQ0UsYUFBT0QsU0FBU0UsT0FBaEI7QUFDRixTQUFLLGNBQUw7QUFDRSxhQUFPRixTQUFTRyxXQUFoQjtBQUNGO0FBQ0U7QUFQSjtBQVNELENBVkQ7O0FBWUEsTUFBTUMsa0JBQWtCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQWlCQyxNQUFqQixFQUF5QkwsUUFBekIsRUFBbUM7QUFDakNNLFlBQVFDLElBQVIsQ0FDRyxHQUFFZCxTQUFVLGdEQUErQ08sU0FBU1EsSUFBSyxFQUQ1RTtBQUdELEdBVHFCO0FBVXRCQyxXQUFTO0FBQ1A7QUFDRCxHQVpxQjtBQWF0QkMsUUFBTUMsQ0FBTixFQUFTWCxRQUFULEVBQW1CO0FBQ2pCLFdBQU9NLFFBQVFJLEtBQVIsQ0FBZSxHQUFFakIsU0FBVSxxQkFBb0JPLFNBQVNVLEtBQU0sRUFBOUQsQ0FBUDtBQUNELEdBZnFCO0FBZ0J0QixrQkFBZ0JDLENBQWhCLEVBQW1CWCxRQUFuQixFQUE2QjtBQUMzQixVQUFNLEVBQUVZLEtBQUYsRUFBU0MsT0FBVCxLQUFxQmIsUUFBM0I7QUFDQSxVQUFNLEVBQUVjLE9BQUYsS0FBY0YsTUFBTUMsT0FBMUI7QUFDQUMsWUFBUUMsV0FBUjtBQUNBckIsU0FBSyxJQUFMLEVBQVdzQixJQUFYLENBQWdCLE1BQU1GLFFBQVFHLElBQVIsQ0FBYWxCLFlBQVljLE9BQVosQ0FBYixLQUFzQ0MsUUFBUUksVUFBUixFQUE1RDtBQUNELEdBckJxQjtBQXNCdEJDLFVBQVFkLE1BQVIsRUFBZ0JMLFFBQWhCLEVBQTBCO0FBQ3hCLFVBQU0sRUFBRW9CLEtBQUYsS0FBWXBCLFFBQWxCO0FBQ0FLLFdBQU9nQixLQUFQLENBQWFELEtBQWI7QUFDRCxHQXpCcUI7QUEwQnRCLGlCQUFlZixNQUFmLEVBQXVCTCxRQUF2QixFQUFpQztBQUMvQixVQUFNLEVBQUVzQixRQUFGLEtBQWV0QixRQUFyQjtBQUNBSyxXQUFPa0IsSUFBUCxDQUFZQyxXQUFaLENBQXdCRixRQUF4QjtBQUNELEdBN0JxQjtBQThCdEIsa0JBQWdCakIsTUFBaEIsRUFBd0JMLFFBQXhCLEVBQWtDO0FBQ2hDTSxZQUFRbUIsR0FBUixDQUFhLEdBQUVoQyxTQUFVLGlCQUFnQlksT0FBT2tCLElBQVAsQ0FBWUcsR0FBSSxFQUF6RDtBQUNEO0FBaENxQixDQUF4Qjs7QUFtQ0EsTUFBTUMsWUFBWUMsY0FDaEJBLGNBQWN4QixlQUFkLEdBQ0lBLGdCQUFnQndCLFVBQWhCLENBREosR0FFSXhCLGdCQUFnQixnQkFBaEIsQ0FITjs7a0JBS2VDLFVBQVV3QixVQUFVO0FBQ2pDRixZQUFVRSxPQUFPckIsSUFBakIsRUFBdUJILE1BQXZCLEVBQStCd0IsTUFBL0I7QUFDRCxDIiwiZmlsZSI6ImhhbmRsZXJzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvYm90L2FkYXB0ZXJzL2Rpc2NvcmRKcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxvZ1ByZWZpeCA9ICdBZGFwdGVyW2Rpc2NvcmRKc106J1xuXG5jb25zdCB3YWl0ID0gdCA9PiBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgdCkpXG5cbmNvbnN0IG1ha2VNZXNzYWdlID0gcmVhY3Rpb24gPT4ge1xuICBzd2l0Y2ggKHJlYWN0aW9uLmNvbnRlbnRUeXBlKSB7XG4gICAgY2FzZSAndGV4dCc6XG4gICAgY2FzZSAnZW1iZWQnOlxuICAgICAgcmV0dXJuIHJlYWN0aW9uLmNvbnRlbnRcbiAgICBjYXNlICdubHAtcmVzcG9uc2UnOlxuICAgICAgcmV0dXJuIHJlYWN0aW9uLmZ1bGZpbGxtZW50XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVyblxuICB9XG59XG5cbmNvbnN0IHBsYXRmb3JtQWN0aW9ucyA9IHtcbiAgLy8gYWN0aW9uOiB7XG4gIC8vICAgaW5wdXQ6IHsgbWVzc2FnZTogRGlzY29yZEpzLk1lc3NhZ2UgfSxcbiAgLy8gICBtZXNzYWdlOiB7IGNvbnRlbnRUeXBlOiBTdHJpbmcsIGNvbnRlbnQ6IChTdHJpbmd8QW55KSB9XG4gIC8vIH1cbiAgJ2RlZmF1bHQtYWN0aW9uJyhjbGllbnQsIHJlYWN0aW9uKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgYCR7bG9nUHJlZml4fSBJIGRvbid0IGtub3cgd2hhdCB0byBkbyB3aXRoIHJlYWN0aW9uIHR5cGU6ICR7cmVhY3Rpb24udHlwZX1gLFxuICAgIClcbiAgfSxcbiAgaWdub3JlKCkge1xuICAgIHJldHVyblxuICB9LFxuICBlcnJvcihfLCByZWFjdGlvbikge1xuICAgIHJldHVybiBjb25zb2xlLmVycm9yKGAke2xvZ1ByZWZpeH0gSSBoYXZlIGFuIGVycm9yOiAke3JlYWN0aW9uLmVycm9yfWApXG4gIH0sXG4gICdtZXNzYWdlLXJlcGx5JyhfLCByZWFjdGlvbikge1xuICAgIGNvbnN0IHsgaW5wdXQsIG1lc3NhZ2UgfSA9IHJlYWN0aW9uXG4gICAgY29uc3QgeyBjaGFubmVsIH0gPSBpbnB1dC5tZXNzYWdlXG4gICAgY2hhbm5lbC5zdGFydFR5cGluZygpXG4gICAgd2FpdCgxMDAwKS50aGVuKCgpID0+IGNoYW5uZWwuc2VuZChtYWtlTWVzc2FnZShtZXNzYWdlKSkgJiYgY2hhbm5lbC5zdG9wVHlwaW5nKCkpXG4gIH0sXG4gIGNvbm5lY3QoY2xpZW50LCByZWFjdGlvbikge1xuICAgIGNvbnN0IHsgdG9rZW4gfSA9IHJlYWN0aW9uXG4gICAgY2xpZW50LmxvZ2luKHRva2VuKVxuICB9LFxuICAnc2V0LXByZXNlbmNlJyhjbGllbnQsIHJlYWN0aW9uKSB7XG4gICAgY29uc3QgeyBwcmVzZW5jZSB9ID0gcmVhY3Rpb25cbiAgICBjbGllbnQudXNlci5zZXRQcmVzZW5jZShwcmVzZW5jZSlcbiAgfSxcbiAgJ2FkYXB0ZXItcmVhZHknKGNsaWVudCwgcmVhY3Rpb24pIHtcbiAgICBjb25zb2xlLmxvZyhgJHtsb2dQcmVmaXh9IGxvZ2dlZCBpbiBhcyAke2NsaWVudC51c2VyLnRhZ31gKVxuICB9LFxufVxuXG5jb25zdCBnZXRBY3Rpb24gPSBhY3Rpb25UeXBlID0+XG4gIGFjdGlvblR5cGUgaW4gcGxhdGZvcm1BY3Rpb25zXG4gICAgPyBwbGF0Zm9ybUFjdGlvbnNbYWN0aW9uVHlwZV1cbiAgICA6IHBsYXRmb3JtQWN0aW9uc1snZGVmYXVsdC1hY3Rpb24nXVxuXG5leHBvcnQgZGVmYXVsdCBjbGllbnQgPT4gYWN0aW9uID0+IHtcbiAgZ2V0QWN0aW9uKGFjdGlvbi50eXBlKShjbGllbnQsIGFjdGlvbilcbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "handlers.js"
      ],
      "names": [
        "logPrefix",
        "wait",
        "t",
        "Promise",
        "r",
        "setTimeout",
        "makeMessage",
        "reaction",
        "contentType",
        "content",
        "fulfillment",
        "platformActions",
        "client",
        "console",
        "warn",
        "type",
        "ignore",
        "error",
        "_",
        "input",
        "message",
        "channel",
        "startTyping",
        "then",
        "send",
        "stopTyping",
        "connect",
        "token",
        "login",
        "presence",
        "user",
        "setPresence",
        "log",
        "tag",
        "getAction",
        "actionType",
        "action"
      ],
      "mappings": ";;;;;AAAA,MAAMA,YAAY,qBAAlB;;AAEA,MAAMC,OAAOC,KAAK,IAAIC,OAAJ,CAAYC,KAAKC,WAAWD,CAAX,EAAcF,CAAd,CAAjB,CAAlB;;AAEA,MAAMI,cAAcC,YAAY;AAC9B,UAAQA,SAASC,WAAjB;AACE,SAAK,MAAL;AACA,SAAK,OAAL;AACE,aAAOD,SAASE,OAAhB;AACF,SAAK,cAAL;AACE,aAAOF,SAASG,WAAhB;AACF;AACE;AAPJ;AASD,CAVD;;AAYA,MAAMC,kBAAkB;AACtB;AACA;AACA;AACA;AACA,mBAAiBC,MAAjB,EAAyBL,QAAzB,EAAmC;AACjCM,YAAQC,IAAR,CACG,GAAEd,SAAU,gDAA+CO,SAASQ,IAAK,EAD5E;AAGD,GATqB;AAUtBC,WAAS;AACP;AACD,GAZqB;AAatBC,QAAMC,CAAN,EAASX,QAAT,EAAmB;AACjB,WAAOM,QAAQI,KAAR,CAAe,GAAEjB,SAAU,qBAAoBO,SAASU,KAAM,EAA9D,CAAP;AACD,GAfqB;AAgBtB,kBAAgBC,CAAhB,EAAmBX,QAAnB,EAA6B;AAC3B,UAAM,EAAEY,KAAF,EAASC,OAAT,KAAqBb,QAA3B;AACA,UAAM,EAAEc,OAAF,KAAcF,MAAMC,OAA1B;AACAC,YAAQC,WAAR;AACArB,SAAK,IAAL,EAAWsB,IAAX,CAAgB,MAAMF,QAAQG,IAAR,CAAalB,YAAYc,OAAZ,CAAb,KAAsCC,QAAQI,UAAR,EAA5D;AACD,GArBqB;AAsBtBC,UAAQd,MAAR,EAAgBL,QAAhB,EAA0B;AACxB,UAAM,EAAEoB,KAAF,KAAYpB,QAAlB;AACAK,WAAOgB,KAAP,CAAaD,KAAb;AACD,GAzBqB;AA0BtB,iBAAef,MAAf,EAAuBL,QAAvB,EAAiC;AAC/B,UAAM,EAAEsB,QAAF,KAAetB,QAArB;AACAK,WAAOkB,IAAP,CAAYC,WAAZ,CAAwBF,QAAxB;AACD,GA7BqB;AA8BtB,kBAAgBjB,MAAhB,EAAwBL,QAAxB,EAAkC;AAChCM,YAAQmB,GAAR,CAAa,GAAEhC,SAAU,iBAAgBY,OAAOkB,IAAP,CAAYG,GAAI,EAAzD;AACD;AAhCqB,CAAxB;;AAmCA,MAAMC,YAAYC,cAChBA,cAAcxB,eAAd,GACIA,gBAAgBwB,UAAhB,CADJ,GAEIxB,gBAAgB,gBAAhB,CAHN;;kBAKeC,UAAUwB,UAAU;AACjCF,YAAUE,OAAOrB,IAAjB,EAAuBH,MAAvB,EAA+BwB,MAA/B;AACD,C",
      "file": "handlers.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "const logPrefix = 'Adapter[discordJs]:'\n\nconst wait = t => new Promise(r => setTimeout(r, t))\n\nconst makeMessage = reaction => {\n  switch (reaction.contentType) {\n    case 'text':\n    case 'embed':\n      return reaction.content\n    case 'nlp-response':\n      return reaction.fulfillment\n    default:\n      return\n  }\n}\n\nconst platformActions = {\n  // action: {\n  //   input: { message: DiscordJs.Message },\n  //   message: { contentType: String, content: (String|Any) }\n  // }\n  'default-action'(client, reaction) {\n    console.warn(\n      `${logPrefix} I don't know what to do with reaction type: ${reaction.type}`,\n    )\n  },\n  ignore() {\n    return\n  },\n  error(_, reaction) {\n    return console.error(`${logPrefix} I have an error: ${reaction.error}`)\n  },\n  'message-reply'(_, reaction) {\n    const { input, message } = reaction\n    const { channel } = input.message\n    channel.startTyping()\n    wait(1000).then(() => channel.send(makeMessage(message)) && channel.stopTyping())\n  },\n  connect(client, reaction) {\n    const { token } = reaction\n    client.login(token)\n  },\n  'set-presence'(client, reaction) {\n    const { presence } = reaction\n    client.user.setPresence(presence)\n  },\n  'adapter-ready'(client, reaction) {\n    console.log(`${logPrefix} logged in as ${client.user.tag}`)\n  },\n}\n\nconst getAction = actionType =>\n  actionType in platformActions\n    ? platformActions[actionType]\n    : platformActions['default-action']\n\nexport default client => action => {\n  getAction(action.type)(client, action)\n}\n"
      ]
    },
    "mtime": 1522468754201
  },
  "{\"filename\":\"/app/bot/adapters/discordJs/marshalling.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/adapters/discordJs\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot/adapters/discordJs/marshalling.js",
      "filenameRelative": "/app/bot/adapters/discordJs/marshalling.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "marshalling.js",
      "sourceFileName": "marshalling.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/adapters/discordJs",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "marshalling"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = ({ message }) => ({\n  type: 'incoming-message',\n  message: {\n    msgId: message.id,\n    content: message.content,\n    authorId: message.author.id,\n    authorName: message.author.username,\n    channel: message.channel.id\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcnNoYWxsaW5nLmpzIl0sIm5hbWVzIjpbIm1lc3NhZ2UiLCJ0eXBlIiwibXNnSWQiLCJpZCIsImNvbnRlbnQiLCJhdXRob3JJZCIsImF1dGhvciIsImF1dGhvck5hbWUiLCJ1c2VybmFtZSIsImNoYW5uZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztrQkFBZSxDQUFDLEVBQUVBLE9BQUYsRUFBRCxNQUFrQjtBQUMvQkMsUUFBTSxrQkFEeUI7QUFFL0JELFdBQVM7QUFDUEUsV0FBT0YsUUFBUUcsRUFEUjtBQUVQQyxhQUFTSixRQUFRSSxPQUZWO0FBR1BDLGNBQVVMLFFBQVFNLE1BQVIsQ0FBZUgsRUFIbEI7QUFJUEksZ0JBQVlQLFFBQVFNLE1BQVIsQ0FBZUUsUUFKcEI7QUFLUEMsYUFBU1QsUUFBUVMsT0FBUixDQUFnQk47QUFMbEI7QUFGc0IsQ0FBbEIsQyIsImZpbGUiOiJtYXJzaGFsbGluZy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9hZGFwdGVycy9kaXNjb3JkSnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoeyBtZXNzYWdlIH0pID0+ICh7XG4gIHR5cGU6ICdpbmNvbWluZy1tZXNzYWdlJyxcbiAgbWVzc2FnZToge1xuICAgIG1zZ0lkOiBtZXNzYWdlLmlkLFxuICAgIGNvbnRlbnQ6IG1lc3NhZ2UuY29udGVudCxcbiAgICBhdXRob3JJZDogbWVzc2FnZS5hdXRob3IuaWQsXG4gICAgYXV0aG9yTmFtZTogbWVzc2FnZS5hdXRob3IudXNlcm5hbWUsXG4gICAgY2hhbm5lbDogbWVzc2FnZS5jaGFubmVsLmlkLFxuICB9LFxufSlcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "marshalling.js"
      ],
      "names": [
        "message",
        "type",
        "msgId",
        "id",
        "content",
        "authorId",
        "author",
        "authorName",
        "username",
        "channel"
      ],
      "mappings": ";;;;;;kBAAe,CAAC,EAAEA,OAAF,EAAD,MAAkB;AAC/BC,QAAM,kBADyB;AAE/BD,WAAS;AACPE,WAAOF,QAAQG,EADR;AAEPC,aAASJ,QAAQI,OAFV;AAGPC,cAAUL,QAAQM,MAAR,CAAeH,EAHlB;AAIPI,gBAAYP,QAAQM,MAAR,CAAeE,QAJpB;AAKPC,aAAST,QAAQS,OAAR,CAAgBN;AALlB;AAFsB,CAAlB,C",
      "file": "marshalling.js",
      "sourceRoot": "/app/bot/adapters/discordJs",
      "sourcesContent": [
        "export default ({ message }) => ({\n  type: 'incoming-message',\n  message: {\n    msgId: message.id,\n    content: message.content,\n    authorId: message.author.id,\n    authorName: message.author.username,\n    channel: message.channel.id,\n  },\n})\n"
      ]
    },
    "mtime": 1522458936009
  },
  "{\"filename\":\"/app/bot/skills/conversation/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/conversation\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../memory/shortTerm",
            "imported": [
              "addTopic"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "addTopic",
                "local": "addTopic"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ctx"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ctx",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/conversation/index.js",
      "filenameRelative": "/app/bot/skills/conversation/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/bot/skills/conversation",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/conversation",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (ctx) {\n  let conversation = conversations.get(ctx.input.authorId);\n  if (conversation) {\n    conversation.messages.push(ctx.input);\n    conversation.isActive = true;\n  } else {\n    conversation = conversationFactory(ctx.input);\n  }\n  conversations.set(ctx.input.authorId, conversation);\n\n  return _extends({}, ctx, { conversation });\n};\n\nvar _shortTerm = require('../memory/shortTerm');\n\nconst conversations = (0, _shortTerm.addTopic)('conversations', { stdTTL: 300 });\nconst conversationFactory = input => ({\n  id: input.authorId,\n  lastSeen: new Date(),\n  messages: [input],\n  isActive: false\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImN0eCIsImNvbnZlcnNhdGlvbiIsImNvbnZlcnNhdGlvbnMiLCJnZXQiLCJpbnB1dCIsImF1dGhvcklkIiwibWVzc2FnZXMiLCJwdXNoIiwiaXNBY3RpdmUiLCJjb252ZXJzYXRpb25GYWN0b3J5Iiwic2V0Iiwic3RkVFRMIiwiaWQiLCJsYXN0U2VlbiIsIkRhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O2tCQVVlLFVBQVVBLEdBQVYsRUFBZTtBQUM1QixNQUFJQyxlQUFlQyxjQUFjQyxHQUFkLENBQWtCSCxJQUFJSSxLQUFKLENBQVVDLFFBQTVCLENBQW5CO0FBQ0EsTUFBSUosWUFBSixFQUFrQjtBQUNoQkEsaUJBQWFLLFFBQWIsQ0FBc0JDLElBQXRCLENBQTJCUCxJQUFJSSxLQUEvQjtBQUNBSCxpQkFBYU8sUUFBYixHQUF3QixJQUF4QjtBQUNELEdBSEQsTUFHTztBQUNMUCxtQkFBZVEsb0JBQW9CVCxJQUFJSSxLQUF4QixDQUFmO0FBQ0Q7QUFDREYsZ0JBQWNRLEdBQWQsQ0FBa0JWLElBQUlJLEtBQUosQ0FBVUMsUUFBNUIsRUFBc0NKLFlBQXRDOztBQUVBLHNCQUFZRCxHQUFaLElBQWlCQyxZQUFqQjtBQUNELEM7O0FBckJEOztBQUVBLE1BQU1DLGdCQUFnQix5QkFBUyxlQUFULEVBQTBCLEVBQUVTLFFBQVEsR0FBVixFQUExQixDQUF0QjtBQUNBLE1BQU1GLHNCQUFzQkwsVUFBVTtBQUNwQ1EsTUFBSVIsTUFBTUMsUUFEMEI7QUFFcENRLFlBQVUsSUFBSUMsSUFBSixFQUYwQjtBQUdwQ1IsWUFBVSxDQUFDRixLQUFELENBSDBCO0FBSXBDSSxZQUFVO0FBSjBCLENBQVYsQ0FBNUIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9ib3Qvc2tpbGxzL2NvbnZlcnNhdGlvbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFRvcGljIH0gZnJvbSAnLi4vbWVtb3J5L3Nob3J0VGVybSdcblxuY29uc3QgY29udmVyc2F0aW9ucyA9IGFkZFRvcGljKCdjb252ZXJzYXRpb25zJywgeyBzdGRUVEw6IDMwMCB9KVxuY29uc3QgY29udmVyc2F0aW9uRmFjdG9yeSA9IGlucHV0ID0+ICh7XG4gIGlkOiBpbnB1dC5hdXRob3JJZCxcbiAgbGFzdFNlZW46IG5ldyBEYXRlKCksXG4gIG1lc3NhZ2VzOiBbaW5wdXRdLFxuICBpc0FjdGl2ZTogZmFsc2UsXG59KVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoY3R4KSB7XG4gIGxldCBjb252ZXJzYXRpb24gPSBjb252ZXJzYXRpb25zLmdldChjdHguaW5wdXQuYXV0aG9ySWQpXG4gIGlmIChjb252ZXJzYXRpb24pIHtcbiAgICBjb252ZXJzYXRpb24ubWVzc2FnZXMucHVzaChjdHguaW5wdXQpXG4gICAgY29udmVyc2F0aW9uLmlzQWN0aXZlID0gdHJ1ZVxuICB9IGVsc2Uge1xuICAgIGNvbnZlcnNhdGlvbiA9IGNvbnZlcnNhdGlvbkZhY3RvcnkoY3R4LmlucHV0KVxuICB9XG4gIGNvbnZlcnNhdGlvbnMuc2V0KGN0eC5pbnB1dC5hdXRob3JJZCwgY29udmVyc2F0aW9uKVxuXG4gIHJldHVybiB7IC4uLmN0eCwgY29udmVyc2F0aW9uIH1cbn1cblxuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ctx",
        "conversation",
        "conversations",
        "get",
        "input",
        "authorId",
        "messages",
        "push",
        "isActive",
        "conversationFactory",
        "set",
        "stdTTL",
        "id",
        "lastSeen",
        "Date"
      ],
      "mappings": ";;;;;;;;kBAUe,UAAUA,GAAV,EAAe;AAC5B,MAAIC,eAAeC,cAAcC,GAAd,CAAkBH,IAAII,KAAJ,CAAUC,QAA5B,CAAnB;AACA,MAAIJ,YAAJ,EAAkB;AAChBA,iBAAaK,QAAb,CAAsBC,IAAtB,CAA2BP,IAAII,KAA/B;AACAH,iBAAaO,QAAb,GAAwB,IAAxB;AACD,GAHD,MAGO;AACLP,mBAAeQ,oBAAoBT,IAAII,KAAxB,CAAf;AACD;AACDF,gBAAcQ,GAAd,CAAkBV,IAAII,KAAJ,CAAUC,QAA5B,EAAsCJ,YAAtC;;AAEA,sBAAYD,GAAZ,IAAiBC,YAAjB;AACD,C;;AArBD;;AAEA,MAAMC,gBAAgB,yBAAS,eAAT,EAA0B,EAAES,QAAQ,GAAV,EAA1B,CAAtB;AACA,MAAMF,sBAAsBL,UAAU;AACpCQ,MAAIR,MAAMC,QAD0B;AAEpCQ,YAAU,IAAIC,IAAJ,EAF0B;AAGpCR,YAAU,CAACF,KAAD,CAH0B;AAIpCI,YAAU;AAJ0B,CAAV,CAA5B",
      "file": "index.js",
      "sourceRoot": "/app/bot/skills/conversation",
      "sourcesContent": [
        "import { addTopic } from '../memory/shortTerm'\n\nconst conversations = addTopic('conversations', { stdTTL: 300 })\nconst conversationFactory = input => ({\n  id: input.authorId,\n  lastSeen: new Date(),\n  messages: [input],\n  isActive: false,\n})\n\nexport default function (ctx) {\n  let conversation = conversations.get(ctx.input.authorId)\n  if (conversation) {\n    conversation.messages.push(ctx.input)\n    conversation.isActive = true\n  } else {\n    conversation = conversationFactory(ctx.input)\n  }\n  conversations.set(ctx.input.authorId, conversation)\n\n  return { ...ctx, conversation }\n}\n\n"
      ]
    },
    "mtime": 1522460897290
  },
  "{\"filename\":\"/app/bot/skills/memory/shortTerm.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot/skills/memory\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "node-cache",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "NodeCache"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "addTopic",
            "getTopic"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "addTopic",
              "exported": "addTopic"
            },
            {
              "kind": "local",
              "local": "getTopic",
              "exported": "getTopic"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/skills/memory/shortTerm.js",
      "filenameRelative": "/app/bot/skills/memory/shortTerm.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "shortTerm.js",
      "sourceFileName": "shortTerm.js",
      "sourceRoot": "/app/bot/skills/memory",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot/skills/memory",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "shortTerm"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTopic = exports.addTopic = undefined;\n\nvar _nodeCache = require('node-cache');\n\nvar _nodeCache2 = _interopRequireDefault(_nodeCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// this will be mutated\nconst topics = {};\n\nconst getAllTopics = () => topics;\n\nconst addTopic = exports.addTopic = (topicId, options = {}) => getTopic(topicId) || Object.assign(topics, { [topicId]: new _nodeCache2.default(options) })[topicId];\n\nconst getTopic = exports.getTopic = topicId => topics.hasOwnProperty(topicId) && topics[topicId];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3J0VGVybS5qcyJdLCJuYW1lcyI6WyJ0b3BpY3MiLCJnZXRBbGxUb3BpY3MiLCJhZGRUb3BpYyIsInRvcGljSWQiLCJvcHRpb25zIiwiZ2V0VG9waWMiLCJPYmplY3QiLCJhc3NpZ24iLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7QUFFQTtBQUNBLE1BQU1BLFNBQVMsRUFBZjs7QUFFQSxNQUFNQyxlQUFlLE1BQU1ELE1BQTNCOztBQUVPLE1BQU1FLDhCQUFXLENBQUNDLE9BQUQsRUFBVUMsVUFBVSxFQUFwQixLQUN0QkMsU0FBU0YsT0FBVCxLQUNBRyxPQUFPQyxNQUFQLENBQWNQLE1BQWQsRUFBc0IsRUFBRSxDQUFDRyxPQUFELEdBQVcsd0JBQWNDLE9BQWQsQ0FBYixFQUF0QixFQUE2REQsT0FBN0QsQ0FGSzs7QUFJQSxNQUFNRSw4QkFBV0YsV0FDdEJILE9BQU9RLGNBQVAsQ0FBc0JMLE9BQXRCLEtBQWtDSCxPQUFPRyxPQUFQLENBRDdCIiwiZmlsZSI6InNob3J0VGVybS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdC9za2lsbHMvbWVtb3J5Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGVDYWNoZSBmcm9tICdub2RlLWNhY2hlJ1xuXG4vLyB0aGlzIHdpbGwgYmUgbXV0YXRlZFxuY29uc3QgdG9waWNzID0ge31cblxuY29uc3QgZ2V0QWxsVG9waWNzID0gKCkgPT4gdG9waWNzXG5cbmV4cG9ydCBjb25zdCBhZGRUb3BpYyA9ICh0b3BpY0lkLCBvcHRpb25zID0ge30pID0+XG4gIGdldFRvcGljKHRvcGljSWQpIHx8XG4gIE9iamVjdC5hc3NpZ24odG9waWNzLCB7IFt0b3BpY0lkXTogbmV3IE5vZGVDYWNoZShvcHRpb25zKSB9KVt0b3BpY0lkXVxuXG5leHBvcnQgY29uc3QgZ2V0VG9waWMgPSB0b3BpY0lkID0+XG4gIHRvcGljcy5oYXNPd25Qcm9wZXJ0eSh0b3BpY0lkKSAmJiB0b3BpY3NbdG9waWNJZF1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "shortTerm.js"
      ],
      "names": [
        "topics",
        "getAllTopics",
        "addTopic",
        "topicId",
        "options",
        "getTopic",
        "Object",
        "assign",
        "hasOwnProperty"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;AAEA;AACA,MAAMA,SAAS,EAAf;;AAEA,MAAMC,eAAe,MAAMD,MAA3B;;AAEO,MAAME,8BAAW,CAACC,OAAD,EAAUC,UAAU,EAApB,KACtBC,SAASF,OAAT,KACAG,OAAOC,MAAP,CAAcP,MAAd,EAAsB,EAAE,CAACG,OAAD,GAAW,wBAAcC,OAAd,CAAb,EAAtB,EAA6DD,OAA7D,CAFK;;AAIA,MAAME,8BAAWF,WACtBH,OAAOQ,cAAP,CAAsBL,OAAtB,KAAkCH,OAAOG,OAAP,CAD7B",
      "file": "shortTerm.js",
      "sourceRoot": "/app/bot/skills/memory",
      "sourcesContent": [
        "import NodeCache from 'node-cache'\n\n// this will be mutated\nconst topics = {}\n\nconst getAllTopics = () => topics\n\nexport const addTopic = (topicId, options = {}) =>\n  getTopic(topicId) ||\n  Object.assign(topics, { [topicId]: new NodeCache(options) })[topicId]\n\nexport const getTopic = topicId =>\n  topics.hasOwnProperty(topicId) && topics[topicId]\n"
      ]
    },
    "mtime": 1522459046038
  },
  "{\"filename\":\"/app/bot/contexts.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/bot\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "contextFactory",
            "asyncUnwrapContext"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "contextFactory",
              "exported": "contextFactory"
            },
            {
              "kind": "local",
              "local": "asyncUnwrapContext",
              "exported": "asyncUnwrapContext"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/bot/contexts.js",
      "filenameRelative": "/app/bot/contexts.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "contexts.js",
      "sourceFileName": "contexts.js",
      "sourceRoot": "/app/bot",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/bot",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "contexts"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst contextFactory = exports.contextFactory = (services, platform) => input => ({\n  startedAt: new Date(),\n  platform,\n  message: input,\n  input,\n  services,\n  reaction: { type: 'ignore' },\n  analysis: {},\n  handled: false\n});\n\nconst asyncUnwrapContext = exports.asyncUnwrapContext = async ctx => (await ctx).reaction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRleHRzLmpzIl0sIm5hbWVzIjpbImNvbnRleHRGYWN0b3J5Iiwic2VydmljZXMiLCJwbGF0Zm9ybSIsImlucHV0Iiwic3RhcnRlZEF0IiwiRGF0ZSIsIm1lc3NhZ2UiLCJyZWFjdGlvbiIsInR5cGUiLCJhbmFseXNpcyIsImhhbmRsZWQiLCJhc3luY1Vud3JhcENvbnRleHQiLCJjdHgiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsMENBQWlCLENBQUNDLFFBQUQsRUFBV0MsUUFBWCxLQUF3QkMsVUFBVTtBQUM5REMsYUFBVyxJQUFJQyxJQUFKLEVBRG1EO0FBRTlESCxVQUY4RDtBQUc5REksV0FBU0gsS0FIcUQ7QUFJOURBLE9BSjhEO0FBSzlERixVQUw4RDtBQU05RE0sWUFBVSxFQUFFQyxNQUFNLFFBQVIsRUFOb0Q7QUFPOURDLFlBQVUsRUFQb0Q7QUFROURDLFdBQVM7QUFScUQsQ0FBVixDQUEvQzs7QUFXQSxNQUFNQyxrREFBcUIsTUFBTUMsR0FBTixJQUFhLENBQUMsTUFBTUEsR0FBUCxFQUFZTCxRQUFwRCIsImZpbGUiOiJjb250ZXh0cy5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL2JvdCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjb250ZXh0RmFjdG9yeSA9IChzZXJ2aWNlcywgcGxhdGZvcm0pID0+IGlucHV0ID0+ICh7XG4gIHN0YXJ0ZWRBdDogbmV3IERhdGUoKSxcbiAgcGxhdGZvcm0sXG4gIG1lc3NhZ2U6IGlucHV0LFxuICBpbnB1dCxcbiAgc2VydmljZXMsXG4gIHJlYWN0aW9uOiB7IHR5cGU6ICdpZ25vcmUnIH0sXG4gIGFuYWx5c2lzOiB7fSxcbiAgaGFuZGxlZDogZmFsc2UsXG59KVxuXG5leHBvcnQgY29uc3QgYXN5bmNVbndyYXBDb250ZXh0ID0gYXN5bmMgY3R4ID0+IChhd2FpdCBjdHgpLnJlYWN0aW9uXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "contexts.js"
      ],
      "names": [
        "contextFactory",
        "services",
        "platform",
        "input",
        "startedAt",
        "Date",
        "message",
        "reaction",
        "type",
        "analysis",
        "handled",
        "asyncUnwrapContext",
        "ctx"
      ],
      "mappings": ";;;;;AAAO,MAAMA,0CAAiB,CAACC,QAAD,EAAWC,QAAX,KAAwBC,UAAU;AAC9DC,aAAW,IAAIC,IAAJ,EADmD;AAE9DH,UAF8D;AAG9DI,WAASH,KAHqD;AAI9DA,OAJ8D;AAK9DF,UAL8D;AAM9DM,YAAU,EAAEC,MAAM,QAAR,EANoD;AAO9DC,YAAU,EAPoD;AAQ9DC,WAAS;AARqD,CAAV,CAA/C;;AAWA,MAAMC,kDAAqB,MAAMC,GAAN,IAAa,CAAC,MAAMA,GAAP,EAAYL,QAApD",
      "file": "contexts.js",
      "sourceRoot": "/app/bot",
      "sourcesContent": [
        "export const contextFactory = (services, platform) => input => ({\n  startedAt: new Date(),\n  platform,\n  message: input,\n  input,\n  services,\n  reaction: { type: 'ignore' },\n  analysis: {},\n  handled: false,\n})\n\nexport const asyncUnwrapContext = async ctx => (await ctx).reaction\n"
      ]
    },
    "mtime": 1522459065719
  },
  "{\"filename\":\"/app/servers/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./web",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getWebServer"
              }
            ]
          },
          {
            "source": "./sockets",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "getSocketsServer"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/servers/index.js",
      "filenameRelative": "/app/servers/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _web = require('./web');\n\nvar _web2 = _interopRequireDefault(_web);\n\nvar _sockets = require('./sockets');\n\nvar _sockets2 = _interopRequireDefault(_sockets);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import getDatabaseConnection from './database';\n\nexports.default = async () => {\n  const webServer = await (0, _web2.default)();\n  const webSocketServer = await (0, _sockets2.default)(webServer);\n  // const databaseConnection = await getDatabaseConnection();\n\n  return {\n    ws: webServer,\n    wss: webSocketServer\n    // db: databaseConnection,\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIndlYlNlcnZlciIsIndlYlNvY2tldFNlcnZlciIsIndzIiwid3NzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7QUFDQTs7a0JBRWUsWUFBWTtBQUN6QixRQUFNQSxZQUFZLE1BQU0sb0JBQXhCO0FBQ0EsUUFBTUMsa0JBQWtCLE1BQU0sdUJBQWlCRCxTQUFqQixDQUE5QjtBQUNBOztBQUVBLFNBQU87QUFDTEUsUUFBSUYsU0FEQztBQUVMRyxTQUFLRjtBQUNMO0FBSEssR0FBUDtBQUtELEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdldFdlYlNlcnZlciBmcm9tICcuL3dlYidcbmltcG9ydCBnZXRTb2NrZXRzU2VydmVyIGZyb20gJy4vc29ja2V0cydcbi8vIGltcG9ydCBnZXREYXRhYmFzZUNvbm5lY3Rpb24gZnJvbSAnLi9kYXRhYmFzZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jICgpID0+IHtcbiAgY29uc3Qgd2ViU2VydmVyID0gYXdhaXQgZ2V0V2ViU2VydmVyKClcbiAgY29uc3Qgd2ViU29ja2V0U2VydmVyID0gYXdhaXQgZ2V0U29ja2V0c1NlcnZlcih3ZWJTZXJ2ZXIpXG4gIC8vIGNvbnN0IGRhdGFiYXNlQ29ubmVjdGlvbiA9IGF3YWl0IGdldERhdGFiYXNlQ29ubmVjdGlvbigpO1xuXG4gIHJldHVybiB7XG4gICAgd3M6IHdlYlNlcnZlcixcbiAgICB3c3M6IHdlYlNvY2tldFNlcnZlcixcbiAgICAvLyBkYjogZGF0YWJhc2VDb25uZWN0aW9uLFxuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "webServer",
        "webSocketServer",
        "ws",
        "wss"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;;;AACA;;kBAEe,YAAY;AACzB,QAAMA,YAAY,MAAM,oBAAxB;AACA,QAAMC,kBAAkB,MAAM,uBAAiBD,SAAjB,CAA9B;AACA;;AAEA,SAAO;AACLE,QAAIF,SADC;AAELG,SAAKF;AACL;AAHK,GAAP;AAKD,C",
      "file": "index.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "import getWebServer from './web'\nimport getSocketsServer from './sockets'\n// import getDatabaseConnection from './database';\n\nexport default async () => {\n  const webServer = await getWebServer()\n  const webSocketServer = await getSocketsServer(webServer)\n  // const databaseConnection = await getDatabaseConnection();\n\n  return {\n    ws: webServer,\n    wss: webSocketServer,\n    // db: databaseConnection,\n  }\n}\n"
      ]
    },
    "mtime": 1521132004296
  },
  "{\"filename\":\"/app/servers/web.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "http",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "http"
              }
            ]
          },
          {
            "source": "morgan",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "morgan"
              }
            ]
          },
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "./utils/glitchKeepalive",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "keepAlive"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "getApp",
            "getServer",
            "runServer"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "getApp",
              "exported": "getApp"
            },
            {
              "kind": "local",
              "local": "getServer",
              "exported": "getServer"
            },
            {
              "kind": "local",
              "local": "runServer",
              "exported": "runServer"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/web.js",
      "filenameRelative": "/app/servers/web.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "web.js",
      "sourceFileName": "web.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "web"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runServer = exports.getServer = exports.getApp = undefined;\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _morgan = require('morgan');\n\nvar _morgan2 = _interopRequireDefault(_morgan);\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _glitchKeepalive = require('./utils/glitchKeepalive');\n\nvar _glitchKeepalive2 = _interopRequireDefault(_glitchKeepalive);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Importamos la libreria con la implementacion de HTTP de Node\n// para poder servir contenido web y express para armar el servidor web\n// morgan es para hacer logs a la consola cuando el servidor procesa una peticion\nconst dialogFlowCredentials = 1;\n\n// Esta primera funcion configura la aplicacion de express que va a\n// correr en el servidor http\n\n\n// Esto es para mantener vivo el proceso cuando usamos Glitch\nconst getApp = exports.getApp = () => new Promise((resolve, reject) => {\n  try {\n    const app = (0, _express2.default)();\n\n    // esta ruta esta aqui para mantener vivo el server con un keepalive\n    app.get('/its-alive', (req, res) => res.json({ isAlive: true }));\n\n    // Aqui va la configuracion del servidor\n\n    // Esto habilita el log a la consola cuando estamos en modo development.\n    // if (process.env.NODE_ENV === 'development') app.use(morgan('tiny'))\n\n    // Aqui se pueden agregar mas rutas\n    // ...\n    app.get('/*', _express2.default.static('static'));\n\n    resolve(app);\n  } catch (err) {\n    reject(err);\n  }\n});\n\n// Esta function crea un servidor http\nconst getServer = exports.getServer = app => Promise.resolve(_http2.default.createServer(app));\n\n// Esta funcion corre el servidor web\nconst runServer = exports.runServer = ({ PORT }) => server => {\n  server.listen(PORT, () => console.log(`Express server running on port ${PORT}`));\n  (0, _glitchKeepalive2.default)();\n  return server;\n};\n\n// Esta es la funcion que vamos a exportar y que se encarga de\n// correr las otras tres funciones en orden.\n\nexports.default = () => getApp().then(getServer).then(runServer(process.env));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYi5qcyJdLCJuYW1lcyI6WyJkaWFsb2dGbG93Q3JlZGVudGlhbHMiLCJnZXRBcHAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImFwcCIsImdldCIsInJlcSIsInJlcyIsImpzb24iLCJpc0FsaXZlIiwic3RhdGljIiwiZXJyIiwiZ2V0U2VydmVyIiwiY3JlYXRlU2VydmVyIiwicnVuU2VydmVyIiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwicHJvY2VzcyIsImVudiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUdBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUdBOzs7Ozs7QUFSQTtBQUNBO0FBQ0E7QUFRQSxNQUFNQSx3QkFBd0IsQ0FBOUI7O0FBRUE7QUFDQTs7O0FBTkE7QUFPTyxNQUFNQywwQkFBUyxNQUNwQixJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQy9CLE1BQUk7QUFDRixVQUFNQyxNQUFNLHdCQUFaOztBQUVBO0FBQ0FBLFFBQUlDLEdBQUosQ0FBUSxZQUFSLEVBQXNCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjQSxJQUFJQyxJQUFKLENBQVMsRUFBRUMsU0FBUyxJQUFYLEVBQVQsQ0FBcEM7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0FMLFFBQUlDLEdBQUosQ0FBUSxJQUFSLEVBQWMsa0JBQVFLLE1BQVIsQ0FBZSxRQUFmLENBQWQ7O0FBRUFSLFlBQVFFLEdBQVI7QUFDRCxHQWhCRCxDQWdCRSxPQUFPTyxHQUFQLEVBQVk7QUFDWlIsV0FBT1EsR0FBUDtBQUNEO0FBQ0YsQ0FwQkQsQ0FESzs7QUF1QlA7QUFDTyxNQUFNQyxnQ0FBWVIsT0FBT0gsUUFBUUMsT0FBUixDQUFnQixlQUFLVyxZQUFMLENBQWtCVCxHQUFsQixDQUFoQixDQUF6Qjs7QUFFUDtBQUNPLE1BQU1VLGdDQUFZLENBQUMsRUFBRUMsSUFBRixFQUFELEtBQWNDLFVBQVU7QUFDL0NBLFNBQU9DLE1BQVAsQ0FBY0YsSUFBZCxFQUFvQixNQUNsQkcsUUFBUUMsR0FBUixDQUFhLGtDQUFpQ0osSUFBSyxFQUFuRCxDQURGO0FBR0E7QUFDQSxTQUFPQyxNQUFQO0FBQ0QsQ0FOTTs7QUFRUDtBQUNBOztrQkFDZSxNQUNiaEIsU0FDR29CLElBREgsQ0FDUVIsU0FEUixFQUVHUSxJQUZILENBRVFOLFVBQVVPLFFBQVFDLEdBQWxCLENBRlIsQyIsImZpbGUiOiJ3ZWIuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0YW1vcyBsYSBsaWJyZXJpYSBjb24gbGEgaW1wbGVtZW50YWNpb24gZGUgSFRUUCBkZSBOb2RlXG4vLyBwYXJhIHBvZGVyIHNlcnZpciBjb250ZW5pZG8gd2ViIHkgZXhwcmVzcyBwYXJhIGFybWFyIGVsIHNlcnZpZG9yIHdlYlxuLy8gbW9yZ2FuIGVzIHBhcmEgaGFjZXIgbG9ncyBhIGxhIGNvbnNvbGEgY3VhbmRvIGVsIHNlcnZpZG9yIHByb2Nlc2EgdW5hIHBldGljaW9uXG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuXG4vLyBFc3RvIGVzIHBhcmEgbWFudGVuZXIgdml2byBlbCBwcm9jZXNvIGN1YW5kbyB1c2Ftb3MgR2xpdGNoXG5pbXBvcnQga2VlcEFsaXZlIGZyb20gJy4vdXRpbHMvZ2xpdGNoS2VlcGFsaXZlJ1xuXG5jb25zdCBkaWFsb2dGbG93Q3JlZGVudGlhbHMgPSAxXG5cbi8vIEVzdGEgcHJpbWVyYSBmdW5jaW9uIGNvbmZpZ3VyYSBsYSBhcGxpY2FjaW9uIGRlIGV4cHJlc3MgcXVlIHZhIGFcbi8vIGNvcnJlciBlbiBlbCBzZXJ2aWRvciBodHRwXG5leHBvcnQgY29uc3QgZ2V0QXBwID0gKCkgPT5cbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBhcHAgPSBleHByZXNzKClcblxuICAgICAgLy8gZXN0YSBydXRhIGVzdGEgYXF1aSBwYXJhIG1hbnRlbmVyIHZpdm8gZWwgc2VydmVyIGNvbiB1biBrZWVwYWxpdmVcbiAgICAgIGFwcC5nZXQoJy9pdHMtYWxpdmUnLCAocmVxLCByZXMpID0+IHJlcy5qc29uKHsgaXNBbGl2ZTogdHJ1ZSB9KSlcblxuICAgICAgLy8gQXF1aSB2YSBsYSBjb25maWd1cmFjaW9uIGRlbCBzZXJ2aWRvclxuXG4gICAgICAvLyBFc3RvIGhhYmlsaXRhIGVsIGxvZyBhIGxhIGNvbnNvbGEgY3VhbmRvIGVzdGFtb3MgZW4gbW9kbyBkZXZlbG9wbWVudC5cbiAgICAgIC8vIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JykgYXBwLnVzZShtb3JnYW4oJ3RpbnknKSlcblxuICAgICAgLy8gQXF1aSBzZSBwdWVkZW4gYWdyZWdhciBtYXMgcnV0YXNcbiAgICAgIC8vIC4uLlxuICAgICAgYXBwLmdldCgnLyonLCBleHByZXNzLnN0YXRpYygnc3RhdGljJykpXG5cbiAgICAgIHJlc29sdmUoYXBwKVxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmVqZWN0KGVycilcbiAgICB9XG4gIH0pXG5cbi8vIEVzdGEgZnVuY3Rpb24gY3JlYSB1biBzZXJ2aWRvciBodHRwXG5leHBvcnQgY29uc3QgZ2V0U2VydmVyID0gYXBwID0+IFByb21pc2UucmVzb2x2ZShodHRwLmNyZWF0ZVNlcnZlcihhcHApKVxuXG4vLyBFc3RhIGZ1bmNpb24gY29ycmUgZWwgc2Vydmlkb3Igd2ViXG5leHBvcnQgY29uc3QgcnVuU2VydmVyID0gKHsgUE9SVCB9KSA9PiBzZXJ2ZXIgPT4ge1xuICBzZXJ2ZXIubGlzdGVuKFBPUlQsICgpID0+XG4gICAgY29uc29sZS5sb2coYEV4cHJlc3Mgc2VydmVyIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YCksXG4gIClcbiAga2VlcEFsaXZlKClcbiAgcmV0dXJuIHNlcnZlclxufVxuXG4vLyBFc3RhIGVzIGxhIGZ1bmNpb24gcXVlIHZhbW9zIGEgZXhwb3J0YXIgeSBxdWUgc2UgZW5jYXJnYSBkZVxuLy8gY29ycmVyIGxhcyBvdHJhcyB0cmVzIGZ1bmNpb25lcyBlbiBvcmRlbi5cbmV4cG9ydCBkZWZhdWx0ICgpID0+XG4gIGdldEFwcCgpXG4gICAgLnRoZW4oZ2V0U2VydmVyKVxuICAgIC50aGVuKHJ1blNlcnZlcihwcm9jZXNzLmVudikpXG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "web.js"
      ],
      "names": [
        "dialogFlowCredentials",
        "getApp",
        "Promise",
        "resolve",
        "reject",
        "app",
        "get",
        "req",
        "res",
        "json",
        "isAlive",
        "static",
        "err",
        "getServer",
        "createServer",
        "runServer",
        "PORT",
        "server",
        "listen",
        "console",
        "log",
        "then",
        "process",
        "env"
      ],
      "mappings": ";;;;;;;AAGA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AARA;AACA;AACA;AAQA,MAAMA,wBAAwB,CAA9B;;AAEA;AACA;;;AANA;AAOO,MAAMC,0BAAS,MACpB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,MAAI;AACF,UAAMC,MAAM,wBAAZ;;AAEA;AACAA,QAAIC,GAAJ,CAAQ,YAAR,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAcA,IAAIC,IAAJ,CAAS,EAAEC,SAAS,IAAX,EAAT,CAApC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACAL,QAAIC,GAAJ,CAAQ,IAAR,EAAc,kBAAQK,MAAR,CAAe,QAAf,CAAd;;AAEAR,YAAQE,GAAR;AACD,GAhBD,CAgBE,OAAOO,GAAP,EAAY;AACZR,WAAOQ,GAAP;AACD;AACF,CApBD,CADK;;AAuBP;AACO,MAAMC,gCAAYR,OAAOH,QAAQC,OAAR,CAAgB,eAAKW,YAAL,CAAkBT,GAAlB,CAAhB,CAAzB;;AAEP;AACO,MAAMU,gCAAY,CAAC,EAAEC,IAAF,EAAD,KAAcC,UAAU;AAC/CA,SAAOC,MAAP,CAAcF,IAAd,EAAoB,MAClBG,QAAQC,GAAR,CAAa,kCAAiCJ,IAAK,EAAnD,CADF;AAGA;AACA,SAAOC,MAAP;AACD,CANM;;AAQP;AACA;;kBACe,MACbhB,SACGoB,IADH,CACQR,SADR,EAEGQ,IAFH,CAEQN,UAAUO,QAAQC,GAAlB,CAFR,C",
      "file": "web.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "// Importamos la libreria con la implementacion de HTTP de Node\n// para poder servir contenido web y express para armar el servidor web\n// morgan es para hacer logs a la consola cuando el servidor procesa una peticion\nimport http from 'http'\nimport morgan from 'morgan'\nimport express from 'express'\n\n// Esto es para mantener vivo el proceso cuando usamos Glitch\nimport keepAlive from './utils/glitchKeepalive'\n\nconst dialogFlowCredentials = 1\n\n// Esta primera funcion configura la aplicacion de express que va a\n// correr en el servidor http\nexport const getApp = () =>\n  new Promise((resolve, reject) => {\n    try {\n      const app = express()\n\n      // esta ruta esta aqui para mantener vivo el server con un keepalive\n      app.get('/its-alive', (req, res) => res.json({ isAlive: true }))\n\n      // Aqui va la configuracion del servidor\n\n      // Esto habilita el log a la consola cuando estamos en modo development.\n      // if (process.env.NODE_ENV === 'development') app.use(morgan('tiny'))\n\n      // Aqui se pueden agregar mas rutas\n      // ...\n      app.get('/*', express.static('static'))\n\n      resolve(app)\n    } catch (err) {\n      reject(err)\n    }\n  })\n\n// Esta function crea un servidor http\nexport const getServer = app => Promise.resolve(http.createServer(app))\n\n// Esta funcion corre el servidor web\nexport const runServer = ({ PORT }) => server => {\n  server.listen(PORT, () =>\n    console.log(`Express server running on port ${PORT}`),\n  )\n  keepAlive()\n  return server\n}\n\n// Esta es la funcion que vamos a exportar y que se encarga de\n// correr las otras tres funciones en orden.\nexport default () =>\n  getApp()\n    .then(getServer)\n    .then(runServer(process.env))\n"
      ]
    },
    "mtime": 1522017035571
  },
  "{\"filename\":\"/app/servers/utils/glitchKeepalive.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers/utils\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "request",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "request"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/servers/utils/glitchKeepalive.js",
      "filenameRelative": "/app/servers/utils/glitchKeepalive.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "glitchKeepalive.js",
      "sourceFileName": "glitchKeepalive.js",
      "sourceRoot": "/app/servers/utils",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers/utils",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "glitchKeepalive"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = () => {\n  const reqOpts = {\n    url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me/its-alive'\n  };\n  const keepalive = () => (0, _request2.default)(reqOpts, () => setTimeout(() => keepalive(), 55000));\n  // if this is running on Glitch, call self every 55 secs\n  if (process.env.PROJECT_DOMAIN) keepalive();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsaXRjaEtlZXBhbGl2ZS5qcyJdLCJuYW1lcyI6WyJyZXFPcHRzIiwidXJsIiwicHJvY2VzcyIsImVudiIsIlBST0pFQ1RfRE9NQUlOIiwia2VlcGFsaXZlIiwic2V0VGltZW91dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7OztrQkFFZSxNQUFNO0FBQ25CLFFBQU1BLFVBQVU7QUFDZEMsU0FBSyxZQUFZQyxRQUFRQyxHQUFSLENBQVlDLGNBQXhCLEdBQXlDO0FBRGhDLEdBQWhCO0FBR0EsUUFBTUMsWUFBWSxNQUNoQix1QkFBUUwsT0FBUixFQUFpQixNQUFNTSxXQUFXLE1BQU1ELFdBQWpCLEVBQThCLEtBQTlCLENBQXZCLENBREY7QUFFQTtBQUNBLE1BQUlILFFBQVFDLEdBQVIsQ0FBWUMsY0FBaEIsRUFBZ0NDO0FBQ2pDLEMiLCJmaWxlIjoiZ2xpdGNoS2VlcGFsaXZlLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVycy91dGlscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByZXF1ZXN0IGZyb20gJ3JlcXVlc3QnXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgY29uc3QgcmVxT3B0cyA9IHtcbiAgICB1cmw6ICdodHRwOi8vJyArIHByb2Nlc3MuZW52LlBST0pFQ1RfRE9NQUlOICsgJy5nbGl0Y2gubWUvaXRzLWFsaXZlJyxcbiAgfVxuICBjb25zdCBrZWVwYWxpdmUgPSAoKSA9PlxuICAgIHJlcXVlc3QocmVxT3B0cywgKCkgPT4gc2V0VGltZW91dCgoKSA9PiBrZWVwYWxpdmUoKSwgNTUwMDApKVxuICAvLyBpZiB0aGlzIGlzIHJ1bm5pbmcgb24gR2xpdGNoLCBjYWxsIHNlbGYgZXZlcnkgNTUgc2Vjc1xuICBpZiAocHJvY2Vzcy5lbnYuUFJPSkVDVF9ET01BSU4pIGtlZXBhbGl2ZSgpXG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "glitchKeepalive.js"
      ],
      "names": [
        "reqOpts",
        "url",
        "process",
        "env",
        "PROJECT_DOMAIN",
        "keepalive",
        "setTimeout"
      ],
      "mappings": ";;;;;;AAAA;;;;;;kBAEe,MAAM;AACnB,QAAMA,UAAU;AACdC,SAAK,YAAYC,QAAQC,GAAR,CAAYC,cAAxB,GAAyC;AADhC,GAAhB;AAGA,QAAMC,YAAY,MAChB,uBAAQL,OAAR,EAAiB,MAAMM,WAAW,MAAMD,WAAjB,EAA8B,KAA9B,CAAvB,CADF;AAEA;AACA,MAAIH,QAAQC,GAAR,CAAYC,cAAhB,EAAgCC;AACjC,C",
      "file": "glitchKeepalive.js",
      "sourceRoot": "/app/servers/utils",
      "sourcesContent": [
        "import request from 'request'\n\nexport default () => {\n  const reqOpts = {\n    url: 'http://' + process.env.PROJECT_DOMAIN + '.glitch.me/its-alive',\n  }\n  const keepalive = () =>\n    request(reqOpts, () => setTimeout(() => keepalive(), 55000))\n  // if this is running on Glitch, call self every 55 secs\n  if (process.env.PROJECT_DOMAIN) keepalive()\n}\n"
      ]
    },
    "mtime": 1522459136919
  },
  "{\"filename\":\"/app/servers/sockets.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "socket.io",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "SocketIo"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "server"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "server",
              "exported": "default"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/sockets.js",
      "filenameRelative": "/app/servers/sockets.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "sockets.js",
      "sourceFileName": "sockets.js",
      "sourceRoot": "/app/servers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "sockets"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (server) {\n  const io = new _socket2.default(server);\n\n  let totalConnections = 0;\n  let liveConnections = 0;\n\n  io.on('connection', socket => {\n    console.log(`new connection: ${socket.id}`);\n    totalConnections += 1;\n    liveConnections += 1;\n    io.sockets.emit('count', { total: totalConnections, live: liveConnections });\n    socket.on('disconnect', reason => {\n      console.log(`${socket.id} disconnected because: ${reason}`);\n      liveConnections -= 1;\n      io.sockets.emit('count', {\n        total: totalConnections,\n        live: liveConnections\n      });\n    });\n  });\n\n  return io;\n};\n\nvar _socket = require('socket.io');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvY2tldHMuanMiXSwibmFtZXMiOlsic2VydmVyIiwiaW8iLCJ0b3RhbENvbm5lY3Rpb25zIiwibGl2ZUNvbm5lY3Rpb25zIiwib24iLCJzb2NrZXQiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJzb2NrZXRzIiwiZW1pdCIsInRvdGFsIiwibGl2ZSIsInJlYXNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2tCQUNlLFVBQVNBLE1BQVQsRUFBaUI7QUFDOUIsUUFBTUMsS0FBSyxxQkFBYUQsTUFBYixDQUFYOztBQUVBLE1BQUlFLG1CQUFtQixDQUF2QjtBQUNBLE1BQUlDLGtCQUFrQixDQUF0Qjs7QUFFQUYsS0FBR0csRUFBSCxDQUFNLFlBQU4sRUFBb0JDLFVBQVU7QUFDNUJDLFlBQVFDLEdBQVIsQ0FBYSxtQkFBa0JGLE9BQU9HLEVBQUcsRUFBekM7QUFDQU4sd0JBQW9CLENBQXBCO0FBQ0FDLHVCQUFtQixDQUFuQjtBQUNBRixPQUFHUSxPQUFILENBQVdDLElBQVgsQ0FBZ0IsT0FBaEIsRUFBeUIsRUFBRUMsT0FBT1QsZ0JBQVQsRUFBMkJVLE1BQU1ULGVBQWpDLEVBQXpCO0FBQ0FFLFdBQU9ELEVBQVAsQ0FBVSxZQUFWLEVBQXdCUyxVQUFVO0FBQ2hDUCxjQUFRQyxHQUFSLENBQWEsR0FBRUYsT0FBT0csRUFBRywwQkFBeUJLLE1BQU8sRUFBekQ7QUFDQVYseUJBQW1CLENBQW5CO0FBQ0FGLFNBQUdRLE9BQUgsQ0FBV0MsSUFBWCxDQUFnQixPQUFoQixFQUF5QjtBQUN2QkMsZUFBT1QsZ0JBRGdCO0FBRXZCVSxjQUFNVDtBQUZpQixPQUF6QjtBQUlELEtBUEQ7QUFRRCxHQWJEOztBQWVBLFNBQU9GLEVBQVA7QUFDRCxDOztBQXZCRCIsImZpbGUiOiJzb2NrZXRzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTb2NrZXRJbyBmcm9tICdzb2NrZXQuaW8nXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJ2ZXIpIHtcbiAgY29uc3QgaW8gPSBuZXcgU29ja2V0SW8oc2VydmVyKVxuXG4gIGxldCB0b3RhbENvbm5lY3Rpb25zID0gMFxuICBsZXQgbGl2ZUNvbm5lY3Rpb25zID0gMFxuXG4gIGlvLm9uKCdjb25uZWN0aW9uJywgc29ja2V0ID0+IHtcbiAgICBjb25zb2xlLmxvZyhgbmV3IGNvbm5lY3Rpb246ICR7c29ja2V0LmlkfWApXG4gICAgdG90YWxDb25uZWN0aW9ucyArPSAxXG4gICAgbGl2ZUNvbm5lY3Rpb25zICs9IDFcbiAgICBpby5zb2NrZXRzLmVtaXQoJ2NvdW50JywgeyB0b3RhbDogdG90YWxDb25uZWN0aW9ucywgbGl2ZTogbGl2ZUNvbm5lY3Rpb25zIH0pXG4gICAgc29ja2V0Lm9uKCdkaXNjb25uZWN0JywgcmVhc29uID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3NvY2tldC5pZH0gZGlzY29ubmVjdGVkIGJlY2F1c2U6ICR7cmVhc29ufWApXG4gICAgICBsaXZlQ29ubmVjdGlvbnMgLT0gMVxuICAgICAgaW8uc29ja2V0cy5lbWl0KCdjb3VudCcsIHtcbiAgICAgICAgdG90YWw6IHRvdGFsQ29ubmVjdGlvbnMsXG4gICAgICAgIGxpdmU6IGxpdmVDb25uZWN0aW9ucyxcbiAgICAgIH0pXG4gICAgfSlcbiAgfSlcblxuICByZXR1cm4gaW9cbn1cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "sockets.js"
      ],
      "names": [
        "server",
        "io",
        "totalConnections",
        "liveConnections",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "sockets",
        "emit",
        "total",
        "live",
        "reason"
      ],
      "mappings": ";;;;;;kBACe,UAASA,MAAT,EAAiB;AAC9B,QAAMC,KAAK,qBAAaD,MAAb,CAAX;;AAEA,MAAIE,mBAAmB,CAAvB;AACA,MAAIC,kBAAkB,CAAtB;;AAEAF,KAAGG,EAAH,CAAM,YAAN,EAAoBC,UAAU;AAC5BC,YAAQC,GAAR,CAAa,mBAAkBF,OAAOG,EAAG,EAAzC;AACAN,wBAAoB,CAApB;AACAC,uBAAmB,CAAnB;AACAF,OAAGQ,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyB,EAAEC,OAAOT,gBAAT,EAA2BU,MAAMT,eAAjC,EAAzB;AACAE,WAAOD,EAAP,CAAU,YAAV,EAAwBS,UAAU;AAChCP,cAAQC,GAAR,CAAa,GAAEF,OAAOG,EAAG,0BAAyBK,MAAO,EAAzD;AACAV,yBAAmB,CAAnB;AACAF,SAAGQ,OAAH,CAAWC,IAAX,CAAgB,OAAhB,EAAyB;AACvBC,eAAOT,gBADgB;AAEvBU,cAAMT;AAFiB,OAAzB;AAID,KAPD;AAQD,GAbD;;AAeA,SAAOF,EAAP;AACD,C;;AAvBD",
      "file": "sockets.js",
      "sourceRoot": "/app/servers",
      "sourcesContent": [
        "import SocketIo from 'socket.io'\nexport default function(server) {\n  const io = new SocketIo(server)\n\n  let totalConnections = 0\n  let liveConnections = 0\n\n  io.on('connection', socket => {\n    console.log(`new connection: ${socket.id}`)\n    totalConnections += 1\n    liveConnections += 1\n    io.sockets.emit('count', { total: totalConnections, live: liveConnections })\n    socket.on('disconnect', reason => {\n      console.log(`${socket.id} disconnected because: ${reason}`)\n      liveConnections -= 1\n      io.sockets.emit('count', {\n        total: totalConnections,\n        live: liveConnections,\n      })\n    })\n  })\n\n  return io\n}\n"
      ]
    },
    "mtime": 1522487515878
  },
  "{\"filename\":\"/app/servers/helpers/socketLogger.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/servers/helpers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [
            "socketLogMiddleware"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "socketLogMiddleware",
              "exported": "socketLogMiddleware"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/servers/helpers/socketLogger.js",
      "filenameRelative": "/app/servers/helpers/socketLogger.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "socketLogger.js",
      "sourceFileName": "socketLogger.js",
      "sourceRoot": "/app/servers/helpers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/servers/helpers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "socketLogger"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = ctx => message => ctx.services.wss.sockets.emit('log', message);\n\nconst socketLogMiddleware = exports.socketLogMiddleware = ctx => {\n  console.log('hit');\n  ctx.services.wss.sockets.emit('log', ctx.message);\n  return ctx;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvY2tldExvZ2dlci5qcyJdLCJuYW1lcyI6WyJjdHgiLCJtZXNzYWdlIiwic2VydmljZXMiLCJ3c3MiLCJzb2NrZXRzIiwiZW1pdCIsInNvY2tldExvZ01pZGRsZXdhcmUiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7a0JBQWVBLE9BQU9DLFdBQ3BCRCxJQUFJRSxRQUFKLENBQWFDLEdBQWIsQ0FBaUJDLE9BQWpCLENBQXlCQyxJQUF6QixDQUE4QixLQUE5QixFQUFxQ0osT0FBckMsQzs7QUFFSyxNQUFNSyxvREFBc0JOLE9BQU87QUFDeENPLFVBQVFDLEdBQVIsQ0FBWSxLQUFaO0FBQ0FSLE1BQUlFLFFBQUosQ0FBYUMsR0FBYixDQUFpQkMsT0FBakIsQ0FBeUJDLElBQXpCLENBQThCLEtBQTlCLEVBQXFDTCxJQUFJQyxPQUF6QztBQUNBLFNBQU9ELEdBQVA7QUFDRCxDQUpNIiwiZmlsZSI6InNvY2tldExvZ2dlci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlcnMvaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGN0eCA9PiBtZXNzYWdlID0+IFxuICBjdHguc2VydmljZXMud3NzLnNvY2tldHMuZW1pdCgnbG9nJywgbWVzc2FnZSlcblxuZXhwb3J0IGNvbnN0IHNvY2tldExvZ01pZGRsZXdhcmUgPSBjdHggPT4ge1xuICBjb25zb2xlLmxvZygnaGl0JylcbiAgY3R4LnNlcnZpY2VzLndzcy5zb2NrZXRzLmVtaXQoJ2xvZycsIGN0eC5tZXNzYWdlKVxuICByZXR1cm4gY3R4XG59Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "socketLogger.js"
      ],
      "names": [
        "ctx",
        "message",
        "services",
        "wss",
        "sockets",
        "emit",
        "socketLogMiddleware",
        "console",
        "log"
      ],
      "mappings": ";;;;;;kBAAeA,OAAOC,WACpBD,IAAIE,QAAJ,CAAaC,GAAb,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,KAA9B,EAAqCJ,OAArC,C;;AAEK,MAAMK,oDAAsBN,OAAO;AACxCO,UAAQC,GAAR,CAAY,KAAZ;AACAR,MAAIE,QAAJ,CAAaC,GAAb,CAAiBC,OAAjB,CAAyBC,IAAzB,CAA8B,KAA9B,EAAqCL,IAAIC,OAAzC;AACA,SAAOD,GAAP;AACD,CAJM",
      "file": "socketLogger.js",
      "sourceRoot": "/app/servers/helpers",
      "sourcesContent": [
        "export default ctx => message => \n  ctx.services.wss.sockets.emit('log', message)\n\nexport const socketLogMiddleware = ctx => {\n  console.log('hit')\n  ctx.services.wss.sockets.emit('log', ctx.message)\n  return ctx\n}"
      ]
    },
    "mtime": 1522487448385
  }
}